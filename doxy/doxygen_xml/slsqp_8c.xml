<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="slsqp_8c" kind="file" language="C++">
    <compoundname>slsqp.c</compoundname>
    <includes refid="slsqp_8h" local="yes">splinepy/proximity/slsqp/slsqp.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="2">
        <label>splinepy/proximity/slsqp/slsqp.h</label>
        <link refid="slsqp_8h"/>
      </node>
      <node id="1">
        <label>slsqp.c</label>
        <link refid="slsqp_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>math.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="slsqp_8c_1affe776513b24d84b39af8ab0930fef7f" prot="public" static="no">
        <name>max</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>((a) &gt; (b) ? (a) : (b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="13" column="9" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="slsqp_8c_1ac6afabdc09a49a433ee19d8a9486056d" prot="public" static="no">
        <name>min</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>((a) &lt; (b) ? (a) : (b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="14" column="9" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="14" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="slsqp_8c_1a81305851d8fc81c7a4515d6d9b9123a6" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int c__0</definition>
        <argsstring></argsstring>
        <name>c__0</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="18" column="18" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int c__1</definition>
        <argsstring></argsstring>
        <name>c__1</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="19" column="18" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="slsqp_8c_1a6b800a656683f20e606bd642ac8e81cc" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int c__2</definition>
        <argsstring></argsstring>
        <name>c__2</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="20" column="18" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="20" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="slsqp_8c_1a39b11d874bd2f3722fed6bf2bb2c7c0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int slsqp</definition>
        <argsstring>(int *m, int *meq, int *la, int *n, double *x, double *xl, double *xu, double *f, double *c__, double *g, double *a, double *acc, int *iter, int *mode, double *w, int *l_w__, int *jw, int *l_jw__, double *alpha, double *f0, double *gs, double *h1, double *h2, double *h3, double *h4, double *t, double *t0, double *tol, int *iexact, int *incons, int *ireset, int *itermx, int *line, int *n1, int *n2, int *n3)</argsstring>
        <name>slsqp</name>
        <param>
          <type>int *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>meq</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>la</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>xl</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>xu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>c__</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>acc</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>l_w__</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>jw</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>l_jw__</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f0</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>gs</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>h2</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>h3</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>h4</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tol</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>iexact</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>incons</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ireset</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>itermx</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>line</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>n1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>n2</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>n3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="22" column="6" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="22" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="slsqp_8c_1ac9a4f95953ac5ea16fce54b9869e1e43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int slsqpb</definition>
        <argsstring>(int *m, int *meq, int *la, int *n, double *x, double *xl, double *xu, double *f, double *c__, double *g, double *a, double *acc, int *iter, int *mode, double *r__, double *l, double *x0, double *mu, double *s, double *u, double *v, double *w, int *iw, double *alpha, double *f0, double *gs, double *h1, double *h2, double *h3, double *h4, double *t, double *t0, double *tol, int *iexact, int *incons, int *ireset, int *itermx, int *line, int *n1, int *n2, int *n3)</argsstring>
        <name>slsqpb</name>
        <param>
          <type>int *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>meq</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>la</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>xl</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>xu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>c__</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>acc</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>r__</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>l</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>iw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f0</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>gs</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>h2</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>h3</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>h4</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tol</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>iexact</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>incons</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ireset</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>itermx</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>line</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>n1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>n2</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>n3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="145" column="6" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="145" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="slsqp_8c_1a7dfdca0e768acb4762246944df6064e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lsq</definition>
        <argsstring>(const int *m, const int *meq, const int *n, const int *nl, const int *la, const double *l, const double *g, const double *a, const double *b, const double *xl, const double *xu, double *x, double *y, double *w, int *jw, int *mode)</argsstring>
        <name>lsq</name>
        <param>
          <type>const int *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>meq</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>nl</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>la</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>xl</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>xu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>jw</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="583" column="6" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="583" bodyend="789"/>
      </memberdef>
      <memberdef kind="function" id="slsqp_8c_1a6c885899adf056165227634cd8ce8c2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lsei</definition>
        <argsstring>(double *c__, double *d__, double *e, double *f, double *g, double *h__, const int *lc, const int *mc, const int *le, const int *me, const int *lg, const int *mg, const int *n, double *x, double *xnrm, double *w, int *jw, int *mode)</argsstring>
        <name>lsei</name>
        <param>
          <type>double *</type>
          <declname>c__</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>d__</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>h__</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>mc</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>le</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>me</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>lg</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>mg</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>xnrm</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>jw</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="791" column="6" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="791" bodyend="1033"/>
      </memberdef>
      <memberdef kind="function" id="slsqp_8c_1a983278d976283a647607d8b4a35863c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lsi</definition>
        <argsstring>(double *e, double *f, double *g, double *h__, const int *le, const int *me, const int *lg, const int *mg, const int *n, double *x, double *xnorm, double *w, int *jw, int *mode)</argsstring>
        <name>lsi</name>
        <param>
          <type>double *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>h__</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>le</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>me</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>lg</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>mg</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>xnorm</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>jw</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="1035" column="6" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="1035" bodyend="1153"/>
      </memberdef>
      <memberdef kind="function" id="slsqp_8c_1af93a8bea55789bf3439530749194a41b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ldp</definition>
        <argsstring>(const double *g, const int *mg, const int *m, const int *n, const double *h__, double *x, double *xnorm, double *w, int *index, int *mode)</argsstring>
        <name>ldp</name>
        <param>
          <type>const double *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>mg</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>h__</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>xnorm</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="1155" column="6" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="1155" bodyend="1267"/>
      </memberdef>
      <memberdef kind="function" id="slsqp_8c_1a418a33363f316eb90f63962554971f91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nnls</definition>
        <argsstring>(double *a, const int *mda, const int *m, const int *n, double *b, double *x, double *rnorm, double *w, double *z__, int *index, int *mode)</argsstring>
        <name>nnls</name>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>mda</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rnorm</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>z__</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="1269" column="6" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="1269" bodyend="1527"/>
      </memberdef>
      <memberdef kind="function" id="slsqp_8c_1a932017376b1cfdcfb236231b5a68aa23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hfti</definition>
        <argsstring>(double *a, const int *mda, const int *m, const int *n, double *b, const int *mdb, const int *nb, const double *tau, int *krank, double *rnorm, double *h__, double *g, int *ip)</argsstring>
        <name>hfti</name>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>mda</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>mdb</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>nb</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>krank</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>rnorm</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>h__</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="1529" column="6" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="1529" bodyend="1771"/>
      </memberdef>
      <memberdef kind="function" id="slsqp_8c_1a28c37f92c3ee05f871d6e3c58a67ef7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int h12</definition>
        <argsstring>(const int *mode, const int *lpivot, const int *l1, const int *m, double *u, const int *iue, double *up, double *c__, const int *ice, const int *icv, const int *ncv)</argsstring>
        <name>h12</name>
        <param>
          <type>const int *</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>lpivot</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>iue</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>up</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>c__</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>ice</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>icv</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>ncv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="1773" column="6" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="1773" bodyend="1885"/>
      </memberdef>
      <memberdef kind="function" id="slsqp_8c_1af746a9e04b19fdfc067a84752a503ccc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ldl</definition>
        <argsstring>(const int *n, double *a, double *z__, const double *sigma, double *w)</argsstring>
        <name>ldl</name>
        <param>
          <type>const int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>z__</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="1888" column="1" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="1888" bodyend="1997"/>
      </memberdef>
      <memberdef kind="function" id="slsqp_8c_1a9b2e40140ae64d5dcc6aa1f8cd413226" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double linmin</definition>
        <argsstring>(int *mode, const double *ax, const double *bx, const double *f, const double *tol)</argsstring>
        <name>linmin</name>
        <param>
          <type>int *</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>ax</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>tol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="1999" column="8" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="1999" bodyend="2152"/>
      </memberdef>
      <memberdef kind="function" id="slsqp_8c_1a7d8f534b2d6396e7e4fe9430a7478f55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int daxpy_sl</definition>
        <argsstring>(const int *n, const double *da, const double *dx, const int *incx, double *dy, const int *incy)</argsstring>
        <name>daxpy_sl</name>
        <param>
          <type>const int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>incx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dy</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>incy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="2155" column="6" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="2155" bodyend="2225"/>
      </memberdef>
      <memberdef kind="function" id="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dcopy</definition>
        <argsstring>(const int *n, const double *dx, const int *incx, double *dy, const int *incy)</argsstring>
        <name>dcopy</name>
        <param>
          <type>const int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>incx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dy</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>incy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="2227" column="6" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="2227" bodyend="2296"/>
      </memberdef>
      <memberdef kind="function" id="slsqp_8c_1ab8f4bd9ffd53a9b1bae9e16e613c7fe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ddot_sl</definition>
        <argsstring>(const int *n, const double *dx, const int *incx, const double *dy, const int *incy)</argsstring>
        <name>ddot_sl</name>
        <param>
          <type>const int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>incx</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dy</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>incy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="2298" column="8" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="2298" bodyend="2370"/>
      </memberdef>
      <memberdef kind="function" id="slsqp_8c_1aff4f441d0ef8a288248ce241e9a25038" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double dnrm1</definition>
        <argsstring>(const int *n, const double *x, const int *i__, const int *j)</argsstring>
        <name>dnrm1</name>
        <param>
          <type>const int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>i__</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="2372" column="8" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="2372" bodyend="2422"/>
      </memberdef>
      <memberdef kind="function" id="slsqp_8c_1ae659bc9c1f411c00a88c25243eba595f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double dnrm2</definition>
        <argsstring>(const int *n, const double *dx, const int *incx)</argsstring>
        <name>dnrm2</name>
        <param>
          <type>const int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>incx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="2424" column="8" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="2424" bodyend="2545"/>
      </memberdef>
      <memberdef kind="function" id="slsqp_8c_1ab21b159dcf686c0a01d8bf4deef90608" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dsrot</definition>
        <argsstring>(const int *n, double *dx, const int *incx, double *dy, const int *incy, const double *c__, const double *s)</argsstring>
        <name>dsrot</name>
        <param>
          <type>const int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>incx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dy</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>incy</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>c__</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="2547" column="6" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="2547" bodyend="2602"/>
      </memberdef>
      <memberdef kind="function" id="slsqp_8c_1ab4a611e9eb900cbae0fd9ed8b13962bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dsrotg</definition>
        <argsstring>(double *da, double *db, double *c__, double *s)</argsstring>
        <name>dsrotg</name>
        <param>
          <type>double *</type>
          <declname>da</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>db</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>c__</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="2604" column="6" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="2604" bodyend="2645"/>
      </memberdef>
      <memberdef kind="function" id="slsqp_8c_1a42ae61b7465343cc4978a6c6560f78cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dscal_sl</definition>
        <argsstring>(const int *n, const double *da, double *dx, const int *incx)</argsstring>
        <name>dscal_sl</name>
        <param>
          <type>const int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>da</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>incx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="2648" column="1" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="2648" bodyend="2701"/>
      </memberdef>
      <memberdef kind="function" id="slsqp_8c_1ab68793d89fb57020efdd2bb3b451a27a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bound</definition>
        <argsstring>(const int *n, double *x, const double *xl, const double *xu)</argsstring>
        <name>bound</name>
        <param>
          <type>const int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>xl</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>xu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" line="2704" column="1" bodyfile="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c" bodystart="2704" bodyend="2727"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="slsqp_8h" kindref="compound">splinepy/proximity/slsqp/slsqp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::fabs,<sp/>std::sqrt,<sp/>std::copysign;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fabs,<sp/>sqrt,<sp/>copysign<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="slsqp_8c_1affe776513b24d84b39af8ab0930fef7f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>max(a,<sp/>b)<sp/>((a)<sp/>&gt;<sp/>(b)<sp/>?<sp/>(a)<sp/>:<sp/>(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="slsqp_8c_1ac6afabdc09a49a433ee19d8a9486056d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>min(a,<sp/>b)<sp/>((a)<sp/>&lt;<sp/>(b)<sp/>?<sp/>(a)<sp/>:<sp/>(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Table<sp/>of<sp/>constant<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="slsqp_8c_1a81305851d8fc81c7a4515d6d9b9123a6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="slsqp_8c_1a81305851d8fc81c7a4515d6d9b9123a6" kindref="member">c__0</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="19" refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="20" refid="slsqp_8c_1a6b800a656683f20e606bd642ac8e81cc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="slsqp_8c_1a6b800a656683f20e606bd642ac8e81cc" kindref="member">c__2</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="slsqp_8h_1ac0adb27ab06e12e9bdc0641ed7ff4f55" refkind="member"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Subroutine<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="slsqp_8c_1a39b11d874bd2f3722fed6bf2bb2c7c0d" kindref="member">slsqp</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>m,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>meq,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>la,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>xl,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>xu,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>f,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>c__,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>g,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>a,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>acc,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>iter,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>mode,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>w,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>l_w__,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>jw,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>l_jw__,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>alpha,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>f0,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>gs,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>h1,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>h2,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>h3,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>h4,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>t,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>t0,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>tol,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>iexact,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>incons,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>ireset,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>itermx,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>line,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n1,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n2,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n3)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>generated<sp/>locals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_dim1,<sp/>a_offset,<sp/>i__1,<sp/>i__2;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>il,<sp/>im,<sp/>ir,<sp/>is,<sp/>iu,<sp/>iv,<sp/>iw,<sp/>ix,<sp/>mineq;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parameter<sp/>adjustments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>--c__;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>a_dim1<sp/>=<sp/>*la;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>a_offset<sp/>=<sp/>1<sp/>+<sp/>a_dim1;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>a<sp/>-=<sp/>a_offset;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>--g;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>--xu;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>--xl;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>--x;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>--w;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>--jw;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Function<sp/>Body<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>*n1<sp/>=<sp/>*n<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>mineq<sp/>=<sp/>*m<sp/>-<sp/>*meq<sp/>+<sp/>*n1<sp/>+<sp/>*n1;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>il<sp/>=<sp/>(*n1<sp/>*<sp/>3<sp/>+<sp/>*m)<sp/>*<sp/>(*n1<sp/>+<sp/>1)<sp/>+<sp/>(*n1<sp/>-<sp/>*meq<sp/>+<sp/>1)<sp/>*<sp/>(mineq<sp/>+<sp/>2)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(mineq<sp/>&lt;&lt;<sp/>1)<sp/>+<sp/>(*n1<sp/>+<sp/>mineq)<sp/>*<sp/>(*n1<sp/>-<sp/>*meq)<sp/>+<sp/>(*meq<sp/>&lt;&lt;<sp/>1)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>*n1<sp/>*<sp/>*n<sp/>/<sp/>2<sp/>+<sp/>(*m<sp/>&lt;&lt;<sp/>1)<sp/>+<sp/>*n<sp/>*<sp/>3<sp/>+<sp/>(*n1<sp/>&lt;&lt;<sp/>2)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>MAX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>mineq,<sp/>i__2<sp/>=<sp/>*n1<sp/>-<sp/>*meq;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>im<sp/>=<sp/><ref refid="slsqp_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(i__1,<sp/>i__2);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*l_w__<sp/>&lt;<sp/>il<sp/>||<sp/>*l_jw__<sp/>&lt;<sp/>im)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>*mode<sp/>=<sp/><ref refid="slsqp_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(10,<sp/>il)<sp/>*<sp/>1000;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>*mode<sp/>+=<sp/><ref refid="slsqp_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(10,<sp/>im);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>PREPARE<sp/>DATA<sp/>FOR<sp/>CALLING<sp/>SQPBDY<sp/><sp/>-<sp/><sp/>INITIAL<sp/>ADDRESSES<sp/>IN<sp/>W<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>im<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>il<sp/>=<sp/>im<sp/>+<sp/><ref refid="slsqp_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(1,<sp/>*m);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>il<sp/>=<sp/>im<sp/>+<sp/>*la;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>ix<sp/>=<sp/>il<sp/>+<sp/>*n1<sp/>*<sp/>*n<sp/>/<sp/>2<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>ir<sp/>=<sp/>ix<sp/>+<sp/>*n;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>is<sp/>=<sp/>ir<sp/>+<sp/>*n<sp/>+<sp/>*n<sp/>+<sp/><ref refid="slsqp_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(1,<sp/>*m);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>is<sp/>=<sp/>ir<sp/>+<sp/>*n<sp/>+<sp/>*n<sp/>+<sp/>*la;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>iu<sp/>=<sp/>is<sp/>+<sp/>*n1;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>iv<sp/>=<sp/>iu<sp/>+<sp/>*n1;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>iw<sp/>=<sp/>iv<sp/>+<sp/>*n1;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1ac9a4f95953ac5ea16fce54b9869e1e43" kindref="member">slsqpb</ref>(m,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meq,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>la,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;x[1],</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;xl[1],</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;xu[1],</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;c__[1],</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;g[1],</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;a[a_offset],</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[ir],</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[il],</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[ix],</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[im],</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[is],</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[iu],</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[iv],</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[iw],</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;jw[1],</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f0,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gs,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h1,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h2,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h3,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h4,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tol,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iexact,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>incons,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ireset,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itermx,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n2,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n3);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>slsqp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="slsqp_8h_1ac9a4f95953ac5ea16fce54b9869e1e43" refkind="member"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Subroutine<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="slsqp_8c_1ac9a4f95953ac5ea16fce54b9869e1e43" kindref="member">slsqpb</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>m,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>meq,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>la,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>xl,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>xu,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>f,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>c__,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>g,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>a,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>acc,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>iter,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>mode,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>r__,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>l,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x0,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>mu,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>s,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>u,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>v,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>w,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>iw,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>alpha,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>f0,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>gs,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>h1,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>h2,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>h3,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>h4,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>t,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>t0,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>tol,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>iexact,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>incons,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>ireset,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>itermx,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>line,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n1,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n2,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n3)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialized<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zero<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>one<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alfmin<sp/>=<sp/>.1;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hun<sp/>=<sp/>100.;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ten<sp/>=<sp/>10.;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>two<sp/>=<sp/>2.;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>generated<sp/>locals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_dim1,<sp/>a_offset,<sp/>i__1,<sp/>i__2;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d__1,<sp/>d__2;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__,<sp/>j,<sp/>k;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>badlin;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parameter<sp/>adjustments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>--mu;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>--c__;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>--v;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>--u;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>--s;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>--x0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>--l;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>--r__;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>a_dim1<sp/>=<sp/>*la;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>a_offset<sp/>=<sp/>1<sp/>+<sp/>a_dim1;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>a<sp/>-=<sp/>a_offset;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>--g;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>--xu;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>--xl;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>--x;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>--w;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>--iw;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Function<sp/>Body<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/>The<sp/>badlin<sp/>flag<sp/>keeps<sp/>track<sp/>whether<sp/>the<sp/>SQP<sp/>problem<sp/>on<sp/>the<sp/>current<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/>iteration<sp/>was<sp/>inconsistent<sp/>or<sp/>not.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>badlin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*mode<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L260;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*mode<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L100;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L220;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal">L100:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>*itermx<sp/>=<sp/>*iter;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*acc<sp/>&gt;=<sp/>zero)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>*iexact<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>*iexact<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>*acc<sp/>=<sp/>fabs(*acc);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>*tol<sp/>=<sp/>ten<sp/>*<sp/>*acc;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>*iter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>*ireset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>*n1<sp/>=<sp/>*n<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>*n2<sp/>=<sp/>*n1<sp/>*<sp/>*n<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>*n3<sp/>=<sp/>*n2<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>s[1]<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>mu[1]<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(n,<sp/>&amp;s[1],<sp/>&amp;<ref refid="slsqp_8c_1a81305851d8fc81c7a4515d6d9b9123a6" kindref="member">c__0</ref>,<sp/>&amp;s[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(m,<sp/>&amp;mu[1],<sp/>&amp;<ref refid="slsqp_8c_1a81305851d8fc81c7a4515d6d9b9123a6" kindref="member">c__0</ref>,<sp/>&amp;mu[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/>RESET<sp/>BFGS<sp/>MATRIX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">L110:</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>++(*ireset);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ireset<sp/>&gt;<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L255;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>l[1]<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(n2,<sp/>&amp;l[1],<sp/>&amp;<ref refid="slsqp_8c_1a81305851d8fc81c7a4515d6d9b9123a6" kindref="member">c__0</ref>,<sp/>&amp;l[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>j<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>l[j]<sp/>=<sp/>one;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>j<sp/>+<sp/>*n1<sp/>-<sp/>i__;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L120:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/>MAIN<sp/>ITERATION<sp/>:<sp/>SEARCH<sp/>DIRECTION,<sp/>STEPLENGTH,<sp/>LDL&apos;-UPDATE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal">L130:</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>++(*iter);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>*mode<sp/>=<sp/>9;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*iter<sp/>&gt;<sp/>*itermx)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L330;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>SEARCH<sp/>DIRECTION<sp/>AS<sp/>SOLUTION<sp/>OF<sp/>QP<sp/>-<sp/>SUBPROBLEM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(n,<sp/>&amp;xl[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;u[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(n,<sp/>&amp;xu[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;v[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>d__1<sp/>=<sp/>-one;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a7d8f534b2d6396e7e4fe9430a7478f55" kindref="member">daxpy_sl</ref>(n,<sp/>&amp;d__1,<sp/>&amp;x[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;u[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>d__1<sp/>=<sp/>-one;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a7d8f534b2d6396e7e4fe9430a7478f55" kindref="member">daxpy_sl</ref>(n,<sp/>&amp;d__1,<sp/>&amp;x[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;v[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>*h4<sp/>=<sp/>one;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a7dfdca0e768acb4762246944df6064e5" kindref="member">lsq</ref>(m,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meq,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n3,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>la,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;l[1],</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;g[1],</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;a[a_offset],</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;c__[1],</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;u[1],</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v[1],</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;s[1],</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;r__[1],</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[1],</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;iw[1],</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mode);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>AUGMENTED<sp/>PROBLEM<sp/>FOR<sp/>INCONSISTENT<sp/>LINEARIZATION<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>If<sp/>it<sp/>turns<sp/>out<sp/>that<sp/>the<sp/>original<sp/>SQP<sp/>problem<sp/>is<sp/>inconsistent,<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>disallow<sp/>termination<sp/>with<sp/>convergence<sp/>on<sp/>this<sp/>iteration,<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>even<sp/>if<sp/>the<sp/>augmented<sp/>problem<sp/>was<sp/>solved.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>badlin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*mode<sp/>==<sp/>6)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*n<sp/>==<sp/>*meq)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*mode<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*mode<sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>badlin<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>i__1<sp/>=<sp/>*m;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>i__1;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;=<sp/>*meq)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[j<sp/>+<sp/>*n1<sp/>*<sp/>a_dim1]<sp/>=<sp/>-c__[j];</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>MAX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d__1<sp/>=<sp/>-c__[j];</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[j<sp/>+<sp/>*n1<sp/>*<sp/>a_dim1]<sp/>=<sp/><ref refid="slsqp_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(d__1,<sp/>zero);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L140:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>s[1]<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(n,<sp/>&amp;s[1],<sp/>&amp;<ref refid="slsqp_8c_1a81305851d8fc81c7a4515d6d9b9123a6" kindref="member">c__0</ref>,<sp/>&amp;s[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>*h3<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>g[*n1]<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>l[*n3]<sp/>=<sp/>hun;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>s[*n1]<sp/>=<sp/>one;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>u[*n1]<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>v[*n1]<sp/>=<sp/>one;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>*incons<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>L150:</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a7dfdca0e768acb4762246944df6064e5" kindref="member">lsq</ref>(m,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meq,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n3,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>la,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;l[1],</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;g[1],</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;a[a_offset],</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;c__[1],</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;u[1],</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v[1],</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;s[1],</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;r__[1],</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[1],</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;iw[1],</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>*h4<sp/>=<sp/>one<sp/>-<sp/>s[*n1];</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*mode<sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l[*n3]<sp/>=<sp/>ten<sp/>*<sp/>l[*n3];</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++(*incons);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*incons<sp/>&gt;<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L330;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L150;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*mode<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L330;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*mode<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L330;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>UPDATE<sp/>MULTIPLIERS<sp/>FOR<sp/>L1-TEST<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>v[i__]<sp/>=<sp/>g[i__]<sp/>-<sp/><ref refid="slsqp_8c_1ab8f4bd9ffd53a9b1bae9e16e613c7fe7" kindref="member">ddot_sl</ref>(m,<sp/>&amp;a[i__<sp/>*<sp/>a_dim1<sp/>+<sp/>1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;r__[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L160:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>*f0<sp/>=<sp/>*f;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(n,<sp/>&amp;x[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;x0[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>*gs<sp/>=<sp/><ref refid="slsqp_8c_1ab8f4bd9ffd53a9b1bae9e16e613c7fe7" kindref="member">ddot_sl</ref>(n,<sp/>&amp;g[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;s[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>*h1<sp/>=<sp/>fabs(*gs);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>*h2<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*m;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>i__1;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;=<sp/>*meq)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*h3<sp/>=<sp/>c__[j];</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*h3<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>MAX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>d__1<sp/>=<sp/>-c__[j];</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>*h2<sp/>+=<sp/><ref refid="slsqp_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(d__1,<sp/>*h3);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>*h3<sp/>=<sp/>(d__1<sp/>=<sp/>r__[j],<sp/>fabs(d__1));</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>MAX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>d__1<sp/>=<sp/>*h3,<sp/>d__2<sp/>=<sp/>(mu[j]<sp/>+<sp/>*h3)<sp/>/<sp/>two;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>mu[j]<sp/>=<sp/><ref refid="slsqp_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(d__1,<sp/>d__2);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>*h1<sp/>+=<sp/>*h3<sp/>*<sp/>(d__1<sp/>=<sp/>c__[j],<sp/>fabs(d__1));</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L170:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>CHECK<sp/>CONVERGENCE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>*mode<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*h1<sp/>&lt;<sp/>*acc<sp/>&amp;&amp;<sp/>*h2<sp/>&lt;<sp/>*acc<sp/>&amp;&amp;<sp/>!badlin<sp/>&amp;&amp;<sp/>*f<sp/>==<sp/>*f)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L330;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>*h1<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*m;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>i__1;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;=<sp/>*meq)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*h3<sp/>=<sp/>c__[j];</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*h3<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>MAX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>d__1<sp/>=<sp/>-c__[j];</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>*h1<sp/>+=<sp/>mu[j]<sp/>*<sp/><ref refid="slsqp_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(d__1,<sp/>*h3);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L180:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>*t0<sp/>=<sp/>*f<sp/>+<sp/>*h1;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>*h3<sp/>=<sp/>*gs<sp/>-<sp/>*h1<sp/>*<sp/>*h4;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>*mode<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*h3<sp/>&gt;=<sp/>zero)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L110;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>LINE<sp/>SEARCH<sp/>WITH<sp/>AN<sp/>L1-TESTFUNCTION<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>*line<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>*alpha<sp/>=<sp/>one;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*iexact<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L210;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/>INEXACT<sp/>LINESEARCH<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal">L190:</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>++(*line);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>*h3<sp/>=<sp/>*alpha<sp/>*<sp/>*h3;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a42ae61b7465343cc4978a6c6560f78cb" kindref="member">dscal_sl</ref>(n,<sp/>alpha,<sp/>&amp;s[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(n,<sp/>&amp;x0[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;x[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a7d8f534b2d6396e7e4fe9430a7478f55" kindref="member">daxpy_sl</ref>(n,<sp/>&amp;one,<sp/>&amp;s[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;x[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>*mode<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L330;</highlight></codeline>
<codeline lineno="428"><highlight class="normal">L200:</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*h1<sp/>&lt;=<sp/>*h3<sp/>/<sp/>ten<sp/>||<sp/>*line<sp/>&gt;<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L240;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>MAX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>d__1<sp/>=<sp/>*h3<sp/>/<sp/>(two<sp/>*<sp/>(*h3<sp/>-<sp/>*h1));</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>*alpha<sp/>=<sp/><ref refid="slsqp_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(d__1,<sp/>alfmin);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L190;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/>EXACT<sp/>LINESEARCH<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal">L210:</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*line<sp/>!=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>*alpha<sp/>=<sp/><ref refid="slsqp_8c_1a9b2e40140ae64d5dcc6aa1f8cd413226" kindref="member">linmin</ref>(line,<sp/>&amp;alfmin,<sp/>&amp;one,<sp/>t,<sp/>tol);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(n,<sp/>&amp;x0[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;x[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a7d8f534b2d6396e7e4fe9430a7478f55" kindref="member">daxpy_sl</ref>(n,<sp/>alpha,<sp/>&amp;s[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;x[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>*mode<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L330;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a42ae61b7465343cc4978a6c6560f78cb" kindref="member">dscal_sl</ref>(n,<sp/>alpha,<sp/>&amp;s[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L240;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/>CALL<sp/>FUNCTIONS<sp/>AT<sp/>CURRENT<sp/>X<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal">L220:</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>*t<sp/>=<sp/>*f;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*m;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>i__1;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;=<sp/>*meq)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*h1<sp/>=<sp/>c__[j];</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*h1<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>MAX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>d__1<sp/>=<sp/>-c__[j];</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>*t<sp/>+=<sp/>mu[j]<sp/>*<sp/><ref refid="slsqp_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(d__1,<sp/>*h1);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L230:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>*h1<sp/>=<sp/>*t<sp/>-<sp/>*t0;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(*iexact<sp/>+<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L200;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L210;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/>CHECK<sp/>CONVERGENCE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal">L240:</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>*h3<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*m;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>i__1;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;=<sp/>*meq)<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*h1<sp/>=<sp/>c__[j];</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*h1<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>MAX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>d__1<sp/>=<sp/>-c__[j];</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>*h3<sp/>+=<sp/><ref refid="slsqp_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(d__1,<sp/>*h1);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L250:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((d__1<sp/>=<sp/>*f<sp/>-<sp/>*f0,<sp/>fabs(d__1))<sp/>&lt;<sp/>*acc<sp/>||<sp/><ref refid="slsqp_8c_1ae659bc9c1f411c00a88c25243eba595f" kindref="member">dnrm2</ref>(n,<sp/>&amp;s[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>)<sp/>&lt;<sp/>*acc)</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>*h3<sp/>&lt;<sp/>*acc<sp/>&amp;&amp;<sp/>!badlin<sp/>&amp;&amp;<sp/>*f<sp/>==<sp/>*f)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>*mode<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>*mode<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L330;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/>CHECK<sp/>relaxed<sp/>CONVERGENCE<sp/>in<sp/>case<sp/>of<sp/>positive<sp/>directional<sp/>derivative<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal">L255:</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>*h3<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*m;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>i__1;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;=<sp/>*meq)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*h1<sp/>=<sp/>c__[j];</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*h1<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>MAX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>d__1<sp/>=<sp/>-c__[j];</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>*h3<sp/>+=<sp/><ref refid="slsqp_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(d__1,<sp/>*h1);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L256:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((d__1<sp/>=<sp/>*f<sp/>-<sp/>*f0,<sp/>fabs(d__1))<sp/>&lt;<sp/>*tol<sp/>||<sp/><ref refid="slsqp_8c_1ae659bc9c1f411c00a88c25243eba595f" kindref="member">dnrm2</ref>(n,<sp/>&amp;s[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>)<sp/>&lt;<sp/>*tol)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>*h3<sp/>&lt;<sp/>*tol<sp/>&amp;&amp;<sp/>!badlin<sp/>&amp;&amp;<sp/>*f<sp/>==<sp/>*f)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>*mode<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>*mode<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L330;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/>CALL<sp/>JACOBIAN<sp/>AT<sp/>CURRENT<sp/>X<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/>UPDATE<sp/>CHOLESKY-FACTORS<sp/>OF<sp/>HESSIAN<sp/>MATRIX<sp/>BY<sp/>MODIFIED<sp/>BFGS<sp/>FORMULA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal">L260:</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>u[i__]<sp/>=<sp/>g[i__]<sp/>-<sp/><ref refid="slsqp_8c_1ab8f4bd9ffd53a9b1bae9e16e613c7fe7" kindref="member">ddot_sl</ref>(m,<sp/>&amp;a[i__<sp/>*<sp/>a_dim1<sp/>+<sp/>1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;r__[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>v[i__];</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L270:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>L&apos;*S<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>*h1<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>++k;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>i__<sp/>+<sp/>1;<sp/>j<sp/>&lt;=<sp/>i__2;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++k;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*h1<sp/>+=<sp/>l[k]<sp/>*<sp/>s[j];</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L280:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>v[i__]<sp/>=<sp/>s[i__]<sp/>+<sp/>*h1;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L290:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>D*L&apos;*S<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>k<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>v[i__]<sp/>=<sp/>l[k]<sp/>*<sp/>v[i__];</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>k<sp/>=<sp/>k<sp/>+<sp/>*n1<sp/>-<sp/>i__;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L300:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>L*D*L&apos;*S<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>*n;<sp/>i__<sp/>&gt;=<sp/>1;<sp/>--i__)<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>*h1<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>k<sp/>=<sp/>i__;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>i__1<sp/>=<sp/>i__<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>i__1;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*h1<sp/>+=<sp/>l[k]<sp/>*<sp/>v[j];</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>k<sp/>+<sp/>*n<sp/>-<sp/>j;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L310:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>v[i__]<sp/>+=<sp/>*h1;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L320:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>*h1<sp/>=<sp/><ref refid="slsqp_8c_1ab8f4bd9ffd53a9b1bae9e16e613c7fe7" kindref="member">ddot_sl</ref>(n,<sp/>&amp;s[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;u[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>*h2<sp/>=<sp/><ref refid="slsqp_8c_1ab8f4bd9ffd53a9b1bae9e16e613c7fe7" kindref="member">ddot_sl</ref>(n,<sp/>&amp;s[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;v[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>*h3<sp/>=<sp/>*h2<sp/>*<sp/>.2;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*h1<sp/>&lt;<sp/>*h3)<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>*h4<sp/>=<sp/>(*h2<sp/>-<sp/>*h3)<sp/>/<sp/>(*h2<sp/>-<sp/>*h1);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>*h1<sp/>=<sp/>*h3;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a42ae61b7465343cc4978a6c6560f78cb" kindref="member">dscal_sl</ref>(n,<sp/>h4,<sp/>&amp;u[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>d__1<sp/>=<sp/>one<sp/>-<sp/>*h4;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a7d8f534b2d6396e7e4fe9430a7478f55" kindref="member">daxpy_sl</ref>(n,<sp/>&amp;d__1,<sp/>&amp;v[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;u[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*h1<sp/>==<sp/>0.<sp/>||<sp/>*h2<sp/>==<sp/>0.)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Singular<sp/>update:<sp/>reset<sp/>hessian.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L110;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>d__1<sp/>=<sp/>one<sp/>/<sp/>*h1;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1af746a9e04b19fdfc067a84752a503ccc" kindref="member">ldl</ref>(n,<sp/>&amp;l[1],<sp/>&amp;u[1],<sp/>&amp;d__1,<sp/>&amp;v[1]);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>d__1<sp/>=<sp/>-one<sp/>/<sp/>*h2;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1af746a9e04b19fdfc067a84752a503ccc" kindref="member">ldl</ref>(n,<sp/>&amp;l[1],<sp/>&amp;v[1],<sp/>&amp;d__1,<sp/>&amp;u[1]);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>END<sp/>OF<sp/>MAIN<sp/>ITERATION<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L130;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/>END<sp/>OF<sp/>SLSQPB<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal">L330:</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="581"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>slsqpb<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583" refid="slsqp_8h_1a7dfdca0e768acb4762246944df6064e5" refkind="member"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Subroutine<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="slsqp_8c_1a7dfdca0e768acb4762246944df6064e5" kindref="member">lsq</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>m,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>meq,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>nl,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>la,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>l,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>g,</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>a,</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>b,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>xl,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>xu,</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x,</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>y,</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>w,</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>jw,</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialized<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zero<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>one<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>generated<sp/>locals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_dim1,<sp/>a_offset,<sp/>i__1,<sp/>i__2;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d__1;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__,<sp/>j,<sp/>i1,<sp/>i2,<sp/>i3,<sp/>i4,<sp/>m1,<sp/>n1,<sp/>n2,<sp/>n3,<sp/>ic,<sp/>id,<sp/>ie,<sp/>if__,<sp/>ig,<sp/>ih,<sp/>il,<sp/>ip,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iw;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>diag;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mineq;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xnorm;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nancnt;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parameter<sp/>adjustments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>--y;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>--x;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>--xu;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>--xl;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>--g;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>--l;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>--b;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/>a_dim1<sp/>=<sp/>*la;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>a_offset<sp/>=<sp/>1<sp/>+<sp/>a_dim1;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>a<sp/>-=<sp/>a_offset;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>--w;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>--jw;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Function<sp/>Body<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>n1<sp/>=<sp/>*n<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>mineq<sp/>=<sp/>*m<sp/>-<sp/>*meq;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>m1<sp/>=<sp/>mineq<sp/>+<sp/>*n<sp/>+<sp/>*n;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>determine<sp/>whether<sp/>to<sp/>solve<sp/>problem<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>with<sp/>inconsistent<sp/>linerarization<sp/>(n2=1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>or<sp/>not<sp/>(n2=0)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>n2<sp/>=<sp/>n1<sp/>*<sp/>*n<sp/>/<sp/>2<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n2<sp/>==<sp/>*nl)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>n3<sp/>=<sp/>*n<sp/>-<sp/>n2;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>RECOVER<sp/>MATRIX<sp/>E<sp/>AND<sp/>VECTOR<sp/>F<sp/>FROM<sp/>L<sp/>AND<sp/>G<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/>i2<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>i3<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>i4<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>ie<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>if__<sp/>=<sp/>*n<sp/>*<sp/>*n<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>n3;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>i1<sp/>=<sp/>n1<sp/>-<sp/>i__;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>diag<sp/>=<sp/>sqrt(l[i2]);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>w[i3]<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(&amp;i1,<sp/>&amp;w[i3],<sp/>&amp;<ref refid="slsqp_8c_1a81305851d8fc81c7a4515d6d9b9123a6" kindref="member">c__0</ref>,<sp/>&amp;w[i3],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>i1<sp/>-<sp/>n2;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(&amp;i__2,<sp/>&amp;l[i2],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;w[i3],<sp/>n);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>i1<sp/>-<sp/>n2;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a42ae61b7465343cc4978a6c6560f78cb" kindref="member">dscal_sl</ref>(&amp;i__2,<sp/>&amp;diag,<sp/>&amp;w[i3],<sp/>n);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>w[i3]<sp/>=<sp/>diag;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>i__<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>w[if__<sp/>-<sp/>1<sp/>+<sp/>i__]<sp/>=</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(g[i__]<sp/>-<sp/><ref refid="slsqp_8c_1ab8f4bd9ffd53a9b1bae9e16e613c7fe7" kindref="member">ddot_sl</ref>(&amp;i__2,<sp/>&amp;w[i4],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;w[if__],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>))<sp/>/<sp/>diag;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>i2<sp/>=<sp/>i2<sp/>+<sp/>i1<sp/>-<sp/>n2;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>i3<sp/>+=<sp/>n1;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>i4<sp/>+=<sp/>*n;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L10:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n2<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>w[i3]<sp/>=<sp/>l[*nl];</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>w[i4]<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(&amp;n3,<sp/>&amp;w[i4],<sp/>&amp;<ref refid="slsqp_8c_1a81305851d8fc81c7a4515d6d9b9123a6" kindref="member">c__0</ref>,<sp/>&amp;w[i4],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>w[if__<sp/>-<sp/>1<sp/>+<sp/>*n]<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>d__1<sp/>=<sp/>-one;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a42ae61b7465343cc4978a6c6560f78cb" kindref="member">dscal_sl</ref>(n,<sp/>&amp;d__1,<sp/>&amp;w[if__],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>ic<sp/>=<sp/>if__<sp/>+<sp/>*n;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>ic<sp/>+<sp/>*meq<sp/>*<sp/>*n;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*meq<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>RECOVER<sp/>MATRIX<sp/>C<sp/>FROM<sp/>UPPER<sp/>PART<sp/>OF<sp/>A<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>i__1<sp/>=<sp/>*meq;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(n,<sp/>&amp;a[i__<sp/>+<sp/>a_dim1],<sp/>la,<sp/>&amp;w[ic<sp/>-<sp/>1<sp/>+<sp/>i__],<sp/>meq);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L20:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>RECOVER<sp/>VECTOR<sp/>D<sp/>FROM<sp/>UPPER<sp/>PART<sp/>OF<sp/>B<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(meq,<sp/>&amp;b[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;w[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>d__1<sp/>=<sp/>-one;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a42ae61b7465343cc4978a6c6560f78cb" kindref="member">dscal_sl</ref>(meq,<sp/>&amp;d__1,<sp/>&amp;w[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/>ig<sp/>=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>+<sp/>*meq;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>RECOVER<sp/>MATRIX<sp/>G<sp/>FROM<sp/>LOWER<sp/>PART<sp/>OF<sp/>A<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>The<sp/>matrix<sp/>G(mineq+2*n,m1)<sp/>is<sp/>stored<sp/>at<sp/>w(ig)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Not<sp/>all<sp/>rows<sp/>will<sp/>be<sp/>filled<sp/>if<sp/>some<sp/>of<sp/>the<sp/>upper/lower<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>bounds<sp/>are<sp/>unbounded.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mineq<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>i__1<sp/>=<sp/>mineq;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(n,<sp/>&amp;a[*meq<sp/>+<sp/>i__<sp/>+<sp/>a_dim1],<sp/>la,<sp/>&amp;w[ig<sp/>-<sp/>1<sp/>+<sp/>i__],<sp/>&amp;m1);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L30:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>ih<sp/>=<sp/>ig<sp/>+<sp/>m1<sp/>*<sp/>*n;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>iw<sp/>=<sp/>ih<sp/>+<sp/>mineq<sp/>+<sp/>(*n<sp/>&lt;&lt;<sp/>1);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mineq<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>RECOVER<sp/>H<sp/>FROM<sp/>LOWER<sp/>PART<sp/>OF<sp/>B<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>The<sp/>vector<sp/>H(mineq+2*n)<sp/>is<sp/>stored<sp/>at<sp/>w(ih)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(&amp;mineq,<sp/>&amp;b[*meq<sp/>+<sp/>1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;w[ih],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>d__1<sp/>=<sp/>-one;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a42ae61b7465343cc4978a6c6560f78cb" kindref="member">dscal_sl</ref>(&amp;mineq,<sp/>&amp;d__1,<sp/>&amp;w[ih],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>AUGMENT<sp/>MATRIX<sp/>G<sp/>BY<sp/>+I<sp/>AND<sp/>-I,<sp/>AND,<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>AUGMENT<sp/>VECTOR<sp/>H<sp/>BY<sp/>XL<sp/>AND<sp/>XU<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>NaN<sp/>value<sp/>indicates<sp/>no<sp/>bound<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>ip<sp/>=<sp/>ig<sp/>+<sp/>mineq;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/>il<sp/>=<sp/>ih<sp/>+<sp/>mineq;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>nancnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xl[i__]<sp/>==<sp/>xl[i__])<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w[il]<sp/>=<sp/>xl[i__];</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>i__2;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w[ip<sp/>+<sp/>m1<sp/>*<sp/>(j<sp/>-<sp/>1)]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L41:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w[ip<sp/>+<sp/>m1<sp/>*<sp/>(i__<sp/>-<sp/>1)]<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++ip;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++il;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++nancnt;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L40:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xu[i__]<sp/>==<sp/>xu[i__])<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w[il]<sp/>=<sp/>-xu[i__];</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>i__2;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w[ip<sp/>+<sp/>m1<sp/>*<sp/>(j<sp/>-<sp/>1)]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L51:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w[ip<sp/>+<sp/>m1<sp/>*<sp/>(i__<sp/>-<sp/>1)]<sp/>=<sp/>-1.;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++ip;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++il;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++nancnt;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L50:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/><ref refid="slsqp_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(1,<sp/>*meq);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>m1<sp/>-<sp/>nancnt;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a6c885899adf056165227634cd8ce8c2b" kindref="member">lsei</ref>(&amp;w[ic],</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[ie],</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[if__],</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[ig],</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[ih],</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;i__1,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meq,</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n,</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n,</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;m1,</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;i__2,</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n,</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;x[1],</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;xnorm,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[iw],</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;jw[1],</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*mode<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>restore<sp/>Lagrange<sp/>multipliers<sp/>(only<sp/>for<sp/>user-defined<sp/>variables)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(m,<sp/>&amp;w[iw],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;y[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>set<sp/>rest<sp/>of<sp/>the<sp/>multipliers<sp/>to<sp/>nan<sp/>(they<sp/>are<sp/>not<sp/>used)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n3<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y[*m<sp/>+<sp/>1]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y[*m<sp/>+<sp/>1]<sp/>=<sp/>0<sp/>/<sp/>y[*m<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i__1<sp/>=<sp/>*m<sp/>+<sp/>n3<sp/>+<sp/>n3;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>*m<sp/>+<sp/>2;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y[i__]<sp/>=<sp/>y[*m<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L60:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1ab68793d89fb57020efdd2bb3b451a27a" kindref="member">bound</ref>(n,<sp/>&amp;x[1],<sp/>&amp;xl[1],<sp/>&amp;xu[1]);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>END<sp/>OF<sp/>SUBROUTINE<sp/>LSQ<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="789"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>lsq<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791" refid="slsqp_8h_1a6c885899adf056165227634cd8ce8c2b" refkind="member"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Subroutine<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="slsqp_8c_1a6c885899adf056165227634cd8ce8c2b" kindref="member">lsei</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>c__,</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>d__,</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>e,</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>f,</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>g,</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>h__,</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>lc,</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>mc,</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>le,</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>me,</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>lg,</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>mg,</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n,</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x,</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>xnrm,</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>w,</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>jw,</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialized<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epmach<sp/>=<sp/>2.22e-16;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zero<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>generated<sp/>locals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c_dim1,<sp/>c_offset,<sp/>e_dim1,<sp/>e_offset,<sp/>g_dim1,<sp/>g_offset,<sp/>i__1,<sp/>i__2,<sp/>i__3;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d__1;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__,<sp/>j,<sp/>k,<sp/>l;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ie,<sp/>if__,<sp/>ig,<sp/>iw,<sp/>mc1;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>krank;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rnorm[1];</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parameter<sp/>adjustments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/>--d__;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>--f;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>--h__;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>--x;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/>g_dim1<sp/>=<sp/>*lg;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/>g_offset<sp/>=<sp/>1<sp/>+<sp/>g_dim1;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/>g<sp/>-=<sp/>g_offset;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/>e_dim1<sp/>=<sp/>*le;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/>e_offset<sp/>=<sp/>1<sp/>+<sp/>e_dim1;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>e<sp/>-=<sp/>e_offset;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/>c_dim1<sp/>=<sp/>*lc;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>c_offset<sp/>=<sp/>1<sp/>+<sp/>c_dim1;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/>c__<sp/>-=<sp/>c_offset;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/>--w;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>--jw;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Function<sp/>Body<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/>*mode<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*mc<sp/>&gt;<sp/>*n)<sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L75;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/>l<sp/>=<sp/>*n<sp/>-<sp/>*mc;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/>mc1<sp/>=<sp/>*mc<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/>iw<sp/>=<sp/>(l<sp/>+<sp/>1)<sp/>*<sp/>(*mg<sp/>+<sp/>2)<sp/>+<sp/>(*mg<sp/>&lt;&lt;<sp/>1)<sp/>+<sp/>*mc;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/>ie<sp/>=<sp/>iw<sp/>+<sp/>*mc<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/>if__<sp/>=<sp/>ie<sp/>+<sp/>*me<sp/>*<sp/>l;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/>ig<sp/>=<sp/>if__<sp/>+<sp/>*me;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>TRIANGULARIZE<sp/>C<sp/>AND<sp/>APPLY<sp/>FACTORS<sp/>TO<sp/>E<sp/>AND<sp/>G<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*mc;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>MIN<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>i__<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/><ref refid="slsqp_8c_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(i__2,<sp/>*lc);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>i__<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>i__3<sp/>=<sp/>*mc<sp/>-<sp/>i__;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a28c37f92c3ee05f871d6e3c58a67ef7a" kindref="member">h12</ref>(&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;i__,</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;i__2,</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n,</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;c__[i__<sp/>+<sp/>c_dim1],</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lc,</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[iw<sp/>+<sp/>i__],</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;c__[j<sp/>+<sp/>c_dim1],</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lc,</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;i__3);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>i__<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a28c37f92c3ee05f871d6e3c58a67ef7a" kindref="member">h12</ref>(&amp;<ref refid="slsqp_8c_1a6b800a656683f20e606bd642ac8e81cc" kindref="member">c__2</ref>,</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;i__,</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;i__2,</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n,</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;c__[i__<sp/>+<sp/>c_dim1],</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lc,</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[iw<sp/>+<sp/>i__],</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;e[e_offset],</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>le,</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L10:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>i__<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a28c37f92c3ee05f871d6e3c58a67ef7a" kindref="member">h12</ref>(&amp;<ref refid="slsqp_8c_1a6b800a656683f20e606bd642ac8e81cc" kindref="member">c__2</ref>,</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;i__,</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;i__2,</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n,</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;c__[i__<sp/>+<sp/>c_dim1],</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lc,</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[iw<sp/>+<sp/>i__],</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;g[g_offset],</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lg,</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mg);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>SOLVE<sp/>C*X=D<sp/>AND<sp/>MODIFY<sp/>F<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>*mode<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>*mc;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__2;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((d__1<sp/>=<sp/>c__[i__<sp/>+<sp/>i__<sp/>*<sp/>c_dim1],<sp/>fabs(d__1))<sp/>&lt;<sp/>epmach)<sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L75;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>i__1<sp/>=<sp/>i__<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>x[i__]<sp/>=<sp/>(d__[i__]<sp/>-<sp/><ref refid="slsqp_8c_1ab8f4bd9ffd53a9b1bae9e16e613c7fe7" kindref="member">ddot_sl</ref>(&amp;i__1,<sp/>&amp;c__[i__<sp/>+<sp/>c_dim1],<sp/>lc,<sp/>&amp;x[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>))</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>c__[i__<sp/>+<sp/>i__<sp/>*<sp/>c_dim1];</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L15:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>*mode<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/>w[mc1]<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>*mg<sp/>-<sp/>*mc;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(&amp;i__2,<sp/>&amp;w[mc1],<sp/>&amp;<ref refid="slsqp_8c_1a81305851d8fc81c7a4515d6d9b9123a6" kindref="member">c__0</ref>,<sp/>&amp;w[mc1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*mc<sp/>==<sp/>*n)<sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L50;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>*me;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__2;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L20:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>w[if__<sp/>-<sp/>1<sp/>+<sp/>i__]<sp/>=</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f[i__]<sp/>-<sp/><ref refid="slsqp_8c_1ab8f4bd9ffd53a9b1bae9e16e613c7fe7" kindref="member">ddot_sl</ref>(mc,<sp/>&amp;e[i__<sp/>+<sp/>e_dim1],<sp/>le,<sp/>&amp;x[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>STORE<sp/>TRANSFORMED<sp/>E<sp/>&amp;<sp/>G<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>*me;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__2;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L25:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(&amp;l,<sp/>&amp;e[i__<sp/>+<sp/>mc1<sp/>*<sp/>e_dim1],<sp/>le,<sp/>&amp;w[ie<sp/>-<sp/>1<sp/>+<sp/>i__],<sp/>me);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>*mg;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__2;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L30:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(&amp;l,<sp/>&amp;g[i__<sp/>+<sp/>mc1<sp/>*<sp/>g_dim1],<sp/>lg,<sp/>&amp;w[ig<sp/>-<sp/>1<sp/>+<sp/>i__],<sp/>mg);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*mg<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L40;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>SOLVE<sp/>LS<sp/>WITHOUT<sp/>INEQUALITY<sp/>CONSTRAINTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/>*mode<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/>k<sp/>=<sp/><ref refid="slsqp_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(*le,<sp/>*n);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/>t<sp/>=<sp/>sqrt(epmach);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a932017376b1cfdcfb236231b5a68aa23" kindref="member">hfti</ref>(&amp;w[ie],</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me,</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me,</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;l,</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[if__],</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;k,</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;t,</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;krank,</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnorm,</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[1],</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[l<sp/>+<sp/>1],</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;jw[1]);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>HFTI<sp/>IS<sp/>MORE<sp/>GENERIC,<sp/>BUT<sp/>WE<sp/>ONLY<sp/>CALL<sp/>IT<sp/>WITH<sp/>NB=1,<sp/>SO<sp/>RETRIEVE<sp/>THE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>SINGLE<sp/>VALUE<sp/>WE<sp/>NEED<sp/>FROM<sp/>RNORM<sp/>HERE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>*xnrm<sp/>=<sp/>rnorm[0];</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(&amp;l,<sp/>&amp;w[if__],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;x[mc1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(krank<sp/>!=<sp/>l)<sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L75;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/>*mode<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L50;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>MODIFY<sp/>H<sp/>AND<sp/>SOLVE<sp/>INEQUALITY<sp/>CONSTRAINED<sp/>LS<sp/>PROBLEM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal">L40:</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>*mg;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__2;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L45:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>h__[i__]<sp/>-=<sp/><ref refid="slsqp_8c_1ab8f4bd9ffd53a9b1bae9e16e613c7fe7" kindref="member">ddot_sl</ref>(mc,<sp/>&amp;g[i__<sp/>+<sp/>g_dim1],<sp/>lg,<sp/>&amp;x[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a983278d976283a647607d8b4a35863c1" kindref="member">lsi</ref>(&amp;w[ie],</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[if__],</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[ig],</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;h__[1],</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>me,</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>me,</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mg,</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mg,</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;l,</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;x[mc1],</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xnrm,</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[mc1],</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;jw[1],</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mode);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*mc<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L75;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/>t<sp/>=<sp/><ref refid="slsqp_8c_1ae659bc9c1f411c00a88c25243eba595f" kindref="member">dnrm2</ref>(mc,<sp/>&amp;x[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/>*xnrm<sp/>=<sp/>sqrt(*xnrm<sp/>*<sp/>*xnrm<sp/>+<sp/>t<sp/>*<sp/>t);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*mode<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L75;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>SOLUTION<sp/>OF<sp/>ORIGINAL<sp/>PROBLEM<sp/>AND<sp/>LAGRANGE<sp/>MULTIPLIERS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal">L50:</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>*me;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__2;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L55:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>f[i__]<sp/>=<sp/><ref refid="slsqp_8c_1ab8f4bd9ffd53a9b1bae9e16e613c7fe7" kindref="member">ddot_sl</ref>(n,<sp/>&amp;e[i__<sp/>+<sp/>e_dim1],<sp/>le,<sp/>&amp;x[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>)<sp/>-<sp/>f[i__];</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>*mc;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__2;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L60:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>d__[i__]<sp/>=<sp/><ref refid="slsqp_8c_1ab8f4bd9ffd53a9b1bae9e16e613c7fe7" kindref="member">ddot_sl</ref>(me,<sp/>&amp;e[i__<sp/>*<sp/>e_dim1<sp/>+<sp/>1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;f[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>)</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><ref refid="slsqp_8c_1ab8f4bd9ffd53a9b1bae9e16e613c7fe7" kindref="member">ddot_sl</ref>(mg,<sp/>&amp;g[i__<sp/>*<sp/>g_dim1<sp/>+<sp/>1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;w[mc1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>*mc;<sp/>i__<sp/>&gt;=<sp/>1;<sp/>--i__)<sp/>{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L65:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>i__<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a28c37f92c3ee05f871d6e3c58a67ef7a" kindref="member">h12</ref>(&amp;<ref refid="slsqp_8c_1a6b800a656683f20e606bd642ac8e81cc" kindref="member">c__2</ref>,</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;i__,</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;i__2,</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n,</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;c__[i__<sp/>+<sp/>c_dim1],</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lc,</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[iw<sp/>+<sp/>i__],</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;x[1],</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>*mc;<sp/>i__<sp/>&gt;=<sp/>1;<sp/>--i__)<sp/>{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>MIN<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>i__<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/><ref refid="slsqp_8c_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(i__2,<sp/>*lc);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>*mc<sp/>-<sp/>i__;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>w[i__]<sp/>=</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(d__[i__]<sp/>-<sp/><ref refid="slsqp_8c_1ab8f4bd9ffd53a9b1bae9e16e613c7fe7" kindref="member">ddot_sl</ref>(&amp;i__2,<sp/>&amp;c__[j<sp/>+<sp/>i__<sp/>*<sp/>c_dim1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;w[j],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>))</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>c__[i__<sp/>+<sp/>i__<sp/>*<sp/>c_dim1];</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L70:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>END<sp/>OF<sp/>SUBROUTINE<sp/>LSEI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal">L75:</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>lsei<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035" refid="slsqp_8h_1a983278d976283a647607d8b4a35863c1" refkind="member"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Subroutine<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="slsqp_8c_1a983278d976283a647607d8b4a35863c1" kindref="member">lsi</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>e,</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>f,</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>g,</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>h__,</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>le,</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>me,</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>lg,</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>mg,</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n,</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x,</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>xnorm,</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>w,</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>jw,</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialized<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epmach<sp/>=<sp/>2.22e-16;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>one<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>generated<sp/>locals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e_dim1,<sp/>e_offset,<sp/>g_dim1,<sp/>g_offset,<sp/>i__1,<sp/>i__2,<sp/>i__3;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d__1;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__,<sp/>j;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parameter<sp/>adjustments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/>--f;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/>--jw;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/>--h__;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/>--x;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/>g_dim1<sp/>=<sp/>*lg;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/>g_offset<sp/>=<sp/>1<sp/>+<sp/>g_dim1;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/>g<sp/>-=<sp/>g_offset;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/>e_dim1<sp/>=<sp/>*le;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/>e_offset<sp/>=<sp/>1<sp/>+<sp/>e_dim1;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/>e<sp/>-=<sp/>e_offset;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/>--w;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Function<sp/>Body<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>QR-FACTORS<sp/>OF<sp/>E<sp/>AND<sp/>APPLICATION<sp/>TO<sp/>F<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>MIN<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>i__<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/><ref refid="slsqp_8c_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(i__2,<sp/>*n);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>i__<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>i__3<sp/>=<sp/>*n<sp/>-<sp/>i__;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a28c37f92c3ee05f871d6e3c58a67ef7a" kindref="member">h12</ref>(&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;i__,</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;i__2,</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me,</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;e[i__<sp/>*<sp/>e_dim1<sp/>+<sp/>1],</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;t,</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;e[j<sp/>*<sp/>e_dim1<sp/>+<sp/>1],</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>le,</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;i__3);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L10:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>i__<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a28c37f92c3ee05f871d6e3c58a67ef7a" kindref="member">h12</ref>(&amp;<ref refid="slsqp_8c_1a6b800a656683f20e606bd642ac8e81cc" kindref="member">c__2</ref>,</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;i__,</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;i__2,</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me,</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;e[i__<sp/>*<sp/>e_dim1<sp/>+<sp/>1],</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;t,</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;f[1],</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>TRANSFORM<sp/>G<sp/>AND<sp/>H<sp/>TO<sp/>GET<sp/>LEAST<sp/>DISTANCE<sp/>PROBLEM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/>*mode<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>*mg;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__2;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>i__1;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!((d__1<sp/>=<sp/>e[j<sp/>+<sp/>j<sp/>*<sp/>e_dim1],<sp/>fabs(d__1))<sp/>&gt;=<sp/>epmach))<sp/>{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L50;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L20:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i__3<sp/>=<sp/>j<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g[i__<sp/>+<sp/>j<sp/>*<sp/>g_dim1]<sp/>=</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(g[i__<sp/>+<sp/>j<sp/>*<sp/>g_dim1]</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><ref refid="slsqp_8c_1ab8f4bd9ffd53a9b1bae9e16e613c7fe7" kindref="member">ddot_sl</ref>(&amp;i__3,<sp/>&amp;g[i__<sp/>+<sp/>g_dim1],<sp/>lg,<sp/>&amp;e[j<sp/>*<sp/>e_dim1<sp/>+<sp/>1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>))</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>e[j<sp/>+<sp/>j<sp/>*<sp/>e_dim1];</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L30:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>h__[i__]<sp/>-=<sp/><ref refid="slsqp_8c_1ab8f4bd9ffd53a9b1bae9e16e613c7fe7" kindref="member">ddot_sl</ref>(n,<sp/>&amp;g[i__<sp/>+<sp/>g_dim1],<sp/>lg,<sp/>&amp;f[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>SOLVE<sp/>LEAST<sp/>DISTANCE<sp/>PROBLEM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1af93a8bea55789bf3439530749194a41b" kindref="member">ldp</ref>(&amp;g[g_offset],<sp/>lg,<sp/>mg,<sp/>n,<sp/>&amp;h__[1],<sp/>&amp;x[1],<sp/>xnorm,<sp/>&amp;w[1],<sp/>&amp;jw[1],<sp/>mode);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*mode<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L50;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>SOLUTION<sp/>OF<sp/>ORIGINAL<sp/>PROBLEM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a7d8f534b2d6396e7e4fe9430a7478f55" kindref="member">daxpy_sl</ref>(n,<sp/>&amp;one,<sp/>&amp;f[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;x[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>*n;<sp/>i__<sp/>&gt;=<sp/>1;<sp/>--i__)<sp/>{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>MIN<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>i__<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/><ref refid="slsqp_8c_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(i__2,<sp/>*n);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L40:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>*n<sp/>-<sp/>i__;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/>x[i__]<sp/>=<sp/>(x[i__]<sp/>-<sp/><ref refid="slsqp_8c_1ab8f4bd9ffd53a9b1bae9e16e613c7fe7" kindref="member">ddot_sl</ref>(&amp;i__2,<sp/>&amp;e[i__<sp/>+<sp/>j<sp/>*<sp/>e_dim1],<sp/>le,<sp/>&amp;x[j],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>))</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>e[i__<sp/>+<sp/>i__<sp/>*<sp/>e_dim1];</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>MIN<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>*n<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/>j<sp/>=<sp/><ref refid="slsqp_8c_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(i__2,<sp/>*me);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>*me<sp/>-<sp/>*n;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/>t<sp/>=<sp/><ref refid="slsqp_8c_1ae659bc9c1f411c00a88c25243eba595f" kindref="member">dnrm2</ref>(&amp;i__2,<sp/>&amp;f[j],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/>*xnorm<sp/>=<sp/>sqrt(*xnorm<sp/>*<sp/>*xnorm<sp/>+<sp/>t<sp/>*<sp/>t);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>END<sp/>OF<sp/>SUBROUTINE<sp/>LSI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal">L50:</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>lsi<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155" refid="slsqp_8h_1af93a8bea55789bf3439530749194a41b" refkind="member"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Subroutine<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="slsqp_8c_1af93a8bea55789bf3439530749194a41b" kindref="member">ldp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>g,</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>mg,</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>m,</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n,</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>h__,</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x,</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>xnorm,</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>w,</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>index,</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialized<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zero<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>one<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>generated<sp/>locals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g_dim1,<sp/>g_offset,<sp/>i__1,<sp/>i__2;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d__1;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__,<sp/>j,<sp/>n1,<sp/>if__,<sp/>iw,<sp/>iy,<sp/>iz;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fac;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rnorm;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iwdual;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parameter<sp/>adjustments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/>--index;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/>--h__;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/>--x;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/>g_dim1<sp/>=<sp/>*mg;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/>g_offset<sp/>=<sp/>1<sp/>+<sp/>g_dim1;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/>g<sp/>-=<sp/>g_offset;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/>--w;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Function<sp/>Body<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/>*mode<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*n<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L50;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>STATE<sp/>DUAL<sp/>PROBLEM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>*mode<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(n,<sp/>&amp;x[1],<sp/>&amp;<ref refid="slsqp_8c_1a81305851d8fc81c7a4515d6d9b9123a6" kindref="member">c__0</ref>,<sp/>&amp;x[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/>*xnorm<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*m<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L50;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/>iw<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*m;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>i__1;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__2;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++iw;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L10:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w[iw]<sp/>=<sp/>g[j<sp/>+<sp/>i__<sp/>*<sp/>g_dim1];</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>++iw;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L20:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>w[iw]<sp/>=<sp/>h__[j];</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/>if__<sp/>=<sp/>iw<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>++iw;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L30:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>w[iw]<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/>w[iw<sp/>+<sp/>1]<sp/>=<sp/>one;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/>n1<sp/>=<sp/>*n<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/>iz<sp/>=<sp/>iw<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/>iy<sp/>=<sp/>iz<sp/>+<sp/>n1;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/>iwdual<sp/>=<sp/>iy<sp/>+<sp/>*m;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>SOLVE<sp/>DUAL<sp/>PROBLEM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a418a33363f316eb90f63962554971f91" kindref="member">nnls</ref>(&amp;w[1],</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;n1,</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;n1,</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m,</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[if__],</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[iy],</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;rnorm,</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[iwdual],</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;w[iz],</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;index[1],</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*mode<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L50;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/>*mode<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rnorm<sp/>&lt;=<sp/>zero)<sp/>{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L50;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>COMPUTE<sp/>SOLUTION<sp/>OF<sp/>PRIMAL<sp/>PROBLEM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/>fac<sp/>=<sp/>one<sp/>-<sp/><ref refid="slsqp_8c_1ab8f4bd9ffd53a9b1bae9e16e613c7fe7" kindref="member">ddot_sl</ref>(m,<sp/>&amp;h__[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;w[iy],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/>d__1<sp/>=<sp/>one<sp/>+<sp/>fac;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(d__1<sp/>-<sp/>one<sp/>&gt;<sp/>zero))<sp/>{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L50;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/>*mode<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/>fac<sp/>=<sp/>one<sp/>/<sp/>fac;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>i__1;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L40:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>x[j]<sp/>=<sp/>fac<sp/>*<sp/><ref refid="slsqp_8c_1ab8f4bd9ffd53a9b1bae9e16e613c7fe7" kindref="member">ddot_sl</ref>(m,<sp/>&amp;g[j<sp/>*<sp/>g_dim1<sp/>+<sp/>1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;w[iy],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/>*xnorm<sp/>=<sp/><ref refid="slsqp_8c_1ae659bc9c1f411c00a88c25243eba595f" kindref="member">dnrm2</ref>(n,<sp/>&amp;x[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>COMPUTE<sp/>LAGRANGE<sp/>MULTIPLIERS<sp/>FOR<sp/>PRIMAL<sp/>PROBLEM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/>w[1]<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(m,<sp/>&amp;w[1],<sp/>&amp;<ref refid="slsqp_8c_1a81305851d8fc81c7a4515d6d9b9123a6" kindref="member">c__0</ref>,<sp/>&amp;w[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a7d8f534b2d6396e7e4fe9430a7478f55" kindref="member">daxpy_sl</ref>(m,<sp/>&amp;fac,<sp/>&amp;w[iy],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;w[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>END<sp/>OF<sp/>SUBROUTINE<sp/>LDP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal">L50:</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>ldp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269" refid="slsqp_8h_1a418a33363f316eb90f63962554971f91" refkind="member"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Subroutine<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="slsqp_8c_1a418a33363f316eb90f63962554971f91" kindref="member">nnls</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>a,</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>mda,</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>m,</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n,</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>b,</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x,</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>rnorm,</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>w,</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>z__,</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>index,</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialized<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zero<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>one<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor<sp/>=<sp/>.01;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>generated<sp/>locals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_dim1,<sp/>a_offset,<sp/>i__1,<sp/>i__2;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d__1;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c__;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__,<sp/>j,<sp/>k,<sp/>l;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s,<sp/>t;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii,<sp/>jj,<sp/>ip,<sp/>iz,<sp/>jz;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>up;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iz1,<sp/>iz2,<sp/>npp1,<sp/>iter;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wmax,<sp/>alpha,<sp/>asave;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itmax,<sp/>izmax,<sp/>nsetp;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>unorm;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parameter<sp/>adjustments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/>--z__;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/>--b;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/>--index;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/>--w;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/>--x;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/>a_dim1<sp/>=<sp/>*mda;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/>a_offset<sp/>=<sp/>1<sp/>+<sp/>a_dim1;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/>a<sp/>-=<sp/>a_offset;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Function<sp/>Body<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/>revised<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dieter<sp/>Kraft,<sp/>March<sp/>1983<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/>*mode<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*m<sp/>&lt;=<sp/>0<sp/>||<sp/>*n<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L290;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/>*mode<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/>iter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/>itmax<sp/>=<sp/>*n<sp/>*<sp/>3;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>STEP<sp/>ONE<sp/>(INITIALIZE)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L100:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/>index[i__]<sp/>=<sp/>i__;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/>iz1<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/>iz2<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/>nsetp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/>npp1<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/>x[1]<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(n,<sp/>&amp;x[1],<sp/>&amp;<ref refid="slsqp_8c_1a81305851d8fc81c7a4515d6d9b9123a6" kindref="member">c__0</ref>,<sp/>&amp;x[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>STEP<sp/>TWO<sp/>(COMPUTE<sp/>DUAL<sp/>VARIABLES)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>.....ENTRY<sp/>LOOP<sp/>A<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal">L110:</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iz1<sp/>&gt;<sp/>iz2<sp/>||<sp/>nsetp<sp/>&gt;=<sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L280;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>iz2;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iz<sp/>=<sp/>iz1;<sp/>iz<sp/>&lt;=<sp/>i__1;<sp/>++iz)<sp/>{</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>index[iz];</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L120:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>*m<sp/>-<sp/>nsetp;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>w[j]<sp/>=<sp/><ref refid="slsqp_8c_1ab8f4bd9ffd53a9b1bae9e16e613c7fe7" kindref="member">ddot_sl</ref>(&amp;i__2,<sp/>&amp;a[npp1<sp/>+<sp/>j<sp/>*<sp/>a_dim1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;b[npp1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>STEP<sp/>THREE<sp/>(TEST<sp/>DUAL<sp/>VARIABLES)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal">L130:</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/>wmax<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>iz2;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iz<sp/>=<sp/>iz1;<sp/>iz<sp/>&lt;=<sp/>i__2;<sp/>++iz)<sp/>{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>index[iz];</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w[j]<sp/>&lt;=<sp/>wmax)<sp/>{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L140;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/>wmax<sp/>=<sp/>w[j];</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/>izmax<sp/>=<sp/>iz;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/>L140:;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>.....EXIT<sp/>LOOP<sp/>A<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wmax<sp/>&lt;=<sp/>zero)<sp/>{</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L280;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/>iz<sp/>=<sp/>izmax;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/>j<sp/>=<sp/>index[iz];</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>STEP<sp/>FOUR<sp/>(TEST<sp/>INDEX<sp/>J<sp/>FOR<sp/>LINEAR<sp/>DEPENDENCY)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/>asave<sp/>=<sp/>a[npp1<sp/>+<sp/>j<sp/>*<sp/>a_dim1];</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>npp1<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a28c37f92c3ee05f871d6e3c58a67ef7a" kindref="member">h12</ref>(&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;npp1,</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;i__2,</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m,</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;a[j<sp/>*<sp/>a_dim1<sp/>+<sp/>1],</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;up,</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;z__[1],</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1a81305851d8fc81c7a4515d6d9b9123a6" kindref="member">c__0</ref>);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/>unorm<sp/>=<sp/><ref refid="slsqp_8c_1ae659bc9c1f411c00a88c25243eba595f" kindref="member">dnrm2</ref>(&amp;nsetp,<sp/>&amp;a[j<sp/>*<sp/>a_dim1<sp/>+<sp/>1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/>t<sp/>=<sp/>factor<sp/>*<sp/>(d__1<sp/>=<sp/>a[npp1<sp/>+<sp/>j<sp/>*<sp/>a_dim1],<sp/>fabs(d__1));</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/>d__1<sp/>=<sp/>unorm<sp/>+<sp/>t;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d__1<sp/>-<sp/>unorm<sp/>&lt;=<sp/>zero)<sp/>{</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L150;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(m,<sp/>&amp;b[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;z__[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>npp1<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a28c37f92c3ee05f871d6e3c58a67ef7a" kindref="member">h12</ref>(&amp;<ref refid="slsqp_8c_1a6b800a656683f20e606bd642ac8e81cc" kindref="member">c__2</ref>,</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;npp1,</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;i__2,</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m,</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;a[j<sp/>*<sp/>a_dim1<sp/>+<sp/>1],</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;up,</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;z__[1],</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z__[npp1]<sp/>/<sp/>a[npp1<sp/>+<sp/>j<sp/>*<sp/>a_dim1]<sp/>&gt;<sp/>zero)<sp/>{</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L160;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal">L150:</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/>a[npp1<sp/>+<sp/>j<sp/>*<sp/>a_dim1]<sp/>=<sp/>asave;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/>w[j]<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L130;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>STEP<sp/>FIVE<sp/>(ADD<sp/>COLUMN)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal">L160:</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(m,<sp/>&amp;z__[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;b[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/>index[iz]<sp/>=<sp/>index[iz1];</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/>index[iz1]<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/>++iz1;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/>nsetp<sp/>=<sp/>npp1;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/>++npp1;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>iz2;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(jz<sp/>=<sp/>iz1;<sp/>jz<sp/>&lt;=<sp/>i__2;<sp/>++jz)<sp/>{</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>jj<sp/>=<sp/>index[jz];</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L170:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a28c37f92c3ee05f871d6e3c58a67ef7a" kindref="member">h12</ref>(&amp;<ref refid="slsqp_8c_1a6b800a656683f20e606bd642ac8e81cc" kindref="member">c__2</ref>,</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;nsetp,</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;npp1,</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m,</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;a[j<sp/>*<sp/>a_dim1<sp/>+<sp/>1],</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;up,</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;a[jj<sp/>*<sp/>a_dim1<sp/>+<sp/>1],</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mda,</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/>k<sp/>=<sp/><ref refid="slsqp_8c_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(npp1,<sp/>*mda);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/>w[j]<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>*m<sp/>-<sp/>nsetp;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(&amp;i__2,<sp/>&amp;w[j],<sp/>&amp;<ref refid="slsqp_8c_1a81305851d8fc81c7a4515d6d9b9123a6" kindref="member">c__0</ref>,<sp/>&amp;a[k<sp/>+<sp/>j<sp/>*<sp/>a_dim1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>STEP<sp/>SIX<sp/>(SOLVE<sp/>LEAST<sp/>SQUARES<sp/>SUB-PROBLEM)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>.....ENTRY<sp/>LOOP<sp/>B<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal">L180:</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ip<sp/>=<sp/>nsetp;<sp/>ip<sp/>&gt;=<sp/>1;<sp/>--ip)<sp/>{</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ip<sp/>==<sp/>nsetp)<sp/>{</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L190;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/>d__1<sp/>=<sp/>-z__[ip<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a7d8f534b2d6396e7e4fe9430a7478f55" kindref="member">daxpy_sl</ref>(&amp;ip,<sp/>&amp;d__1,<sp/>&amp;a[jj<sp/>*<sp/>a_dim1<sp/>+<sp/>1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;z__[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/>L190:</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>jj<sp/>=<sp/>index[ip];</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L200:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/>z__[ip]<sp/>/=<sp/>a[ip<sp/>+<sp/>jj<sp/>*<sp/>a_dim1];</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>&lt;=<sp/>itmax)<sp/>{</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L220;</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1450"><highlight class="normal">L210:</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/>*mode<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L280;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>STEP<sp/>SEVEN<sp/>TO<sp/>TEN<sp/>(STEP<sp/>LENGTH<sp/>ALGORITHM)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal">L220:</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/>alpha<sp/>=<sp/>one;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/>jj<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>nsetp;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ip<sp/>=<sp/>1;<sp/>ip<sp/>&lt;=<sp/>i__2;<sp/>++ip)<sp/>{</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z__[ip]<sp/>&gt;<sp/>zero)<sp/>{</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L230;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/>l<sp/>=<sp/>index[ip];</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>-x[l]<sp/>/<sp/>(z__[ip]<sp/>-<sp/>x[l]);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha<sp/>&lt;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L230;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/>jj<sp/>=<sp/>ip;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/>L230:;</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>nsetp;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ip<sp/>=<sp/>1;<sp/>ip<sp/>&lt;=<sp/>i__2;<sp/>++ip)<sp/>{</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/>l<sp/>=<sp/>index[ip];</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L240:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/>x[l]<sp/>=<sp/>(one<sp/>-<sp/>alpha)<sp/>*<sp/>x[l]<sp/>+<sp/>alpha<sp/>*<sp/>z__[ip];</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>.....EXIT<sp/>LOOP<sp/>B<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jj<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L110;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>STEP<sp/>ELEVEN<sp/>(DELETE<sp/>COLUMN)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/>i__<sp/>=<sp/>index[jj];</highlight></codeline>
<codeline lineno="1483"><highlight class="normal">L250:</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/>x[i__]<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/>++jj;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>nsetp;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>jj;<sp/>j<sp/>&lt;=<sp/>i__2;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/>ii<sp/>=<sp/>index[j];</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/>index[j<sp/>-<sp/>1]<sp/>=<sp/>ii;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1ab4a611e9eb900cbae0fd9ed8b13962bb" kindref="member">dsrotg</ref>(&amp;a[j<sp/>-<sp/>1<sp/>+<sp/>ii<sp/>*<sp/>a_dim1],<sp/>&amp;a[j<sp/>+<sp/>ii<sp/>*<sp/>a_dim1],<sp/>&amp;c__,<sp/>&amp;s);</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>a[j<sp/>-<sp/>1<sp/>+<sp/>ii<sp/>*<sp/>a_dim1];</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1ab21b159dcf686c0a01d8bf4deef90608" kindref="member">dsrot</ref>(n,<sp/>&amp;a[j<sp/>-<sp/>1<sp/>+<sp/>a_dim1],<sp/>mda,<sp/>&amp;a[j<sp/>+<sp/>a_dim1],<sp/>mda,<sp/>&amp;c__,<sp/>&amp;s);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/>a[j<sp/>-<sp/>1<sp/>+<sp/>ii<sp/>*<sp/>a_dim1]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/>a[j<sp/>+<sp/>ii<sp/>*<sp/>a_dim1]<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L260:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1ab21b159dcf686c0a01d8bf4deef90608" kindref="member">dsrot</ref>(&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;b[j<sp/>-<sp/>1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;b[j],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;c__,<sp/>&amp;s);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/>npp1<sp/>=<sp/>nsetp;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/>--nsetp;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/>--iz1;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/>index[iz1]<sp/>=<sp/>i__;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nsetp<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L210;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>nsetp;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(jj<sp/>=<sp/>1;<sp/>jj<sp/>&lt;=<sp/>i__2;<sp/>++jj)<sp/>{</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/>i__<sp/>=<sp/>index[jj];</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x[i__]<sp/>&lt;=<sp/>zero)<sp/>{</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L250;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L270:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(m,<sp/>&amp;b[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,<sp/>&amp;z__[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L180;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>STEP<sp/>TWELVE<sp/>(SOLUTION)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal">L280:</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/>k<sp/>=<sp/><ref refid="slsqp_8c_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(npp1,<sp/>*m);</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>*m<sp/>-<sp/>nsetp;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/>*rnorm<sp/>=<sp/><ref refid="slsqp_8c_1ae659bc9c1f411c00a88c25243eba595f" kindref="member">dnrm2</ref>(&amp;i__2,<sp/>&amp;b[k],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(npp1<sp/>&gt;<sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>w[1]<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(n,<sp/>&amp;w[1],<sp/>&amp;<ref refid="slsqp_8c_1a81305851d8fc81c7a4515d6d9b9123a6" kindref="member">c__0</ref>,<sp/>&amp;w[1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>END<sp/>OF<sp/>SUBROUTINE<sp/>NNLS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal">L290:</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>nnls<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight></codeline>
<codeline lineno="1529" refid="slsqp_8h_1a932017376b1cfdcfb236231b5a68aa23" refkind="member"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Subroutine<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="slsqp_8c_1a932017376b1cfdcfb236231b5a68aa23" kindref="member">hfti</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>a,</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>mda,</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>m,</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n,</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>b,</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>mdb,</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>nb,</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>tau,</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>krank,</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>rnorm,</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>h__,</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>g,</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>ip)<sp/>{</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialized<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zero<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor<sp/>=<sp/>.001;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>generated<sp/>locals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a_dim1,<sp/>a_offset,<sp/>b_dim1,<sp/>b_offset,<sp/>i__1,<sp/>i__2,<sp/>i__3;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d__1;</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__,<sp/>j,<sp/>k,<sp/>l;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jb,<sp/>kp1;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tmp,<sp/>hmax;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lmax,<sp/>ldiag;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parameter<sp/>adjustments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/>--ip;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/>--g;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/>--h__;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/>a_dim1<sp/>=<sp/>*mda;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/>a_offset<sp/>=<sp/>1<sp/>+<sp/>a_dim1;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/>a<sp/>-=<sp/>a_offset;</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/>--rnorm;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/>b_dim1<sp/>=<sp/>*mdb;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/>b_offset<sp/>=<sp/>1<sp/>+<sp/>b_dim1;</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/>b<sp/>-=<sp/>b_offset;</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Function<sp/>Body<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/>ldiag<sp/>=<sp/><ref refid="slsqp_8c_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(*m,<sp/>*n);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ldiag<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L270;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>COMPUTE<sp/>LMAX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>ldiag;</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>i__1;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L20;</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/>lmax<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>j;<sp/>l<sp/>&lt;=<sp/>i__2;<sp/>++l)<sp/>{</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>2nd<sp/>power<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d__1<sp/>=<sp/>a[j<sp/>-<sp/>1<sp/>+<sp/>l<sp/>*<sp/>a_dim1];</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h__[l]<sp/>-=<sp/>d__1<sp/>*<sp/>d__1;</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L10:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h__[l]<sp/>&gt;<sp/>h__[lmax])<sp/>{</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmax<sp/>=<sp/>l;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/>d__1<sp/>=<sp/>hmax<sp/>+<sp/>factor<sp/>*<sp/>h__[lmax];</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d__1<sp/>-<sp/>hmax<sp/>&gt;<sp/>zero)<sp/>{</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L50;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/>L20:</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/>lmax<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>j;<sp/>l<sp/>&lt;=<sp/>i__2;<sp/>++l)<sp/>{</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h__[l]<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i__3<sp/>=<sp/>*m;</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>j;<sp/>i__<sp/>&lt;=<sp/>i__3;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L30:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>2nd<sp/>power<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d__1<sp/>=<sp/>a[i__<sp/>+<sp/>l<sp/>*<sp/>a_dim1];</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h__[l]<sp/>+=<sp/>d__1<sp/>*<sp/>d__1;</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L40:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h__[l]<sp/>&gt;<sp/>h__[lmax])<sp/>{</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmax<sp/>=<sp/>l;</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/>hmax<sp/>=<sp/>h__[lmax];</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>COLUMN<sp/>INTERCHANGES<sp/>IF<sp/>NEEDED<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/>L50:</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/>ip[j]<sp/>=<sp/>lmax;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ip[j]<sp/>==<sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L70;</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>*m;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__2;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>a[i__<sp/>+<sp/>j<sp/>*<sp/>a_dim1];</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a[i__<sp/>+<sp/>j<sp/>*<sp/>a_dim1]<sp/>=<sp/>a[i__<sp/>+<sp/>lmax<sp/>*<sp/>a_dim1];</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L60:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a[i__<sp/>+<sp/>lmax<sp/>*<sp/>a_dim1]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/>h__[lmax]<sp/>=<sp/>h__[j];</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>J-TH<sp/>TRANSFORMATION<sp/>AND<sp/>APPLICATION<sp/>TO<sp/>A<sp/>AND<sp/>B<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/>L70:</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>MIN<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>j<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/>i__<sp/>=<sp/><ref refid="slsqp_8c_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(i__2,<sp/>*n);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>j<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/>i__3<sp/>=<sp/>*n<sp/>-<sp/>j;</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a28c37f92c3ee05f871d6e3c58a67ef7a" kindref="member">h12</ref>(&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;j,</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;i__2,</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m,</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;a[j<sp/>*<sp/>a_dim1<sp/>+<sp/>1],</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;h__[j],</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;a[i__<sp/>*<sp/>a_dim1<sp/>+<sp/>1],</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mda,</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;i__3);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L80:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>j<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a28c37f92c3ee05f871d6e3c58a67ef7a" kindref="member">h12</ref>(&amp;<ref refid="slsqp_8c_1a6b800a656683f20e606bd642ac8e81cc" kindref="member">c__2</ref>,</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;j,</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;i__2,</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m,</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;a[j<sp/>*<sp/>a_dim1<sp/>+<sp/>1],</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;h__[j],</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;b[b_offset],</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdb,</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb);</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>DETERMINE<sp/>PSEUDORANK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>ldiag;</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>i__2;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L90:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((d__1<sp/>=<sp/>a[j<sp/>+<sp/>j<sp/>*<sp/>a_dim1],<sp/>fabs(d__1))<sp/>&lt;=<sp/>*tau)<sp/>{</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L100;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/>k<sp/>=<sp/>ldiag;</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L110;</highlight></codeline>
<codeline lineno="1670"><highlight class="normal">L100:</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/>k<sp/>=<sp/>j<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal">L110:</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/>kp1<sp/>=<sp/>k<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>NORM<sp/>OF<sp/>RESIDUALS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>*nb;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(jb<sp/>=<sp/>1;<sp/>jb<sp/>&lt;=<sp/>i__2;<sp/>++jb)<sp/>{</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L130:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/>i__1<sp/>=<sp/>*m<sp/>-<sp/>k;</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/>rnorm[jb]<sp/>=<sp/><ref refid="slsqp_8c_1ae659bc9c1f411c00a88c25243eba595f" kindref="member">dnrm2</ref>(&amp;i__1,<sp/>&amp;b[kp1<sp/>+<sp/>jb<sp/>*<sp/>b_dim1],<sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L160;</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*nb;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(jb<sp/>=<sp/>1;<sp/>jb<sp/>&lt;=<sp/>i__1;<sp/>++jb)<sp/>{</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__2;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L150:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b[i__<sp/>+<sp/>jb<sp/>*<sp/>b_dim1]<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L270;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal">L160:</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>==<sp/>*n)<sp/>{</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L180;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>HOUSEHOLDER<sp/>DECOMPOSITION<sp/>OF<sp/>FIRST<sp/>K<sp/>ROWS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>k;<sp/>i__<sp/>&gt;=<sp/>1;<sp/>--i__)<sp/>{</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L170:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>i__<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a28c37f92c3ee05f871d6e3c58a67ef7a" kindref="member">h12</ref>(&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;i__,</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;kp1,</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n,</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;a[i__<sp/>+<sp/>a_dim1],</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mda,</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;g[i__],</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;a[a_offset],</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mda,</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;i__2);</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1713"><highlight class="normal">L180:</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>*nb;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(jb<sp/>=<sp/>1;<sp/>jb<sp/>&lt;=<sp/>i__2;<sp/>++jb)<sp/>{</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>SOLVE<sp/>K*K<sp/>TRIANGULAR<sp/>SYSTEM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>k;<sp/>i__<sp/>&gt;=<sp/>1;<sp/>--i__)<sp/>{</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>MIN<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i__1<sp/>=<sp/>i__<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/><ref refid="slsqp_8c_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(i__1,<sp/>*n);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L210:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i__1<sp/>=<sp/>k<sp/>-<sp/>i__;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b[i__<sp/>+<sp/>jb<sp/>*<sp/>b_dim1]<sp/>=<sp/>(b[i__<sp/>+<sp/>jb<sp/>*<sp/>b_dim1]</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><ref refid="slsqp_8c_1ab8f4bd9ffd53a9b1bae9e16e613c7fe7" kindref="member">ddot_sl</ref>(&amp;i__1,</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;a[i__<sp/>+<sp/>j<sp/>*<sp/>a_dim1],</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mda,</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;b[j<sp/>+<sp/>jb<sp/>*<sp/>b_dim1],</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>))</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>a[i__<sp/>+<sp/>i__<sp/>*<sp/>a_dim1];</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>COMPLETE<sp/>SOLUTION<sp/>VECTOR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>==<sp/>*n)<sp/>{</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L240;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>kp1;<sp/>j<sp/>&lt;=<sp/>i__1;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L220:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b[j<sp/>+<sp/>jb<sp/>*<sp/>b_dim1]<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/>i__1<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L230:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="slsqp_8c_1a28c37f92c3ee05f871d6e3c58a67ef7a" kindref="member">h12</ref>(&amp;<ref refid="slsqp_8c_1a6b800a656683f20e606bd642ac8e81cc" kindref="member">c__2</ref>,</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;i__,</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;kp1,</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n,</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;a[i__<sp/>+<sp/>a_dim1],</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mda,</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;g[i__],</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;b[jb<sp/>*<sp/>b_dim1<sp/>+<sp/>1],</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>,</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdb,</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="slsqp_8c_1ac3b6f615e934afb8022ec5b2c10977c7" kindref="member">c__1</ref>);</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>REORDER<sp/>SOLUTION<sp/>ACCORDING<sp/>TO<sp/>PREVIOUS<sp/>COLUMN<sp/>INTERCHANGES<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/>L240:</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>ldiag;<sp/>j<sp/>&gt;=<sp/>1;<sp/>--j)<sp/>{</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ip[j]<sp/>==<sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L250;</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>ip[j];</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>b[l<sp/>+<sp/>jb<sp/>*<sp/>b_dim1];</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b[l<sp/>+<sp/>jb<sp/>*<sp/>b_dim1]<sp/>=<sp/>b[j<sp/>+<sp/>jb<sp/>*<sp/>b_dim1];</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b[j<sp/>+<sp/>jb<sp/>*<sp/>b_dim1]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/>L250:;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1768"><highlight class="normal">L270:</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/>*krank<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1771"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>hfti<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight></codeline>
<codeline lineno="1773" refid="slsqp_8h_1a28c37f92c3ee05f871d6e3c58a67ef7a" refkind="member"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Subroutine<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="slsqp_8c_1a28c37f92c3ee05f871d6e3c58a67ef7a" kindref="member">h12</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>mode,</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>lpivot,</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>l1,</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>m,</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>u,</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>iue,</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>up,</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>c__,</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>ice,</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>icv,</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>ncv)<sp/>{</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialized<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>one<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zero<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>generated<sp/>locals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>u_dim1,<sp/>u_offset,<sp/>i__1,<sp/>i__2;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d__1;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b;</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__,<sp/>j,<sp/>i2,<sp/>i3,<sp/>i4;</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cl,<sp/>sm;</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>incr;</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>clinv;</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parameter<sp/>adjustments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/>u_dim1<sp/>=<sp/>*iue;</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/>u_offset<sp/>=<sp/>1<sp/>+<sp/>u_dim1;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/>u<sp/>-=<sp/>u_offset;</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/>--c__;</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Function<sp/>Body<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&gt;=<sp/>*lpivot<sp/>||<sp/>*lpivot<sp/>&gt;=<sp/>*l1<sp/>||<sp/>*l1<sp/>&gt;<sp/>*m)<sp/>{</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L80;</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/>cl<sp/>=<sp/>(d__1<sp/>=<sp/>u[*lpivot<sp/>*<sp/>u_dim1<sp/>+<sp/>1],<sp/>fabs(d__1));</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*mode<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L30;</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/>******<sp/>CONSTRUCT<sp/>THE<sp/>TRANSFORMATION<sp/>******<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*m;</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>*l1;<sp/>j<sp/>&lt;=<sp/>i__1;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/>sm<sp/>=<sp/>(d__1<sp/>=<sp/>u[j<sp/>*<sp/>u_dim1<sp/>+<sp/>1],<sp/>fabs(d__1));</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L10:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/>cl<sp/>=<sp/><ref refid="slsqp_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(sm,<sp/>cl);</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cl<sp/>&lt;=<sp/>zero)<sp/>{</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L80;</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/>clinv<sp/>=<sp/>one<sp/>/<sp/>cl;</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>2nd<sp/>power<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/>d__1<sp/>=<sp/>u[*lpivot<sp/>*<sp/>u_dim1<sp/>+<sp/>1]<sp/>*<sp/>clinv;</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/>sm<sp/>=<sp/>d__1<sp/>*<sp/>d__1;</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*m;</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>*l1;<sp/>j<sp/>&lt;=<sp/>i__1;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L20:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>2nd<sp/>power<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/>d__1<sp/>=<sp/>u[j<sp/>*<sp/>u_dim1<sp/>+<sp/>1]<sp/>*<sp/>clinv;</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/>sm<sp/>+=<sp/>d__1<sp/>*<sp/>d__1;</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/>cl<sp/>*=<sp/>sqrt(sm);</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u[*lpivot<sp/>*<sp/>u_dim1<sp/>+<sp/>1]<sp/>&gt;<sp/>zero)<sp/>{</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/>cl<sp/>=<sp/>-cl;</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/>*up<sp/>=<sp/>u[*lpivot<sp/>*<sp/>u_dim1<sp/>+<sp/>1]<sp/>-<sp/>cl;</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/>u[*lpivot<sp/>*<sp/>u_dim1<sp/>+<sp/>1]<sp/>=<sp/>cl;</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L40;</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/>******<sp/>APPLY<sp/>THE<sp/>TRANSFORMATION<sp/><sp/>I+U*(U**T)/B<sp/><sp/>TO<sp/>C<sp/>******<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal">L30:</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cl<sp/>&lt;=<sp/>zero)<sp/>{</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L80;</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1847"><highlight class="normal">L40:</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ncv<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L80;</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/>*up<sp/>*<sp/>u[*lpivot<sp/>*<sp/>u_dim1<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>&gt;=<sp/>zero)<sp/>{</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L80;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/>one<sp/>/<sp/>b;</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/>i2<sp/>=<sp/>1<sp/>-<sp/>*icv<sp/>+<sp/>*ice<sp/>*<sp/>(*lpivot<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/>incr<sp/>=<sp/>*ice<sp/>*<sp/>(*l1<sp/>-<sp/>*lpivot);</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*ncv;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>i__1;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/>i2<sp/>+=<sp/>*icv;</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/>i3<sp/>=<sp/>i2<sp/>+<sp/>incr;</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/>i4<sp/>=<sp/>i3;</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/>sm<sp/>=<sp/>c__[i2]<sp/>*<sp/>*up;</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>*m;</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>*l1;<sp/>i__<sp/>&lt;=<sp/>i__2;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sm<sp/>+=<sp/>c__[i3]<sp/>*<sp/>u[i__<sp/>*<sp/>u_dim1<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L50:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i3<sp/>+=<sp/>*ice;</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sm<sp/>==<sp/>zero)<sp/>{</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L70;</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/>sm<sp/>*=<sp/>b;</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/>c__[i2]<sp/>+=<sp/>sm<sp/>*<sp/>*up;</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>*m;</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>*l1;<sp/>i__<sp/>&lt;=<sp/>i__2;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c__[i4]<sp/>+=<sp/>sm<sp/>*<sp/>u[i__<sp/>*<sp/>u_dim1<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L60:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i4<sp/>+=<sp/>*ice;</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/>L70:;</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1883"><highlight class="normal">L80:</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1885"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>h12<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Subroutine<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1888" refid="slsqp_8h_1af746a9e04b19fdfc067a84752a503ccc" refkind="member"><highlight class="normal"><ref refid="slsqp_8c_1af746a9e04b19fdfc067a84752a503ccc" kindref="member">ldl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>z__,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>sigma,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialized<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zero<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>one<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>four<sp/>=<sp/>4.;</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epmach<sp/>=<sp/>2.22e-16;</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>generated<sp/>locals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__1,<sp/>i__2;</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__,<sp/>j;</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/>u,<sp/>v;</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ij;</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tp,<sp/>beta,<sp/>gamma,<sp/>alpha,<sp/>delta;</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parameter<sp/>adjustments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/>--w;</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/>--z__;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/>--a;</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Function<sp/>Body<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sigma<sp/>==<sp/>zero)<sp/>{</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L280;</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/>ij<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/>t<sp/>=<sp/>one<sp/>/<sp/>*sigma;</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sigma<sp/>&gt;<sp/>zero)<sp/>{</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L220;</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>PREPARE<sp/>NEGATIVE<sp/>UPDATE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L150:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/>w[i__]<sp/>=<sp/>z__[i__];</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/>w[i__];</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>v<sp/>*<sp/>v<sp/>/<sp/>a[ij];</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>i__<sp/>+<sp/>1;<sp/>j<sp/>&lt;=<sp/>i__2;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++ij;</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L160:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w[j]<sp/>-=<sp/>v<sp/>*<sp/>a[ij];</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L170:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/>++ij;</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&gt;=<sp/>zero)<sp/>{</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>epmach<sp/>/<sp/>*sigma;</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>*n<sp/>+<sp/>1<sp/>-<sp/>i__;</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/>ij<sp/>-=<sp/>i__;</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/>u<sp/>=<sp/>w[j];</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/>w[j]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L210:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>-=<sp/>u<sp/>*<sp/>u<sp/>/<sp/>a[ij];</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1950"><highlight class="normal">L220:</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>HERE<sp/>UPDATING<sp/>BEGINS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/>z__[i__];</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>v<sp/>/<sp/>a[ij];</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sigma<sp/>&lt;<sp/>zero)<sp/>{</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tp<sp/>=<sp/>w[i__];</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sigma<sp/>&gt;<sp/>zero)<sp/>{</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tp<sp/>=<sp/>t<sp/>+<sp/>delta<sp/>*<sp/>v;</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>tp<sp/>/<sp/>t;</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/>a[ij]<sp/>=<sp/>alpha<sp/>*<sp/>a[ij];</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i__<sp/>==<sp/>*n)<sp/>{</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L280;</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/>beta<sp/>=<sp/>delta<sp/>/<sp/>tp;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha<sp/>&gt;<sp/>four)<sp/>{</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L240;</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>i__<sp/>+<sp/>1;<sp/>j<sp/>&lt;=<sp/>i__2;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++ij;</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z__[j]<sp/>-=<sp/>v<sp/>*<sp/>a[ij];</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L230:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a[ij]<sp/>+=<sp/>beta<sp/>*<sp/>z__[j];</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L260;</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/>L240:</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/>gamma<sp/>=<sp/>t<sp/>/<sp/>tp;</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/>i__2<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>i__<sp/>+<sp/>1;<sp/>j<sp/>&lt;=<sp/>i__2;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++ij;</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>=<sp/>a[ij];</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a[ij]<sp/>=<sp/>gamma<sp/>*<sp/>u<sp/>+<sp/>beta<sp/>*<sp/>z__[j];</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L250:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z__[j]<sp/>-=<sp/>v<sp/>*<sp/>u;</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/>L260:</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/>++ij;</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L270:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>tp;</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1994"><highlight class="normal">L280:</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>END<sp/>OF<sp/>LDL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>ldl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight></codeline>
<codeline lineno="1999" refid="slsqp_8h_1a9b2e40140ae64d5dcc6aa1f8cd413226" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="slsqp_8c_1a9b2e40140ae64d5dcc6aa1f8cd413226" kindref="member">linmin</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>mode,</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>ax,</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>bx,</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>f,</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>tol)<sp/>{</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialized<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c__<sp/>=<sp/>.381966011;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps<sp/>=<sp/>1.5e-8;</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zero<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"></highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>generated<sp/>locals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ret_val,<sp/>d__1;</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/>b,<sp/>d__,<sp/>e,<sp/>m,<sp/>p,<sp/>q,<sp/>r__,<sp/>u,<sp/>v,<sp/>w,<sp/>x,<sp/>fu,<sp/>fv,<sp/>fw,<sp/>fx,<sp/>tol1,<sp/>tol2;</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(*mode)<sp/>{</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L10;</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L55;</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>INITIALIZATION<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/>a<sp/>=<sp/>*ax;</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/>*bx;</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/>e<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/>v<sp/>=<sp/>a<sp/>+<sp/>c__<sp/>*<sp/>(b<sp/>-<sp/>a);</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/>w<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/>ret_val<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/>*mode<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L100;</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>MAIN<sp/>LOOP<sp/>STARTS<sp/>HERE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal">L10:</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/>fx<sp/>=<sp/>*f;</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/>fv<sp/>=<sp/>fx;</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/>fw<sp/>=<sp/>fv;</highlight></codeline>
<codeline lineno="2037"><highlight class="normal">L20:</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/>m<sp/>=<sp/>(a<sp/>+<sp/>b)<sp/>*<sp/>.5;</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/>tol1<sp/>=<sp/>eps<sp/>*<sp/>fabs(x)<sp/>+<sp/>*tol;</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/>tol2<sp/>=<sp/>tol1<sp/>+<sp/>tol1;</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>TEST<sp/>CONVERGENCE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((d__1<sp/>=<sp/>x<sp/>-<sp/>m,<sp/>fabs(d__1))<sp/>&lt;=<sp/>tol2<sp/>-<sp/>(b<sp/>-<sp/>a)<sp/>*<sp/>.5)<sp/>{</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L90;</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/>r__<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/>q<sp/>=<sp/>r__;</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/>q;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(e)<sp/>&lt;=<sp/>tol1)<sp/>{</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L30;</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>FIT<sp/>PARABOLA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/>r__<sp/>=<sp/>(x<sp/>-<sp/>w)<sp/>*<sp/>(fx<sp/>-<sp/>fv);</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/>q<sp/>=<sp/>(x<sp/>-<sp/>v)<sp/>*<sp/>(fx<sp/>-<sp/>fw);</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/>(x<sp/>-<sp/>v)<sp/>*<sp/>q<sp/>-<sp/>(x<sp/>-<sp/>w)<sp/>*<sp/>r__;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/>q<sp/>-=<sp/>r__;</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/>q<sp/>+=<sp/>q;</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q<sp/>&gt;<sp/>zero)<sp/>{</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>-p;</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q<sp/>&lt;<sp/>zero)<sp/>{</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/>q<sp/>=<sp/>-q;</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/>r__<sp/>=<sp/>e;</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/>e<sp/>=<sp/>d__;</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>IS<sp/>PARABOLA<sp/>ACCEPTABLE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal">L30:</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(p)<sp/>&gt;=<sp/>(d__1<sp/>=<sp/>q<sp/>*<sp/>r__,<sp/>fabs(d__1))<sp/>*<sp/>.5<sp/>||<sp/>p<sp/>&lt;=<sp/>q<sp/>*<sp/>(a<sp/>-<sp/>x)</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>p<sp/>&gt;=<sp/>q<sp/>*<sp/>(b<sp/>-<sp/>x))<sp/>{</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L40;</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>PARABOLIC<sp/>INTERPOLATION<sp/>STEP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/>d__<sp/>=<sp/>p<sp/>/<sp/>q;</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>F<sp/>MUST<sp/>NOT<sp/>BE<sp/>EVALUATED<sp/>TOO<sp/>CLOSE<sp/>TO<sp/>A<sp/>OR<sp/>B<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u<sp/>-<sp/>a<sp/>&lt;<sp/>tol2)<sp/>{</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/>d__1<sp/>=<sp/>m<sp/>-<sp/>x;</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/>d__<sp/>=<sp/>copysign(tol1,<sp/>d__1);</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>-<sp/>u<sp/>&lt;<sp/>tol2)<sp/>{</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/>d__1<sp/>=<sp/>m<sp/>-<sp/>x;</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/>d__<sp/>=<sp/>copysign(tol1,<sp/>d__1);</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L50;</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>GOLDEN<sp/>SECTION<sp/>STEP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal">L40:</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;=<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>=<sp/>a<sp/>-<sp/>x;</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>=<sp/>b<sp/>-<sp/>x;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/>d__<sp/>=<sp/>c__<sp/>*<sp/>e;</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>F<sp/>MUST<sp/>NOT<sp/>BE<sp/>EVALUATED<sp/>TOO<sp/>CLOSE<sp/>TO<sp/>X<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal">L50:</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(d__)<sp/>&lt;<sp/>tol1)<sp/>{</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/>d__<sp/>=<sp/>copysign(tol1,<sp/>d__);</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/>u<sp/>=<sp/>x<sp/>+<sp/>d__;</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/>ret_val<sp/>=<sp/>u;</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/>*mode<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L100;</highlight></codeline>
<codeline lineno="2101"><highlight class="normal">L55:</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/>fu<sp/>=<sp/>*f;</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>UPDATE<sp/>A,<sp/>B,<sp/>V,<sp/>W,<sp/>AND<sp/>X<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fu<sp/>&gt;<sp/>fx)<sp/>{</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L60;</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u<sp/>&gt;=<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u<sp/>&lt;<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/>v<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/>fv<sp/>=<sp/>fw;</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/>w<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/>fw<sp/>=<sp/>fx;</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>u;</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/>fx<sp/>=<sp/>fu;</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L85;</highlight></codeline>
<codeline lineno="2120"><highlight class="normal">L60:</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u<sp/>&lt;<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>u;</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u<sp/>&gt;=<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>u;</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fu<sp/>&lt;=<sp/>fw<sp/>||<sp/>w<sp/>==<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L70;</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fu<sp/>&lt;=<sp/>fv<sp/>||<sp/>v<sp/>==<sp/>x<sp/>||<sp/>v<sp/>==<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L80;</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L85;</highlight></codeline>
<codeline lineno="2134"><highlight class="normal">L70:</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/>v<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/>fv<sp/>=<sp/>fw;</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/>w<sp/>=<sp/>u;</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/>fw<sp/>=<sp/>fu;</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L85;</highlight></codeline>
<codeline lineno="2140"><highlight class="normal">L80:</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/>v<sp/>=<sp/>u;</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/>fv<sp/>=<sp/>fu;</highlight></codeline>
<codeline lineno="2143"><highlight class="normal">L85:</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L20;</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>END<sp/>OF<sp/>MAIN<sp/>LOOP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal">L90:</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/>ret_val<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/>*mode<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="2149"><highlight class="normal">L100:</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret_val;</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>END<sp/>OF<sp/>LINMIN<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2152"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>linmin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"></highlight></codeline>
<codeline lineno="2154"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>##<sp/>Following<sp/>a<sp/>selection<sp/>from<sp/>BLAS<sp/>Level<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2155" refid="slsqp_8h_1a7d8f534b2d6396e7e4fe9430a7478f55" refkind="member"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Subroutine<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="slsqp_8c_1a7d8f534b2d6396e7e4fe9430a7478f55" kindref="member">daxpy_sl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n,</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>da,</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>dx,</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>incx,</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>dy,</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>incy)<sp/>{</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>generated<sp/>locals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__1;</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__,<sp/>m,<sp/>ix,<sp/>iy,<sp/>mp1;</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parameter<sp/>adjustments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/>--dy;</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/>--dx;</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"></highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Function<sp/>Body<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*n<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*da<sp/>==<sp/>0.)<sp/>{</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*incx<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>*incy<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L20;</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CODE<sp/>FOR<sp/>UNEQUAL<sp/>INCREMENTS<sp/>OR<sp/>EQUAL<sp/>INCREMENTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NOT<sp/>EQUAL<sp/>TO<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/>ix<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/>iy<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*incx<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/>ix<sp/>=<sp/>(-(*n)<sp/>+<sp/>1)<sp/>*<sp/>*incx<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*incy<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/>iy<sp/>=<sp/>(-(*n)<sp/>+<sp/>1)<sp/>*<sp/>*incy<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/>dy[iy]<sp/>+=<sp/>*da<sp/>*<sp/>dx[ix];</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/>ix<sp/>+=<sp/>*incx;</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/>iy<sp/>+=<sp/>*incy;</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L10:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CODE<sp/>FOR<sp/>BOTH<sp/>INCREMENTS<sp/>EQUAL<sp/>TO<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2200"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLEAN-UP<sp/>LOOP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal">L20:</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/>m<sp/>=<sp/>*n<sp/>%<sp/>4;</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L40;</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/>dy[i__]<sp/>+=<sp/>*da<sp/>*<sp/>dx[i__];</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L30:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*n<sp/>&lt;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2214"><highlight class="normal">L40:</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/>mp1<sp/>=<sp/>m<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>mp1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>i__<sp/>+=<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/>dy[i__]<sp/>+=<sp/>*da<sp/>*<sp/>dx[i__];</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/>dy[i__<sp/>+<sp/>1]<sp/>+=<sp/>*da<sp/>*<sp/>dx[i__<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/>dy[i__<sp/>+<sp/>2]<sp/>+=<sp/>*da<sp/>*<sp/>dx[i__<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/>dy[i__<sp/>+<sp/>3]<sp/>+=<sp/>*da<sp/>*<sp/>dx[i__<sp/>+<sp/>3];</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L50:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2225"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>daxpy_sl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"></highlight></codeline>
<codeline lineno="2227" refid="slsqp_8h_1a6cca4592861e49593fcdec93143114d7" refkind="member"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Subroutine<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="slsqp_8c_1a6cca4592861e49593fcdec93143114d7" kindref="member">dcopy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n,</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>dx,</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>incx,</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>dy,</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>incy)<sp/>{</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>generated<sp/>locals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__1;</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__,<sp/>m,<sp/>ix,<sp/>iy,<sp/>mp1;</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parameter<sp/>adjustments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/>--dy;</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/>--dx;</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Function<sp/>Body<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*n<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*incx<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>*incy<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L20;</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CODE<sp/>FOR<sp/>UNEQUAL<sp/>INCREMENTS<sp/>OR<sp/>EQUAL<sp/>INCREMENTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NOT<sp/>EQUAL<sp/>TO<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/>ix<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/>iy<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*incx<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/>ix<sp/>=<sp/>(-(*n)<sp/>+<sp/>1)<sp/>*<sp/>*incx<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*incy<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/>iy<sp/>=<sp/>(-(*n)<sp/>+<sp/>1)<sp/>*<sp/>*incy<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/>dy[iy]<sp/>=<sp/>dx[ix];</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/>ix<sp/>+=<sp/>*incx;</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/>iy<sp/>+=<sp/>*incy;</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L10:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CODE<sp/>FOR<sp/>BOTH<sp/>INCREMENTS<sp/>EQUAL<sp/>TO<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLEAN-UP<sp/>LOOP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal">L20:</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/>m<sp/>=<sp/>*n<sp/>%<sp/>7;</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L40;</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/>dy[i__]<sp/>=<sp/>dx[i__];</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L30:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*n<sp/>&lt;<sp/>7)<sp/>{</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2282"><highlight class="normal">L40:</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/>mp1<sp/>=<sp/>m<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>mp1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>i__<sp/>+=<sp/>7)<sp/>{</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/>dy[i__]<sp/>=<sp/>dx[i__];</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/>dy[i__<sp/>+<sp/>1]<sp/>=<sp/>dx[i__<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/>dy[i__<sp/>+<sp/>2]<sp/>=<sp/>dx[i__<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/>dy[i__<sp/>+<sp/>3]<sp/>=<sp/>dx[i__<sp/>+<sp/>3];</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/>dy[i__<sp/>+<sp/>4]<sp/>=<sp/>dx[i__<sp/>+<sp/>4];</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/>dy[i__<sp/>+<sp/>5]<sp/>=<sp/>dx[i__<sp/>+<sp/>5];</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/>dy[i__<sp/>+<sp/>6]<sp/>=<sp/>dx[i__<sp/>+<sp/>6];</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L50:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2296"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>dcopy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"></highlight></codeline>
<codeline lineno="2298" refid="slsqp_8h_1ab8f4bd9ffd53a9b1bae9e16e613c7fe7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="slsqp_8c_1ab8f4bd9ffd53a9b1bae9e16e613c7fe7" kindref="member">ddot_sl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n,</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>dx,</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>incx,</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>dy,</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>incy)<sp/>{</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>generated<sp/>locals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__1;</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ret_val;</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__,<sp/>m,<sp/>ix,<sp/>iy,<sp/>mp1;</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dtemp;</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parameter<sp/>adjustments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/>--dy;</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/>--dx;</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"></highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Function<sp/>Body<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/>ret_val<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/>dtemp<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*n<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret_val;</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*incx<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>*incy<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L20;</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CODE<sp/>FOR<sp/>UNEQUAL<sp/>INCREMENTS<sp/>OR<sp/>EQUAL<sp/>INCREMENTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NOT<sp/>EQUAL<sp/>TO<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/>ix<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/>iy<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*incx<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/>ix<sp/>=<sp/>(-(*n)<sp/>+<sp/>1)<sp/>*<sp/>*incx<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*incy<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/>iy<sp/>=<sp/>(-(*n)<sp/>+<sp/>1)<sp/>*<sp/>*incy<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/>dtemp<sp/>+=<sp/>dx[ix]<sp/>*<sp/>dy[iy];</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/>ix<sp/>+=<sp/>*incx;</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/>iy<sp/>+=<sp/>*incy;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L10:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/>ret_val<sp/>=<sp/>dtemp;</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret_val;</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CODE<sp/>FOR<sp/>BOTH<sp/>INCREMENTS<sp/>EQUAL<sp/>TO<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLEAN-UP<sp/>LOOP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal">L20:</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/>m<sp/>=<sp/>*n<sp/>%<sp/>5;</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L40;</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/>dtemp<sp/>+=<sp/>dx[i__]<sp/>*<sp/>dy[i__];</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L30:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*n<sp/>&lt;<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L60;</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2358"><highlight class="normal">L40:</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/>mp1<sp/>=<sp/>m<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>mp1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>i__<sp/>+=<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/>dtemp<sp/>=<sp/>dtemp<sp/>+<sp/>dx[i__]<sp/>*<sp/>dy[i__]<sp/>+<sp/>dx[i__<sp/>+<sp/>1]<sp/>*<sp/>dy[i__<sp/>+<sp/>1]</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>dx[i__<sp/>+<sp/>2]<sp/>*<sp/>dy[i__<sp/>+<sp/>2]<sp/>+<sp/>dx[i__<sp/>+<sp/>3]<sp/>*<sp/>dy[i__<sp/>+<sp/>3]</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>dx[i__<sp/>+<sp/>4]<sp/>*<sp/>dy[i__<sp/>+<sp/>4];</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L50:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2367"><highlight class="normal">L60:</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/>ret_val<sp/>=<sp/>dtemp;</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret_val;</highlight></codeline>
<codeline lineno="2370"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>ddot_sl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"></highlight></codeline>
<codeline lineno="2372" refid="slsqp_8h_1aff4f441d0ef8a288248ce241e9a25038" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="slsqp_8c_1aff4f441d0ef8a288248ce241e9a25038" kindref="member">dnrm1</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>i__,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialized<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2374"><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zero<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>one<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>generated<sp/>locals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__1;</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ret_val,<sp/>d__1,<sp/>d__2,<sp/>d__3;</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum,<sp/>temp,<sp/>scale,<sp/>snormx;</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"></highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parameter<sp/>adjustments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/>--x;</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Function<sp/>Body<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"></highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/>snormx<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*j;</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>*i__;<sp/>k<sp/>&lt;=<sp/>i__1;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L10:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>MAX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/>d__2<sp/>=<sp/>snormx,<sp/>d__3<sp/>=<sp/>(d__1<sp/>=<sp/>x[k],<sp/>fabs(d__1));</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/>snormx<sp/>=<sp/><ref refid="slsqp_8c_1affe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(d__2,<sp/>d__3);</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/>ret_val<sp/>=<sp/>snormx;</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snormx<sp/>==<sp/>zero)<sp/>{</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret_val;</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/>scale<sp/>=<sp/>snormx;</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snormx<sp/>&gt;=<sp/>one)<sp/>{</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/>scale<sp/>=<sp/>sqrt(snormx);</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/>sum<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*j;</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>*i__;<sp/>k<sp/>&lt;=<sp/>i__1;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((d__1<sp/>=<sp/>x[k],<sp/>fabs(d__1))<sp/>+<sp/>scale<sp/>!=<sp/>scale)<sp/>{</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>x[k]<sp/>/<sp/>snormx;</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(one<sp/>+<sp/>temp<sp/>!=<sp/>one)<sp/>{</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>temp<sp/>*<sp/>temp;</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L20:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/>sum<sp/>=<sp/>sqrt(sum);</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/>ret_val<sp/>=<sp/>snormx<sp/>*<sp/>sum;</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret_val;</highlight></codeline>
<codeline lineno="2422"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>dnrm1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2423"><highlight class="normal"></highlight></codeline>
<codeline lineno="2424" refid="slsqp_8h_1ae659bc9c1f411c00a88c25243eba595f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="slsqp_8c_1ae659bc9c1f411c00a88c25243eba595f" kindref="member">dnrm2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>dx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>incx)<sp/>{</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialized<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zero<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>one<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cutlo<sp/>=<sp/>8.232e-11;</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cuthi<sp/>=<sp/>1.304e19;</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"></highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>generated<sp/>locals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__1,<sp/>i__2;</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ret_val,<sp/>d__1;</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"></highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__,<sp/>j,<sp/>nn;</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum,<sp/>xmax;</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next;</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hitest;</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parameter<sp/>adjustments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/>--dx;</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"></highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*n<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L10;</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/>ret_val<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L300;</highlight></codeline>
<codeline lineno="2450"><highlight class="normal">L10:</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/>next<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/>sum<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/>nn<sp/>=<sp/>*n<sp/>*<sp/>*incx;</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BEGIN<sp/>MAIN<sp/>LOOP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/>i__<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2456"><highlight class="normal">L20:</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(next)<sp/>{</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L30;</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L50;</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L70;</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L110;</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2467"><highlight class="normal">L30:</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((d__1<sp/>=<sp/>dx[i__],<sp/>fabs(d__1))<sp/>&gt;<sp/>cutlo)<sp/>{</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L85;</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/>next<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/>xmax<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PHASE<sp/>1.<sp/><sp/>SUM<sp/>IS<sp/>ZERO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2474"><highlight class="normal">L50:</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dx[i__]<sp/>==<sp/>zero)<sp/>{</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L200;</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((d__1<sp/>=<sp/>dx[i__],<sp/>fabs(d__1))<sp/>&gt;<sp/>cutlo)<sp/>{</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L85;</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PREPARE<sp/>FOR<sp/>PHASE<sp/>2.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/>next<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L105;</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PREPARE<sp/>FOR<sp/>PHASE<sp/>4.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2485"><highlight class="normal">L100:</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/>i__<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/>next<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/>sum<sp/>=<sp/>sum<sp/>/<sp/>dx[i__]<sp/>/<sp/>dx[i__];</highlight></codeline>
<codeline lineno="2489"><highlight class="normal">L105:</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/>xmax<sp/>=<sp/>(d__1<sp/>=<sp/>dx[i__],<sp/>fabs(d__1));</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L115;</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PHASE<sp/>2.<sp/><sp/>SUM<sp/>IS<sp/>SMALL.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2493"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SCALE<sp/>TO<sp/>AVOID<sp/>DESTRUCTIVE<sp/>UNDERFLOW.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2494"><highlight class="normal">L70:</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((d__1<sp/>=<sp/>dx[i__],<sp/>fabs(d__1))<sp/>&gt;<sp/>cutlo)<sp/>{</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L75;</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMMON<sp/>CODE<sp/>FOR<sp/>PHASES<sp/>2<sp/>AND<sp/>4.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2499"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IN<sp/>PHASE<sp/>4<sp/>SUM<sp/>IS<sp/>LARGE.<sp/><sp/>SCALE<sp/>TO<sp/>AVOID<sp/>OVERFLOW.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2500"><highlight class="normal">L110:</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((d__1<sp/>=<sp/>dx[i__],<sp/>fabs(d__1))<sp/>&lt;=<sp/>xmax)<sp/>{</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L115;</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>2nd<sp/>power<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/>d__1<sp/>=<sp/>xmax<sp/>/<sp/>dx[i__];</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/>sum<sp/>=<sp/>one<sp/>+<sp/>sum<sp/>*<sp/>(d__1<sp/>*<sp/>d__1);</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/>xmax<sp/>=<sp/>(d__1<sp/>=<sp/>dx[i__],<sp/>fabs(d__1));</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L200;</highlight></codeline>
<codeline lineno="2509"><highlight class="normal">L115:</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>2nd<sp/>power<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/>d__1<sp/>=<sp/>dx[i__]<sp/>/<sp/>xmax;</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/>sum<sp/>+=<sp/>d__1<sp/>*<sp/>d__1;</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L200;</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PREPARE<sp/>FOR<sp/>PHASE<sp/>3.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal">L75:</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/>sum<sp/>=<sp/>sum<sp/>*<sp/>xmax<sp/>*<sp/>xmax;</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/>FOR<sp/>REAL<sp/>OR<sp/>D.P.<sp/>SET<sp/>HITEST<sp/>=<sp/>CUTHI/N<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2518"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/>FOR<sp/>COMPLEX<sp/><sp/><sp/><sp/><sp/><sp/>SET<sp/>HITEST<sp/>=<sp/>CUTHI/(2*N)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2519"><highlight class="normal">L85:</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/>hitest<sp/>=<sp/>cuthi<sp/>/<sp/>(float)<sp/>(*n);</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PHASE<sp/>3.<sp/><sp/>SUM<sp/>IS<sp/>MID-RANGE.<sp/><sp/>NO<sp/>SCALING.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>nn;</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>*incx;</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>i__;<sp/>i__2<sp/>&lt;<sp/>0<sp/>?<sp/>j<sp/>&gt;=<sp/>i__1<sp/>:<sp/>j<sp/>&lt;=<sp/>i__1;<sp/>j<sp/>+=<sp/>i__2)<sp/>{</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((d__1<sp/>=<sp/>dx[j],<sp/>fabs(d__1))<sp/>&gt;=<sp/>hitest)<sp/>{</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L100;</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L95:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>2nd<sp/>power<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/>d__1<sp/>=<sp/>dx[j];</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>d__1<sp/>*<sp/>d__1;</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/>ret_val<sp/>=<sp/>sqrt(sum);</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L300;</highlight></codeline>
<codeline lineno="2535"><highlight class="normal">L200:</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/>i__<sp/>+=<sp/>*incx;</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i__<sp/>&lt;=<sp/>nn)<sp/>{</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L20;</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>END<sp/>OF<sp/>MAIN<sp/>LOOP.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPUTE<sp/>SQUARE<sp/>ROOT<sp/>AND<sp/>ADJUST<sp/>FOR<sp/>SCALING.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/>ret_val<sp/>=<sp/>xmax<sp/>*<sp/>sqrt(sum);</highlight></codeline>
<codeline lineno="2543"><highlight class="normal">L300:</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret_val;</highlight></codeline>
<codeline lineno="2545"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>dnrm2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2546"><highlight class="normal"></highlight></codeline>
<codeline lineno="2547" refid="slsqp_8h_1ab21b159dcf686c0a01d8bf4deef90608" refkind="member"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Subroutine<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="slsqp_8c_1ab21b159dcf686c0a01d8bf4deef90608" kindref="member">dsrot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n,</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>dx,</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>incx,</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>dy,</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>incy,</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>c__,</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>generated<sp/>locals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__1;</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__,<sp/>ix,<sp/>iy;</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dtemp;</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"></highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parameter<sp/>adjustments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/>--dy;</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/>--dx;</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"></highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Function<sp/>Body<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*n<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*incx<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>*incy<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L20;</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>CODE<sp/>FOR<sp/>UNEQUAL<sp/>INCREMENTS<sp/>OR<sp/>EQUAL<sp/>INCREMENTS<sp/>NOT<sp/>EQUAL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TO<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/>ix<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/>iy<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*incx<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/>ix<sp/>=<sp/>(-(*n)<sp/>+<sp/>1)<sp/>*<sp/>*incx<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*incy<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/>iy<sp/>=<sp/>(-(*n)<sp/>+<sp/>1)<sp/>*<sp/>*incy<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/>dtemp<sp/>=<sp/>*c__<sp/>*<sp/>dx[ix]<sp/>+<sp/>*s<sp/>*<sp/>dy[iy];</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/>dy[iy]<sp/>=<sp/>*c__<sp/>*<sp/>dy[iy]<sp/>-<sp/>*s<sp/>*<sp/>dx[ix];</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/>dx[ix]<sp/>=<sp/>dtemp;</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/>ix<sp/>+=<sp/>*incx;</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/>iy<sp/>+=<sp/>*incy;</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L10:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>CODE<sp/>FOR<sp/>BOTH<sp/>INCREMENTS<sp/>EQUAL<sp/>TO<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal">L20:</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/>dtemp<sp/>=<sp/>*c__<sp/>*<sp/>dx[i__]<sp/>+<sp/>*s<sp/>*<sp/>dy[i__];</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/>dy[i__]<sp/>=<sp/>*c__<sp/>*<sp/>dy[i__]<sp/>-<sp/>*s<sp/>*<sp/>dx[i__];</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/>dx[i__]<sp/>=<sp/>dtemp;</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L30:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2602"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>dsrot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2603"><highlight class="normal"></highlight></codeline>
<codeline lineno="2604" refid="slsqp_8h_1ab4a611e9eb900cbae0fd9ed8b13962bb" refkind="member"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Subroutine<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="slsqp_8c_1ab4a611e9eb900cbae0fd9ed8b13962bb" kindref="member">dsrotg</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>da,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>db,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>c__,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialized<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2606"><highlight class="normal"></highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>one<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zero<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"></highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>generated<sp/>locals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d__1,<sp/>d__2;</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"></highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r__,<sp/>z__,<sp/>roe,<sp/>scale;</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"></highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/>roe<sp/>=<sp/>*db;</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(*da)<sp/>&gt;<sp/>fabs(*db))<sp/>{</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/>roe<sp/>=<sp/>*da;</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/>scale<sp/>=<sp/>fabs(*da)<sp/>+<sp/>fabs(*db);</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale<sp/>!=<sp/>zero)<sp/>{</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L10;</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/>*c__<sp/>=<sp/>one;</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/>*s<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/>r__<sp/>=<sp/>zero;</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L20;</highlight></codeline>
<codeline lineno="2628"><highlight class="normal">L10:</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>2nd<sp/>power<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/>d__1<sp/>=<sp/>*da<sp/>/<sp/>scale;</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computing<sp/>2nd<sp/>power<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/>d__2<sp/>=<sp/>*db<sp/>/<sp/>scale;</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/>r__<sp/>=<sp/>scale<sp/>*<sp/>sqrt(d__1<sp/>*<sp/>d__1<sp/>+<sp/>d__2<sp/>*<sp/>d__2);</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/>r__<sp/>=<sp/>copysign(one,<sp/>roe)<sp/>*<sp/>r__;</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/>*c__<sp/>=<sp/>*da<sp/>/<sp/>r__;</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/>*s<sp/>=<sp/>*db<sp/>/<sp/>r__;</highlight></codeline>
<codeline lineno="2637"><highlight class="normal">L20:</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/>z__<sp/>=<sp/>*s;</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(*c__)<sp/>&gt;<sp/>zero<sp/>&amp;&amp;<sp/>fabs(*c__)<sp/>&lt;=<sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/>z__<sp/>=<sp/>one<sp/>/<sp/>*c__;</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/>*da<sp/>=<sp/>r__;</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/>*db<sp/>=<sp/>z__;</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2645"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>dsrotg<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal"></highlight></codeline>
<codeline lineno="2647"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Subroutine<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2648" refid="slsqp_8h_1a42ae61b7465343cc4978a6c6560f78cb" refkind="member"><highlight class="normal"><ref refid="slsqp_8c_1a42ae61b7465343cc4978a6c6560f78cb" kindref="member">dscal_sl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>da,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>dx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>incx)<sp/>{</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>generated<sp/>locals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__1,<sp/>i__2;</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"></highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__,<sp/>m,<sp/>mp1,<sp/>nincx;</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"></highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parameter<sp/>adjustments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/>--dx;</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"></highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Function<sp/>Body<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*n<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*incx<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L20;</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CODE<sp/>FOR<sp/>INCREMENT<sp/>NOT<sp/>EQUAL<sp/>TO<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/>nincx<sp/>=<sp/>*n<sp/>*<sp/>*incx;</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>nincx;</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>*incx;</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__2<sp/>&lt;<sp/>0<sp/>?<sp/>i__<sp/>&gt;=<sp/>i__1<sp/>:<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>i__<sp/>+=<sp/>i__2)<sp/>{</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/>dx[i__]<sp/>=<sp/>*da<sp/>*<sp/>dx[i__];</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L10:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CODE<sp/>FOR<sp/>INCREMENT<sp/>EQUAL<sp/>TO<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2675"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLEAN-UP<sp/>LOOP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2676"><highlight class="normal">L20:</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/>m<sp/>=<sp/>*n<sp/>%<sp/>5;</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>L40;</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__2;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/>dx[i__]<sp/>=<sp/>*da<sp/>*<sp/>dx[i__];</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L30:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*n<sp/>&lt;<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2689"><highlight class="normal">L40:</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/>mp1<sp/>=<sp/>m<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/>i__2<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>mp1;<sp/>i__<sp/>&lt;=<sp/>i__2;<sp/>i__<sp/>+=<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/>dx[i__]<sp/>=<sp/>*da<sp/>*<sp/>dx[i__];</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/>dx[i__<sp/>+<sp/>1]<sp/>=<sp/>*da<sp/>*<sp/>dx[i__<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/>dx[i__<sp/>+<sp/>2]<sp/>=<sp/>*da<sp/>*<sp/>dx[i__<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/>dx[i__<sp/>+<sp/>3]<sp/>=<sp/>*da<sp/>*<sp/>dx[i__<sp/>+<sp/>3];</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/>dx[i__<sp/>+<sp/>4]<sp/>=<sp/>*da<sp/>*<sp/>dx[i__<sp/>+<sp/>4];</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L50:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2701"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>dscal_sl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"></highlight></codeline>
<codeline lineno="2703"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Subroutine<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2704" refid="slsqp_8h_1ab68793d89fb57020efdd2bb3b451a27a" refkind="member"><highlight class="normal"><ref refid="slsqp_8c_1ab68793d89fb57020efdd2bb3b451a27a" kindref="member">bound</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>n,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>xl,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>xu)<sp/>{</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>generated<sp/>locals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__1;</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"></highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i__;</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"></highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parameter<sp/>adjustments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/>--xu;</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/>--xl;</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/>--x;</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"></highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Function<sp/>Body<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/>i__1<sp/>=<sp/>*n;</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i__<sp/>=<sp/>1;<sp/>i__<sp/>&lt;=<sp/>i__1;<sp/>++i__)<sp/>{</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Note<sp/>that<sp/>xl(i)<sp/>and<sp/>xu(i)<sp/>may<sp/>be<sp/>NaN<sp/>to<sp/>indicate<sp/>no<sp/>bound<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xl[i__]<sp/>==<sp/>xl[i__]<sp/>&amp;&amp;<sp/>x[i__]<sp/>&lt;<sp/>xl[i__])<sp/>{</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x[i__]<sp/>=<sp/>xl[i__];</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xu[i__]<sp/>==<sp/>xu[i__]<sp/>&amp;&amp;<sp/>x[i__]<sp/>&gt;<sp/>xu[i__])<sp/>{</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x[i__]<sp/>=<sp/>xu[i__];</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2727"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>bound<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/splinepy/splinepy/src/proximity/slsqp/slsqp.c"/>
  </compounddef>
</doxygen>
