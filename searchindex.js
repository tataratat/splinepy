Search.setIndex({"alltitles": {"1. Create a spline": [[724, "create-a-spline"]], "2. Modifications": [[724, "modifications"]], "3. Evaluate": [[724, "evaluate"]], "4. Helper Modules": [[724, "helper-modules"]], "4.1 Create": [[724, "create"]], "4.2 Extract": [[724, "extract"]], "4.3 Free-form deformation": [[724, "free-form-deformation"]], "4.4 Fitting": [[724, "fitting"]], "4.5 Mapper": [[724, "mapper"]], "5. Microstructure": [[724, "microstructure"]], "6. Multipatch": [[724, "multipatch"]], "7. Input/output and vector graphics": [[724, "input-output-and-vector-graphics"]], "A general introduction to splines": [[726, "a-general-introduction-to-splines"]], "API References": [[723, null]], "An introduction to different spline types": [[726, "an-introduction-to-different-spline-types"]], "Automatic formatting / style check": [[0, "automatic-formatting-style-check"]], "B-splines": [[726, "b-splines"]], "B\u00e9zier splines": [[726, "bezier-splines"]], "C++ API": [[723, "c-api"]], "C++ style / implementation preferences": [[0, "c-style-implementation-preferences"]], "Contributing": [[0, null], [0, "id1"], [724, "contributing"]], "Creating a basic NURBS": [[726, "creating-a-basic-nurbs"]], "Documentation": [[724, "documentation"]], "Drawbacks of B\u00e9zier curves": [[726, "drawbacks-of-bezier-curves"]], "Examples": [[726, "examples"], [726, "id1"]], "Further reading": [[726, "further-reading"]], "In which situations are splines helpful?": [[726, "in-which-situations-are-splines-helpful"]], "Install guide": [[724, null]], "Introduction to Splines": [[726, null]], "Library": [[724, null]], "List of show_options": [[726, "list-of-show-options"]], "Local documentation build": [[0, "local-documentation-build"]], "MultipatchShowOption": [[726, "multipatchshowoption"]], "Non-uniform rational B-splines (NURBS)": [[726, "non-uniform-rational-b-splines-nurbs"]], "Notebook plotting": [[726, "notebook-plotting"]], "Overview": [[723, "overview"]], "Plotting data on spline": [[726, "plotting-data-on-spline"]], "Properties of B-spline basis functions:": [[726, "properties-of-b-spline-basis-functions"]], "Properties of B\u00e9zier curves": [[726, "properties-of-bezier-curves"]], "Properties of NURBS basis functions:": [[726, "properties-of-nurbs-basis-functions"]], "Properties of Rational B\u00e9zier splines": [[726, "properties-of-rational-bezier-splines"]], "Python API": [[723, "python-api"]], "Python style / implementation preferences": [[0, "python-style-implementation-preferences"]], "Quick start": [[0, "quick-start"], [724, "quick-start"]], "Rational B\u00e9zier splines": [[726, "rational-bezier-splines"]], "Setting show_options": [[726, "setting-show-options"]], "Spline visualization": [[726, "spline-visualization"]], "SplineShowOption": [[726, "splineshowoption"]], "Splines?": [[724, null]], "Table of Contents": [[724, "table-of-contents"]], "Try online": [[724, "try-online"]], "Visualization": [[726, "visualization"]], "splinepy": [[1, null]], "splinepy.bezier": [[2, null]], "splinepy.bezier.Bezier": [[3, null]], "splinepy.bezier.Bezier.basis": [[4, null]], "splinepy.bezier.Bezier.basis_and_support": [[5, null]], "splinepy.bezier.Bezier.basis_derivative": [[6, null]], "splinepy.bezier.Bezier.basis_derivative_and_support": [[7, null]], "splinepy.bezier.Bezier.bezier": [[8, null]], "splinepy.bezier.Bezier.bspline": [[9, null]], "splinepy.bezier.Bezier.clear": [[10, null]], "splinepy.bezier.Bezier.compose": [[11, null]], "splinepy.bezier.Bezier.composition_derivative": [[12, null]], "splinepy.bezier.Bezier.copy": [[13, null]], "splinepy.bezier.Bezier.current_core_properties": [[14, null]], "splinepy.bezier.Bezier.derivative": [[15, null]], "splinepy.bezier.Bezier.derivative_spline": [[16, null]], "splinepy.bezier.Bezier.elevate_degrees": [[17, null]], "splinepy.bezier.Bezier.evaluate": [[18, null]], "splinepy.bezier.Bezier.export": [[19, null]], "splinepy.bezier.Bezier.extract_dim": [[20, null]], "splinepy.bezier.Bezier.greville_abscissae": [[21, null]], "splinepy.bezier.Bezier.jacobian": [[22, null]], "splinepy.bezier.Bezier.mapper": [[23, null]], "splinepy.bezier.Bezier.nurbs": [[24, null]], "splinepy.bezier.Bezier.proximities": [[25, null]], "splinepy.bezier.Bezier.rationalbezier": [[26, null]], "splinepy.bezier.Bezier.reduce_degrees": [[27, null]], "splinepy.bezier.Bezier.sample": [[28, null]], "splinepy.bezier.Bezier.show": [[29, null]], "splinepy.bezier.Bezier.showable": [[30, null]], "splinepy.bezier.Bezier.split": [[31, null]], "splinepy.bezier.Bezier.support": [[32, null]], "splinepy.bezier.Bezier.todict": [[33, null]], "splinepy.bezier.BezierBase": [[34, null]], "splinepy.bezier.BezierBase.basis": [[35, null]], "splinepy.bezier.BezierBase.basis_and_support": [[36, null]], "splinepy.bezier.BezierBase.basis_derivative": [[37, null]], "splinepy.bezier.BezierBase.basis_derivative_and_support": [[38, null]], "splinepy.bezier.BezierBase.clear": [[39, null]], "splinepy.bezier.BezierBase.compose": [[40, null]], "splinepy.bezier.BezierBase.composition_derivative": [[41, null]], "splinepy.bezier.BezierBase.copy": [[42, null]], "splinepy.bezier.BezierBase.current_core_properties": [[43, null]], "splinepy.bezier.BezierBase.derivative": [[44, null]], "splinepy.bezier.BezierBase.derivative_spline": [[45, null]], "splinepy.bezier.BezierBase.elevate_degrees": [[46, null]], "splinepy.bezier.BezierBase.evaluate": [[47, null]], "splinepy.bezier.BezierBase.export": [[48, null]], "splinepy.bezier.BezierBase.extract_dim": [[49, null]], "splinepy.bezier.BezierBase.greville_abscissae": [[50, null]], "splinepy.bezier.BezierBase.jacobian": [[51, null]], "splinepy.bezier.BezierBase.mapper": [[52, null]], "splinepy.bezier.BezierBase.proximities": [[53, null]], "splinepy.bezier.BezierBase.reduce_degrees": [[54, null]], "splinepy.bezier.BezierBase.sample": [[55, null]], "splinepy.bezier.BezierBase.show": [[56, null]], "splinepy.bezier.BezierBase.showable": [[57, null]], "splinepy.bezier.BezierBase.split": [[58, null]], "splinepy.bezier.BezierBase.support": [[59, null]], "splinepy.bezier.BezierBase.todict": [[60, null]], "splinepy.bspline": [[61, null]], "splinepy.bspline.BSpline": [[62, null]], "splinepy.bspline.BSpline.basis": [[63, null]], "splinepy.bspline.BSpline.basis_and_support": [[64, null]], "splinepy.bspline.BSpline.basis_derivative": [[65, null]], "splinepy.bspline.BSpline.basis_derivative_and_support": [[66, null]], "splinepy.bspline.BSpline.bspline": [[67, null]], "splinepy.bspline.BSpline.clear": [[68, null]], "splinepy.bspline.BSpline.copy": [[69, null]], "splinepy.bspline.BSpline.current_core_properties": [[70, null]], "splinepy.bspline.BSpline.derivative": [[71, null]], "splinepy.bspline.BSpline.elevate_degrees": [[72, null]], "splinepy.bspline.BSpline.evaluate": [[73, null]], "splinepy.bspline.BSpline.export": [[74, null]], "splinepy.bspline.BSpline.extract_bezier_patches": [[75, null]], "splinepy.bspline.BSpline.greville_abscissae": [[76, null]], "splinepy.bspline.BSpline.insert_knots": [[77, null]], "splinepy.bspline.BSpline.jacobian": [[78, null]], "splinepy.bspline.BSpline.knot_insertion_matrix": [[79, null]], "splinepy.bspline.BSpline.mapper": [[80, null]], "splinepy.bspline.BSpline.normalize_knot_vectors": [[81, null]], "splinepy.bspline.BSpline.nurbs": [[82, null]], "splinepy.bspline.BSpline.proximities": [[83, null]], "splinepy.bspline.BSpline.reduce_degrees": [[84, null]], "splinepy.bspline.BSpline.remove_knots": [[85, null]], "splinepy.bspline.BSpline.sample": [[86, null]], "splinepy.bspline.BSpline.show": [[87, null]], "splinepy.bspline.BSpline.showable": [[88, null]], "splinepy.bspline.BSpline.support": [[89, null]], "splinepy.bspline.BSpline.todict": [[90, null]], "splinepy.bspline.BSpline.uniform_refine": [[91, null]], "splinepy.bspline.BSplineBase": [[92, null]], "splinepy.bspline.BSplineBase.basis": [[93, null]], "splinepy.bspline.BSplineBase.basis_and_support": [[94, null]], "splinepy.bspline.BSplineBase.basis_derivative": [[95, null]], "splinepy.bspline.BSplineBase.basis_derivative_and_support": [[96, null]], "splinepy.bspline.BSplineBase.clear": [[97, null]], "splinepy.bspline.BSplineBase.copy": [[98, null]], "splinepy.bspline.BSplineBase.current_core_properties": [[99, null]], "splinepy.bspline.BSplineBase.derivative": [[100, null]], "splinepy.bspline.BSplineBase.elevate_degrees": [[101, null]], "splinepy.bspline.BSplineBase.evaluate": [[102, null]], "splinepy.bspline.BSplineBase.export": [[103, null]], "splinepy.bspline.BSplineBase.extract_bezier_patches": [[104, null]], "splinepy.bspline.BSplineBase.greville_abscissae": [[105, null]], "splinepy.bspline.BSplineBase.insert_knots": [[106, null]], "splinepy.bspline.BSplineBase.jacobian": [[107, null]], "splinepy.bspline.BSplineBase.knot_insertion_matrix": [[108, null]], "splinepy.bspline.BSplineBase.mapper": [[109, null]], "splinepy.bspline.BSplineBase.normalize_knot_vectors": [[110, null]], "splinepy.bspline.BSplineBase.proximities": [[111, null]], "splinepy.bspline.BSplineBase.reduce_degrees": [[112, null]], "splinepy.bspline.BSplineBase.remove_knots": [[113, null]], "splinepy.bspline.BSplineBase.sample": [[114, null]], "splinepy.bspline.BSplineBase.show": [[115, null]], "splinepy.bspline.BSplineBase.showable": [[116, null]], "splinepy.bspline.BSplineBase.support": [[117, null]], "splinepy.bspline.BSplineBase.todict": [[118, null]], "splinepy.bspline.BSplineBase.uniform_refine": [[119, null]], "splinepy.cli": [[120, null]], "splinepy.cli.convert": [[121, null]], "splinepy.cli.entry": [[122, null]], "splinepy.cli.show": [[123, null]], "splinepy.helpme": [[124, null]], "splinepy.helpme.check": [[125, null]], "splinepy.helpme.check.Checker": [[126, null]], "splinepy.helpme.check.Checker.clamped_knot_vectors": [[127, null]], "splinepy.helpme.check.Checker.valid_queries": [[128, null]], "splinepy.helpme.check.clamped_knot_vectors": [[129, null]], "splinepy.helpme.check.valid_queries": [[130, null]], "splinepy.helpme.create": [[131, null]], "splinepy.helpme.create.Creator": [[132, null]], "splinepy.helpme.create.Creator.determinant_spline": [[133, null]], "splinepy.helpme.create.Creator.embedded": [[134, null]], "splinepy.helpme.create.Creator.extruded": [[135, null]], "splinepy.helpme.create.Creator.parametric_view": [[136, null]], "splinepy.helpme.create.Creator.revolved": [[137, null]], "splinepy.helpme.create.arc": [[138, null]], "splinepy.helpme.create.box": [[139, null]], "splinepy.helpme.create.circle": [[140, null]], "splinepy.helpme.create.cone": [[141, null]], "splinepy.helpme.create.determinant_spline": [[142, null]], "splinepy.helpme.create.disk": [[143, null]], "splinepy.helpme.create.embedded": [[144, null]], "splinepy.helpme.create.extruded": [[145, null]], "splinepy.helpme.create.from_bounds": [[146, null]], "splinepy.helpme.create.line": [[147, null]], "splinepy.helpme.create.parametric_view": [[148, null]], "splinepy.helpme.create.plate": [[149, null]], "splinepy.helpme.create.pyramid": [[150, null]], "splinepy.helpme.create.revolved": [[151, null]], "splinepy.helpme.create.sphere": [[152, null]], "splinepy.helpme.create.surface_circle": [[153, null]], "splinepy.helpme.create.torus": [[154, null]], "splinepy.helpme.extract": [[155, null]], "splinepy.helpme.extract.Extractor": [[156, null]], "splinepy.helpme.extract.Extractor.arrow_data": [[157, null]], "splinepy.helpme.extract.Extractor.bases": [[158, null]], "splinepy.helpme.extract.Extractor.beziers": [[159, null]], "splinepy.helpme.extract.Extractor.boundaries": [[160, null]], "splinepy.helpme.extract.Extractor.control_edges": [[161, null]], "splinepy.helpme.extract.Extractor.control_faces": [[162, null]], "splinepy.helpme.extract.Extractor.control_mesh": [[163, null]], "splinepy.helpme.extract.Extractor.control_points": [[164, null]], "splinepy.helpme.extract.Extractor.control_volumes": [[165, null]], "splinepy.helpme.extract.Extractor.edges": [[166, null]], "splinepy.helpme.extract.Extractor.faces": [[167, null]], "splinepy.helpme.extract.Extractor.spline": [[168, null]], "splinepy.helpme.extract.Extractor.volumes": [[169, null]], "splinepy.helpme.extract.arrow_data": [[170, null]], "splinepy.helpme.extract.bases": [[171, null]], "splinepy.helpme.extract.boundaries": [[172, null]], "splinepy.helpme.extract.control_edges": [[173, null]], "splinepy.helpme.extract.control_faces": [[174, null]], "splinepy.helpme.extract.control_mesh": [[175, null]], "splinepy.helpme.extract.control_points": [[176, null]], "splinepy.helpme.extract.control_volumes": [[177, null]], "splinepy.helpme.extract.edges": [[178, null]], "splinepy.helpme.extract.faces": [[179, null]], "splinepy.helpme.extract.spline": [[180, null]], "splinepy.helpme.extract.volumes": [[181, null]], "splinepy.helpme.ffd": [[182, null]], "splinepy.helpme.ffd.FFD": [[183, null]], "splinepy.helpme.ffd.FFD.mesh": [[184, null]], "splinepy.helpme.ffd.FFD.padding": [[185, null]], "splinepy.helpme.ffd.FFD.show": [[186, null]], "splinepy.helpme.ffd.FFD.showable": [[187, null]], "splinepy.helpme.ffd.FFD.spline": [[188, null]], "splinepy.helpme.fit": [[189, null]], "splinepy.helpme.fit.compute_knot_vector": [[190, null]], "splinepy.helpme.fit.curve": [[191, null]], "splinepy.helpme.fit.parameterize": [[192, null]], "splinepy.helpme.fit.solve_for_control_points": [[193, null]], "splinepy.helpme.fit.surface": [[194, null]], "splinepy.helpme.integrate": [[195, null]], "splinepy.helpme.integrate.Integrator": [[196, null]], "splinepy.helpme.integrate.Integrator.parametric_function": [[197, null]], "splinepy.helpme.integrate.Integrator.physical_function": [[198, null]], "splinepy.helpme.integrate.Integrator.volume": [[199, null]], "splinepy.helpme.integrate.parametric_function": [[200, null]], "splinepy.helpme.integrate.physical_function": [[201, null]], "splinepy.helpme.integrate.volume": [[202, null]], "splinepy.helpme.mapper": [[203, null]], "splinepy.helpme.mapper.Mapper": [[204, null]], "splinepy.helpme.mapper.Mapper.basis_function_derivatives": [[205, null]], "splinepy.helpme.mapper.Mapper.basis_gradient_and_support": [[206, null]], "splinepy.helpme.mapper.Mapper.basis_hessian_and_support": [[207, null]], "splinepy.helpme.mapper.Mapper.basis_laplacian_and_support": [[208, null]], "splinepy.helpme.mapper.Mapper.divergence": [[209, null]], "splinepy.helpme.mapper.Mapper.field_derivatives": [[210, null]], "splinepy.helpme.mapper.Mapper.gradient": [[211, null]], "splinepy.helpme.mapper.Mapper.hessian": [[212, null]], "splinepy.helpme.mapper.Mapper.laplacian": [[213, null]], "splinepy.helpme.multi_index": [[214, null]], "splinepy.helpme.multi_index.MultiIndex": [[215, null]], "splinepy.helpme.reparametrize": [[216, null]], "splinepy.helpme.reparametrize.flip_axes": [[217, null]], "splinepy.helpme.reparametrize.permute_parametric_axes": [[218, null]], "splinepy.helpme.visualize": [[219, null]], "splinepy.helpme.visualize.MultipatchShowOption": [[220, null]], "splinepy.helpme.visualize.MultipatchShowOption.clear": [[221, null]], "splinepy.helpme.visualize.MultipatchShowOption.copy_valid_options": [[222, null]], "splinepy.helpme.visualize.MultipatchShowOption.get": [[223, null]], "splinepy.helpme.visualize.MultipatchShowOption.items": [[224, null]], "splinepy.helpme.visualize.MultipatchShowOption.keys": [[225, null]], "splinepy.helpme.visualize.MultipatchShowOption.pop": [[226, null]], "splinepy.helpme.visualize.MultipatchShowOption.update": [[227, null]], "splinepy.helpme.visualize.MultipatchShowOption.valid_keys": [[228, null]], "splinepy.helpme.visualize.MultipatchShowOption.values": [[229, null]], "splinepy.helpme.visualize.SplineShowOption": [[230, null]], "splinepy.helpme.visualize.SplineShowOption.clear": [[231, null]], "splinepy.helpme.visualize.SplineShowOption.copy_valid_options": [[232, null]], "splinepy.helpme.visualize.SplineShowOption.get": [[233, null]], "splinepy.helpme.visualize.SplineShowOption.items": [[234, null]], "splinepy.helpme.visualize.SplineShowOption.keys": [[235, null]], "splinepy.helpme.visualize.SplineShowOption.pop": [[236, null]], "splinepy.helpme.visualize.SplineShowOption.update": [[237, null]], "splinepy.helpme.visualize.SplineShowOption.valid_keys": [[238, null]], "splinepy.helpme.visualize.SplineShowOption.values": [[239, null]], "splinepy.helpme.visualize.make_showable": [[240, null]], "splinepy.helpme.visualize.show": [[241, null]], "splinepy.io": [[242, null]], "splinepy.io.cats": [[243, null]], "splinepy.io.cats.export": [[244, null]], "splinepy.io.cats.load": [[245, null]], "splinepy.io.default": [[246, null]], "splinepy.io.default.export": [[247, null]], "splinepy.io.default.load": [[248, null]], "splinepy.io.gismo": [[249, null]], "splinepy.io.gismo.AdditionalBlocks": [[250, null]], "splinepy.io.gismo.AdditionalBlocks.add_assembly_options": [[251, null]], "splinepy.io.gismo.AdditionalBlocks.add_boundary_conditions": [[252, null]], "splinepy.io.gismo.AdditionalBlocks.add_function": [[253, null]], "splinepy.io.gismo.AdditionalBlocks.to_list": [[254, null]], "splinepy.io.gismo.export": [[255, null]], "splinepy.io.gismo.load": [[256, null]], "splinepy.io.iges": [[257, null]], "splinepy.io.iges.export": [[258, null]], "splinepy.io.iges.load": [[259, null]], "splinepy.io.ioutils": [[260, null]], "splinepy.io.ioutils.abs_fname": [[261, null]], "splinepy.io.ioutils.dict_to_spline": [[262, null]], "splinepy.io.ioutils.expand_tabs": [[263, null]], "splinepy.io.ioutils.form_lines": [[264, null]], "splinepy.io.ioutils.make_meaningful": [[265, null]], "splinepy.io.ioutils.next_line": [[266, null]], "splinepy.io.irit": [[267, null]], "splinepy.io.irit.export": [[268, null]], "splinepy.io.irit.load": [[269, null]], "splinepy.io.json": [[270, null]], "splinepy.io.json.export": [[271, null]], "splinepy.io.json.load": [[272, null]], "splinepy.io.mfem": [[273, null]], "splinepy.io.mfem.dof_mapping": [[274, null]], "splinepy.io.mfem.export": [[275, null]], "splinepy.io.mfem.export_cartesian": [[276, null]], "splinepy.io.mfem.load": [[277, null]], "splinepy.io.mfem.read_solution": [[278, null]], "splinepy.io.npz": [[279, null]], "splinepy.io.npz.export": [[280, null]], "splinepy.io.npz.load": [[281, null]], "splinepy.io.svg": [[282, null]], "splinepy.io.svg.export": [[283, null]], "splinepy.microstructure": [[284, null]], "splinepy.microstructure.microstructure": [[285, null]], "splinepy.microstructure.microstructure.Microstructure": [[286, null]], "splinepy.microstructure.microstructure.Microstructure.create": [[287, null]], "splinepy.microstructure.microstructure.Microstructure.deformation_function": [[288, null]], "splinepy.microstructure.microstructure.Microstructure.microtile": [[289, null]], "splinepy.microstructure.microstructure.Microstructure.parameter_sensitivity_function": [[290, null]], "splinepy.microstructure.microstructure.Microstructure.parametrization_function": [[291, null]], "splinepy.microstructure.microstructure.Microstructure.show": [[292, null]], "splinepy.microstructure.microstructure.Microstructure.tiling": [[293, null]], "splinepy.microstructure.tiles": [[294, null]], "splinepy.microstructure.tiles.armadillo": [[295, null]], "splinepy.microstructure.tiles.armadillo.Armadillo": [[296, null]], "splinepy.microstructure.tiles.armadillo.Armadillo.check_param_derivatives": [[297, null]], "splinepy.microstructure.tiles.armadillo.Armadillo.check_params": [[298, null]], "splinepy.microstructure.tiles.armadillo.Armadillo.create_tile": [[299, null]], "splinepy.microstructure.tiles.by_dim": [[300, null]], "splinepy.microstructure.tiles.chi": [[301, null]], "splinepy.microstructure.tiles.chi.Chi": [[302, null]], "splinepy.microstructure.tiles.chi.Chi.check_param_derivatives": [[303, null]], "splinepy.microstructure.tiles.chi.Chi.check_params": [[304, null]], "splinepy.microstructure.tiles.chi.Chi.create_tile": [[305, null]], "splinepy.microstructure.tiles.cross_2d": [[306, null]], "splinepy.microstructure.tiles.cross_2d.Cross2D": [[307, null]], "splinepy.microstructure.tiles.cross_2d.Cross2D.check_param_derivatives": [[308, null]], "splinepy.microstructure.tiles.cross_2d.Cross2D.check_params": [[309, null]], "splinepy.microstructure.tiles.cross_2d.Cross2D.create_tile": [[310, null]], "splinepy.microstructure.tiles.cross_3d": [[311, null]], "splinepy.microstructure.tiles.cross_3d.Cross3D": [[312, null]], "splinepy.microstructure.tiles.cross_3d.Cross3D.check_param_derivatives": [[313, null]], "splinepy.microstructure.tiles.cross_3d.Cross3D.check_params": [[314, null]], "splinepy.microstructure.tiles.cross_3d.Cross3D.create_tile": [[315, null]], "splinepy.microstructure.tiles.cross_3d_linear": [[316, null]], "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear": [[317, null]], "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_param_derivatives": [[318, null]], "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_params": [[319, null]], "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.create_tile": [[320, null]], "splinepy.microstructure.tiles.cube_void": [[321, null]], "splinepy.microstructure.tiles.cube_void.CubeVoid": [[322, null]], "splinepy.microstructure.tiles.cube_void.CubeVoid.check_param_derivatives": [[323, null]], "splinepy.microstructure.tiles.cube_void.CubeVoid.check_params": [[324, null]], "splinepy.microstructure.tiles.cube_void.CubeVoid.create_tile": [[325, null]], "splinepy.microstructure.tiles.double_lattice": [[326, null]], "splinepy.microstructure.tiles.double_lattice.DoubleLattice": [[327, null]], "splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_param_derivatives": [[328, null]], "splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_params": [[329, null]], "splinepy.microstructure.tiles.double_lattice.DoubleLattice.create_tile": [[330, null]], "splinepy.microstructure.tiles.ellips_v_oid": [[331, null]], "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid": [[332, null]], "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_param_derivatives": [[333, null]], "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_params": [[334, null]], "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.create_tile": [[335, null]], "splinepy.microstructure.tiles.everything": [[336, null]], "splinepy.microstructure.tiles.get": [[337, null]], "splinepy.microstructure.tiles.hollow_cube": [[338, null]], "splinepy.microstructure.tiles.hollow_cube.HollowCube": [[339, null]], "splinepy.microstructure.tiles.hollow_cube.HollowCube.check_param_derivatives": [[340, null]], "splinepy.microstructure.tiles.hollow_cube.HollowCube.check_params": [[341, null]], "splinepy.microstructure.tiles.hollow_cube.HollowCube.create_tile": [[342, null]], "splinepy.microstructure.tiles.hollow_octagon": [[343, null]], "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon": [[344, null]], "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_param_derivatives": [[345, null]], "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_params": [[346, null]], "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.create_tile": [[347, null]], "splinepy.microstructure.tiles.hollow_octagon_extrude": [[348, null]], "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude": [[349, null]], "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_param_derivatives": [[350, null]], "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_params": [[351, null]], "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.closing_tile": [[352, null]], "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.create_tile": [[353, null]], "splinepy.microstructure.tiles.inverse_cross_3d": [[354, null]], "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D": [[355, null]], "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_param_derivatives": [[356, null]], "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_params": [[357, null]], "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.create_tile": [[358, null]], "splinepy.microstructure.tiles.show": [[359, null]], "splinepy.microstructure.tiles.snappy": [[360, null]], "splinepy.microstructure.tiles.snappy.Snappy": [[361, null]], "splinepy.microstructure.tiles.snappy.Snappy.check_param_derivatives": [[362, null]], "splinepy.microstructure.tiles.snappy.Snappy.check_params": [[363, null]], "splinepy.microstructure.tiles.snappy.Snappy.create_tile": [[364, null]], "splinepy.microstructure.tiles.tile_base": [[365, null]], "splinepy.microstructure.tiles.tile_base.TileBase": [[366, null]], "splinepy.microstructure.tiles.tile_base.TileBase.check_param_derivatives": [[367, null]], "splinepy.microstructure.tiles.tile_base.TileBase.check_params": [[368, null]], "splinepy.microstructure.tiles.tile_base.TileBase.create_tile": [[369, null]], "splinepy.microstructure.tiles.tile_base.TileBase.dim": [[370, null]], "splinepy.microstructure.tiles.tile_base.TileBase.evaluation_points": [[371, null]], "splinepy.microstructure.tiles.tile_base.TileBase.para_dim": [[372, null]], "splinepy.multipatch": [[373, null]], "splinepy.multipatch.Multipatch": [[374, null]], "splinepy.multipatch.Multipatch.add_fields": [[375, null]], "splinepy.multipatch.Multipatch.boundaries": [[376, null]], "splinepy.multipatch.Multipatch.boundaries_from_continuity": [[377, null]], "splinepy.multipatch.Multipatch.boundary_from_function": [[378, null]], "splinepy.multipatch.Multipatch.boundary_multipatch": [[379, null]], "splinepy.multipatch.Multipatch.boundary_patch_ids": [[380, null]], "splinepy.multipatch.Multipatch.clear": [[381, null]], "splinepy.multipatch.Multipatch.combine_boundaries": [[382, null]], "splinepy.multipatch.Multipatch.control_point_offsets": [[383, null]], "splinepy.multipatch.Multipatch.determine_interfaces": [[384, null]], "splinepy.multipatch.Multipatch.dim": [[385, null]], "splinepy.multipatch.Multipatch.evaluate": [[386, null]], "splinepy.multipatch.Multipatch.extract": [[387, null]], "splinepy.multipatch.Multipatch.fields": [[388, null]], "splinepy.multipatch.Multipatch.get_interfaces": [[389, null]], "splinepy.multipatch.Multipatch.interface_orientations": [[390, null]], "splinepy.multipatch.Multipatch.interfaces": [[391, null]], "splinepy.multipatch.Multipatch.para_dim": [[392, null]], "splinepy.multipatch.Multipatch.patches": [[393, null]], "splinepy.multipatch.Multipatch.sample": [[394, null]], "splinepy.multipatch.Multipatch.set_boundary": [[395, null]], "splinepy.multipatch.Multipatch.set_interfaces": [[396, null]], "splinepy.multipatch.Multipatch.show": [[397, null]], "splinepy.multipatch.Multipatch.show_options": [[398, null]], "splinepy.multipatch.Multipatch.showable": [[399, null]], "splinepy.multipatch.Multipatch.spline_data": [[400, null]], "splinepy.multipatch.Multipatch.sub_multipatch": [[401, null]], "splinepy.multipatch.Multipatch.sub_patch_centers": [[402, null]], "splinepy.nurbs": [[403, null]], "splinepy.nurbs.NURBS": [[404, null]], "splinepy.nurbs.NURBS.basis": [[405, null]], "splinepy.nurbs.NURBS.basis_and_support": [[406, null]], "splinepy.nurbs.NURBS.basis_derivative": [[407, null]], "splinepy.nurbs.NURBS.basis_derivative_and_support": [[408, null]], "splinepy.nurbs.NURBS.clear": [[409, null]], "splinepy.nurbs.NURBS.copy": [[410, null]], "splinepy.nurbs.NURBS.current_core_properties": [[411, null]], "splinepy.nurbs.NURBS.derivative": [[412, null]], "splinepy.nurbs.NURBS.elevate_degrees": [[413, null]], "splinepy.nurbs.NURBS.evaluate": [[414, null]], "splinepy.nurbs.NURBS.export": [[415, null]], "splinepy.nurbs.NURBS.extract_bezier_patches": [[416, null]], "splinepy.nurbs.NURBS.greville_abscissae": [[417, null]], "splinepy.nurbs.NURBS.insert_knots": [[418, null]], "splinepy.nurbs.NURBS.jacobian": [[419, null]], "splinepy.nurbs.NURBS.knot_insertion_matrix": [[420, null]], "splinepy.nurbs.NURBS.mapper": [[421, null]], "splinepy.nurbs.NURBS.normalize_knot_vectors": [[422, null]], "splinepy.nurbs.NURBS.nurbs": [[423, null]], "splinepy.nurbs.NURBS.proximities": [[424, null]], "splinepy.nurbs.NURBS.reduce_degrees": [[425, null]], "splinepy.nurbs.NURBS.remove_knots": [[426, null]], "splinepy.nurbs.NURBS.sample": [[427, null]], "splinepy.nurbs.NURBS.show": [[428, null]], "splinepy.nurbs.NURBS.showable": [[429, null]], "splinepy.nurbs.NURBS.support": [[430, null]], "splinepy.nurbs.NURBS.todict": [[431, null]], "splinepy.nurbs.NURBS.uniform_refine": [[432, null]], "splinepy.rational_bezier": [[433, null]], "splinepy.rational_bezier.RationalBezier": [[434, null]], "splinepy.rational_bezier.RationalBezier.basis": [[435, null]], "splinepy.rational_bezier.RationalBezier.basis_and_support": [[436, null]], "splinepy.rational_bezier.RationalBezier.basis_derivative": [[437, null]], "splinepy.rational_bezier.RationalBezier.basis_derivative_and_support": [[438, null]], "splinepy.rational_bezier.RationalBezier.clear": [[439, null]], "splinepy.rational_bezier.RationalBezier.compose": [[440, null]], "splinepy.rational_bezier.RationalBezier.composition_derivative": [[441, null]], "splinepy.rational_bezier.RationalBezier.copy": [[442, null]], "splinepy.rational_bezier.RationalBezier.current_core_properties": [[443, null]], "splinepy.rational_bezier.RationalBezier.derivative": [[444, null]], "splinepy.rational_bezier.RationalBezier.derivative_spline": [[445, null]], "splinepy.rational_bezier.RationalBezier.elevate_degrees": [[446, null]], "splinepy.rational_bezier.RationalBezier.evaluate": [[447, null]], "splinepy.rational_bezier.RationalBezier.export": [[448, null]], "splinepy.rational_bezier.RationalBezier.extract_dim": [[449, null]], "splinepy.rational_bezier.RationalBezier.greville_abscissae": [[450, null]], "splinepy.rational_bezier.RationalBezier.jacobian": [[451, null]], "splinepy.rational_bezier.RationalBezier.mapper": [[452, null]], "splinepy.rational_bezier.RationalBezier.nurbs": [[453, null]], "splinepy.rational_bezier.RationalBezier.proximities": [[454, null]], "splinepy.rational_bezier.RationalBezier.rationalbezier": [[455, null]], "splinepy.rational_bezier.RationalBezier.reduce_degrees": [[456, null]], "splinepy.rational_bezier.RationalBezier.sample": [[457, null]], "splinepy.rational_bezier.RationalBezier.show": [[458, null]], "splinepy.rational_bezier.RationalBezier.showable": [[459, null]], "splinepy.rational_bezier.RationalBezier.split": [[460, null]], "splinepy.rational_bezier.RationalBezier.support": [[461, null]], "splinepy.rational_bezier.RationalBezier.todict": [[462, null]], "splinepy.settings": [[463, null]], "splinepy.settings.CHECK_BOUNDS": [[464, null]], "splinepy.settings.NAME_TO_TYPE": [[465, null]], "splinepy.settings.NTHREADS": [[466, null]], "splinepy.settings.TOLERANCE": [[467, null]], "splinepy.spline": [[468, null]], "splinepy.spline.RequiredProperties": [[469, null]], "splinepy.spline.RequiredProperties.intersection": [[470, null]], "splinepy.spline.RequiredProperties.of": [[471, null]], "splinepy.spline.RequiredProperties.union": [[472, null]], "splinepy.spline.Spline": [[473, null]], "splinepy.spline.Spline.basis": [[474, null]], "splinepy.spline.Spline.basis_and_support": [[475, null]], "splinepy.spline.Spline.basis_derivative": [[476, null]], "splinepy.spline.Spline.basis_derivative_and_support": [[477, null]], "splinepy.spline.Spline.check": [[478, null]], "splinepy.spline.Spline.clear": [[479, null]], "splinepy.spline.Spline.control_mesh_resolutions": [[480, null]], "splinepy.spline.Spline.control_point_bounds": [[481, null]], "splinepy.spline.Spline.control_points": [[482, null]], "splinepy.spline.Spline.copy": [[483, null]], "splinepy.spline.Spline.cps": [[484, null]], "splinepy.spline.Spline.create": [[485, null]], "splinepy.spline.Spline.current_core_properties": [[486, null]], "splinepy.spline.Spline.degrees": [[487, null]], "splinepy.spline.Spline.derivative": [[488, null]], "splinepy.spline.Spline.dim": [[489, null]], "splinepy.spline.Spline.ds": [[490, null]], "splinepy.spline.Spline.elevate_degrees": [[491, null]], "splinepy.spline.Spline.evaluate": [[492, null]], "splinepy.spline.Spline.export": [[493, null]], "splinepy.spline.Spline.extract": [[494, null]], "splinepy.spline.Spline.greville_abscissae": [[495, null]], "splinepy.spline.Spline.has_knot_vectors": [[496, null]], "splinepy.spline.Spline.integrate": [[497, null]], "splinepy.spline.Spline.is_rational": [[498, null]], "splinepy.spline.Spline.jacobian": [[499, null]], "splinepy.spline.Spline.knot_multiplicities": [[500, null]], "splinepy.spline.Spline.knot_vectors": [[501, null]], "splinepy.spline.Spline.kvs": [[502, null]], "splinepy.spline.Spline.mapper": [[503, null]], "splinepy.spline.Spline.multi_index": [[504, null]], "splinepy.spline.Spline.name": [[505, null]], "splinepy.spline.Spline.para_dim": [[506, null]], "splinepy.spline.Spline.parametric_bounds": [[507, null]], "splinepy.spline.Spline.proximities": [[508, null]], "splinepy.spline.Spline.reduce_degrees": [[509, null]], "splinepy.spline.Spline.required_properties": [[510, null]], "splinepy.spline.Spline.sample": [[511, null]], "splinepy.spline.Spline.show": [[512, null]], "splinepy.spline.Spline.show_options": [[513, null]], "splinepy.spline.Spline.showable": [[514, null]], "splinepy.spline.Spline.spline_data": [[515, null]], "splinepy.spline.Spline.support": [[516, null]], "splinepy.spline.Spline.todict": [[517, null]], "splinepy.spline.Spline.unique_knots": [[518, null]], "splinepy.spline.Spline.weights": [[519, null]], "splinepy.spline.Spline.whatami": [[520, null]], "splinepy.spline.Spline.ws": [[521, null]], "splinepy.splinepy_core": [[522, null]], "splinepy.splinepy_core.ControlPointPointers": [[523, null]], "splinepy.splinepy_core.ControlPointPointers.dim": [[524, null]], "splinepy.splinepy_core.ControlPointPointers.len": [[525, null]], "splinepy.splinepy_core.ControlPointPointers.set_row": [[526, null]], "splinepy.splinepy_core.ControlPointPointers.set_rows": [[527, null]], "splinepy.splinepy_core.ControlPointPointers.sync": [[528, null]], "splinepy.splinepy_core.ControlPointPointers.sync_rows": [[529, null]], "splinepy.splinepy_core.KnotVector": [[530, null]], "splinepy.splinepy_core.KnotVector.find_span": [[531, null]], "splinepy.splinepy_core.KnotVector.multiplicities": [[532, null]], "splinepy.splinepy_core.KnotVector.numpy": [[533, null]], "splinepy.splinepy_core.KnotVector.scale": [[534, null]], "splinepy.splinepy_core.KnotVector.unique": [[535, null]], "splinepy.splinepy_core.ParameterSpace": [[536, null]], "splinepy.splinepy_core.ParameterSpace.copy": [[537, null]], "splinepy.splinepy_core.ParameterSpace.unique_knots": [[538, null]], "splinepy.splinepy_core.PyMultipatch": [[539, null]], "splinepy.splinepy_core.PyMultipatch.add_fields": [[540, null]], "splinepy.splinepy_core.PyMultipatch.boundary_multipatch": [[541, null]], "splinepy.splinepy_core.PyMultipatch.boundary_patch_ids": [[542, null]], "splinepy.splinepy_core.PyMultipatch.clear": [[543, null]], "splinepy.splinepy_core.PyMultipatch.control_point_offsets": [[544, null]], "splinepy.splinepy_core.PyMultipatch.control_points": [[545, null]], "splinepy.splinepy_core.PyMultipatch.dim": [[546, null]], "splinepy.splinepy_core.PyMultipatch.evaluate": [[547, null]], "splinepy.splinepy_core.PyMultipatch.fields": [[548, null]], "splinepy.splinepy_core.PyMultipatch.get_interfaces": [[549, null]], "splinepy.splinepy_core.PyMultipatch.interface_orientations": [[550, null]], "splinepy.splinepy_core.PyMultipatch.n_default_threads": [[551, null]], "splinepy.splinepy_core.PyMultipatch.name": [[552, null]], "splinepy.splinepy_core.PyMultipatch.para_dim": [[553, null]], "splinepy.splinepy_core.PyMultipatch.patches": [[554, null]], "splinepy.splinepy_core.PyMultipatch.same_parametric_bounds": [[555, null]], "splinepy.splinepy_core.PyMultipatch.sample": [[556, null]], "splinepy.splinepy_core.PyMultipatch.set_interfaces": [[557, null]], "splinepy.splinepy_core.PyMultipatch.sub_multipatch": [[558, null]], "splinepy.splinepy_core.PyMultipatch.sub_patch_centers": [[559, null]], "splinepy.splinepy_core.PyMultipatch.tolerance": [[560, null]], "splinepy.splinepy_core.PyMultipatch.whatami": [[561, null]], "splinepy.splinepy_core.PySpline": [[562, null]], "splinepy.splinepy_core.PySpline.basis": [[563, null]], "splinepy.splinepy_core.PySpline.basis_and_support": [[564, null]], "splinepy.splinepy_core.PySpline.basis_derivative": [[565, null]], "splinepy.splinepy_core.PySpline.basis_derivative_and_support": [[566, null]], "splinepy.splinepy_core.PySpline.control_mesh_resolutions": [[567, null]], "splinepy.splinepy_core.PySpline.current_core_properties": [[568, null]], "splinepy.splinepy_core.PySpline.derivative": [[569, null]], "splinepy.splinepy_core.PySpline.dim": [[570, null]], "splinepy.splinepy_core.PySpline.elevate_degrees": [[571, null]], "splinepy.splinepy_core.PySpline.evaluate": [[572, null]], "splinepy.splinepy_core.PySpline.has_knot_vectors": [[573, null]], "splinepy.splinepy_core.PySpline.is_rational": [[574, null]], "splinepy.splinepy_core.PySpline.jacobian": [[575, null]], "splinepy.splinepy_core.PySpline.name": [[576, null]], "splinepy.splinepy_core.PySpline.para_dim": [[577, null]], "splinepy.splinepy_core.PySpline.parametric_bounds": [[578, null]], "splinepy.splinepy_core.PySpline.proximities": [[579, null]], "splinepy.splinepy_core.PySpline.reduce_degrees": [[580, null]], "splinepy.splinepy_core.PySpline.sample": [[581, null]], "splinepy.splinepy_core.PySpline.support": [[582, null]], "splinepy.splinepy_core.PySpline.whatami": [[583, null]], "splinepy.splinepy_core.WeightPointers": [[584, null]], "splinepy.splinepy_core.WeightPointers.dim": [[585, null]], "splinepy.splinepy_core.WeightPointers.len": [[586, null]], "splinepy.splinepy_core.WeightPointers.set_row": [[587, null]], "splinepy.splinepy_core.WeightPointers.set_rows": [[588, null]], "splinepy.splinepy_core.WeightPointers.sync": [[589, null]], "splinepy.splinepy_core.WeightPointers.sync_rows": [[590, null]], "splinepy.splinepy_core.add": [[591, null]], "splinepy.splinepy_core.annul_core": [[592, null]], "splinepy.splinepy_core.bezier_extraction_matrix": [[593, null]], "splinepy.splinepy_core.boundaries_from_continuity": [[594, null]], "splinepy.splinepy_core.boundary_centers": [[595, null]], "splinepy.splinepy_core.build_type": [[596, null]], "splinepy.splinepy_core.compose": [[597, null]], "splinepy.splinepy_core.compose_sensitivities": [[598, null]], "splinepy.splinepy_core.composition_derivative": [[599, null]], "splinepy.splinepy_core.core_id": [[600, null]], "splinepy.splinepy_core.core_ref_count": [[601, null]], "splinepy.splinepy_core.derivative_spline": [[602, null]], "splinepy.splinepy_core.export_iges": [[603, null]], "splinepy.splinepy_core.extract_all_boundary_splines": [[604, null]], "splinepy.splinepy_core.extract_bezier_patches": [[605, null]], "splinepy.splinepy_core.extract_boundaries": [[606, null]], "splinepy.splinepy_core.extract_dim": [[607, null]], "splinepy.splinepy_core.global_knot_insertion_matrix": [[608, null]], "splinepy.splinepy_core.has_core": [[609, null]], "splinepy.splinepy_core.insert_knots": [[610, null]], "splinepy.splinepy_core.interfaces_from_boundary_centers": [[611, null]], "splinepy.splinepy_core.is_minimal": [[612, null]], "splinepy.splinepy_core.knot_insertion_matrix": [[613, null]], "splinepy.splinepy_core.multiply": [[614, null]], "splinepy.splinepy_core.null_spline": [[615, null]], "splinepy.splinepy_core.read_iges": [[616, null]], "splinepy.splinepy_core.remove_knots": [[617, null]], "splinepy.splinepy_core.same_spline_with_knot_vectors": [[618, null]], "splinepy.splinepy_core.split": [[619, null]], "splinepy.to_derived": [[620, null]], "splinepy.utils": [[621, null]], "splinepy.utils.data": [[622, null]], "splinepy.utils.data.MultipatchData": [[623, null]], "splinepy.utils.data.MultipatchData.as_arrow": [[624, null]], "splinepy.utils.data.MultipatchData.as_scalar": [[625, null]], "splinepy.utils.data.MultipatchData.clear": [[626, null]], "splinepy.utils.data.MultipatchData.get": [[627, null]], "splinepy.utils.data.MultipatchData.items": [[628, null]], "splinepy.utils.data.MultipatchData.keys": [[629, null]], "splinepy.utils.data.MultipatchData.pop": [[630, null]], "splinepy.utils.data.MultipatchData.update": [[631, null]], "splinepy.utils.data.MultipatchData.values": [[632, null]], "splinepy.utils.data.PhysicalSpaceArray": [[633, null]], "splinepy.utils.data.PhysicalSpaceArray.all": [[634, null]], "splinepy.utils.data.PhysicalSpaceArray.any": [[635, null]], "splinepy.utils.data.PhysicalSpaceArray.argmax": [[636, null]], "splinepy.utils.data.PhysicalSpaceArray.argmin": [[637, null]], "splinepy.utils.data.PhysicalSpaceArray.argpartition": [[638, null]], "splinepy.utils.data.PhysicalSpaceArray.argsort": [[639, null]], "splinepy.utils.data.PhysicalSpaceArray.astype": [[640, null]], "splinepy.utils.data.PhysicalSpaceArray.byteswap": [[641, null]], "splinepy.utils.data.PhysicalSpaceArray.choose": [[642, null]], "splinepy.utils.data.PhysicalSpaceArray.clip": [[643, null]], "splinepy.utils.data.PhysicalSpaceArray.compress": [[644, null]], "splinepy.utils.data.PhysicalSpaceArray.conj": [[645, null]], "splinepy.utils.data.PhysicalSpaceArray.conjugate": [[646, null]], "splinepy.utils.data.PhysicalSpaceArray.copy": [[647, null]], "splinepy.utils.data.PhysicalSpaceArray.cumprod": [[648, null]], "splinepy.utils.data.PhysicalSpaceArray.cumsum": [[649, null]], "splinepy.utils.data.PhysicalSpaceArray.diagonal": [[650, null]], "splinepy.utils.data.PhysicalSpaceArray.dot": [[651, null]], "splinepy.utils.data.PhysicalSpaceArray.dump": [[652, null]], "splinepy.utils.data.PhysicalSpaceArray.dumps": [[653, null]], "splinepy.utils.data.PhysicalSpaceArray.fill": [[654, null]], "splinepy.utils.data.PhysicalSpaceArray.flatten": [[655, null]], "splinepy.utils.data.PhysicalSpaceArray.full_row_indices": [[656, null]], "splinepy.utils.data.PhysicalSpaceArray.getfield": [[657, null]], "splinepy.utils.data.PhysicalSpaceArray.item": [[658, null]], "splinepy.utils.data.PhysicalSpaceArray.max": [[659, null]], "splinepy.utils.data.PhysicalSpaceArray.mean": [[660, null]], "splinepy.utils.data.PhysicalSpaceArray.min": [[661, null]], "splinepy.utils.data.PhysicalSpaceArray.nonzero": [[662, null]], "splinepy.utils.data.PhysicalSpaceArray.partition": [[663, null]], "splinepy.utils.data.PhysicalSpaceArray.prod": [[664, null]], "splinepy.utils.data.PhysicalSpaceArray.put": [[665, null]], "splinepy.utils.data.PhysicalSpaceArray.ravel": [[666, null]], "splinepy.utils.data.PhysicalSpaceArray.repeat": [[667, null]], "splinepy.utils.data.PhysicalSpaceArray.reshape": [[668, null]], "splinepy.utils.data.PhysicalSpaceArray.resize": [[669, null]], "splinepy.utils.data.PhysicalSpaceArray.round": [[670, null]], "splinepy.utils.data.PhysicalSpaceArray.row_indices": [[671, null]], "splinepy.utils.data.PhysicalSpaceArray.searchsorted": [[672, null]], "splinepy.utils.data.PhysicalSpaceArray.setfield": [[673, null]], "splinepy.utils.data.PhysicalSpaceArray.setflags": [[674, null]], "splinepy.utils.data.PhysicalSpaceArray.sort": [[675, null]], "splinepy.utils.data.PhysicalSpaceArray.squeeze": [[676, null]], "splinepy.utils.data.PhysicalSpaceArray.std": [[677, null]], "splinepy.utils.data.PhysicalSpaceArray.sum": [[678, null]], "splinepy.utils.data.PhysicalSpaceArray.swapaxes": [[679, null]], "splinepy.utils.data.PhysicalSpaceArray.take": [[680, null]], "splinepy.utils.data.PhysicalSpaceArray.to_device": [[681, null]], "splinepy.utils.data.PhysicalSpaceArray.tobytes": [[682, null]], "splinepy.utils.data.PhysicalSpaceArray.tofile": [[683, null]], "splinepy.utils.data.PhysicalSpaceArray.tolist": [[684, null]], "splinepy.utils.data.PhysicalSpaceArray.tostring": [[685, null]], "splinepy.utils.data.PhysicalSpaceArray.trace": [[686, null]], "splinepy.utils.data.PhysicalSpaceArray.transpose": [[687, null]], "splinepy.utils.data.PhysicalSpaceArray.var": [[688, null]], "splinepy.utils.data.PhysicalSpaceArray.view": [[689, null]], "splinepy.utils.data.SplineData": [[690, null]], "splinepy.utils.data.SplineData.as_arrow": [[691, null]], "splinepy.utils.data.SplineData.as_scalar": [[692, null]], "splinepy.utils.data.SplineData.clear": [[693, null]], "splinepy.utils.data.SplineData.get": [[694, null]], "splinepy.utils.data.SplineData.items": [[695, null]], "splinepy.utils.data.SplineData.keys": [[696, null]], "splinepy.utils.data.SplineData.pop": [[697, null]], "splinepy.utils.data.SplineData.update": [[698, null]], "splinepy.utils.data.SplineData.values": [[699, null]], "splinepy.utils.data.SplineDataAdaptor": [[700, null]], "splinepy.utils.data.SplineDataAdaptor.arrow_data_only": [[701, null]], "splinepy.utils.data.SplineDataAdaptor.as_vertex_data": [[702, null]], "splinepy.utils.data.SplineDataAdaptor.data": [[703, null]], "splinepy.utils.data.SplineDataAdaptor.function": [[704, null]], "splinepy.utils.data.SplineDataAdaptor.has_evaluate": [[705, null]], "splinepy.utils.data.SplineDataAdaptor.has_function": [[706, null]], "splinepy.utils.data.SplineDataAdaptor.has_locations": [[707, null]], "splinepy.utils.data.SplineDataAdaptor.is_spline": [[708, null]], "splinepy.utils.data.SplineDataAdaptor.locations": [[709, null]], "splinepy.utils.data.SplineDataAdaptor.parametric_bounds": [[710, null]], "splinepy.utils.data.cartesian_product": [[711, null]], "splinepy.utils.data.enforce_contiguous": [[712, null]], "splinepy.utils.data.enforce_contiguous_values": [[713, null]], "splinepy.utils.data.make_matrix": [[714, null]], "splinepy.utils.data.uniform_query": [[715, null]], "splinepy.utils.log": [[716, null]], "splinepy.utils.log.configure": [[717, null]], "splinepy.utils.log.debug": [[718, null]], "splinepy.utils.log.error": [[719, null]], "splinepy.utils.log.info": [[720, null]], "splinepy.utils.log.prepend_log": [[721, null]], "splinepy.utils.log.warning": [[722, null]]}, "docnames": ["CONTRIBUTING", "_generated/splinepy", "_generated/splinepy.bezier", "_generated/splinepy.bezier.Bezier", "_generated/splinepy.bezier.Bezier.basis", "_generated/splinepy.bezier.Bezier.basis_and_support", "_generated/splinepy.bezier.Bezier.basis_derivative", "_generated/splinepy.bezier.Bezier.basis_derivative_and_support", "_generated/splinepy.bezier.Bezier.bezier", "_generated/splinepy.bezier.Bezier.bspline", "_generated/splinepy.bezier.Bezier.clear", "_generated/splinepy.bezier.Bezier.compose", "_generated/splinepy.bezier.Bezier.composition_derivative", "_generated/splinepy.bezier.Bezier.copy", "_generated/splinepy.bezier.Bezier.current_core_properties", "_generated/splinepy.bezier.Bezier.derivative", "_generated/splinepy.bezier.Bezier.derivative_spline", "_generated/splinepy.bezier.Bezier.elevate_degrees", "_generated/splinepy.bezier.Bezier.evaluate", "_generated/splinepy.bezier.Bezier.export", "_generated/splinepy.bezier.Bezier.extract_dim", "_generated/splinepy.bezier.Bezier.greville_abscissae", "_generated/splinepy.bezier.Bezier.jacobian", "_generated/splinepy.bezier.Bezier.mapper", "_generated/splinepy.bezier.Bezier.nurbs", "_generated/splinepy.bezier.Bezier.proximities", "_generated/splinepy.bezier.Bezier.rationalbezier", "_generated/splinepy.bezier.Bezier.reduce_degrees", "_generated/splinepy.bezier.Bezier.sample", "_generated/splinepy.bezier.Bezier.show", "_generated/splinepy.bezier.Bezier.showable", "_generated/splinepy.bezier.Bezier.split", "_generated/splinepy.bezier.Bezier.support", "_generated/splinepy.bezier.Bezier.todict", "_generated/splinepy.bezier.BezierBase", "_generated/splinepy.bezier.BezierBase.basis", "_generated/splinepy.bezier.BezierBase.basis_and_support", "_generated/splinepy.bezier.BezierBase.basis_derivative", "_generated/splinepy.bezier.BezierBase.basis_derivative_and_support", "_generated/splinepy.bezier.BezierBase.clear", "_generated/splinepy.bezier.BezierBase.compose", "_generated/splinepy.bezier.BezierBase.composition_derivative", "_generated/splinepy.bezier.BezierBase.copy", "_generated/splinepy.bezier.BezierBase.current_core_properties", "_generated/splinepy.bezier.BezierBase.derivative", "_generated/splinepy.bezier.BezierBase.derivative_spline", "_generated/splinepy.bezier.BezierBase.elevate_degrees", "_generated/splinepy.bezier.BezierBase.evaluate", "_generated/splinepy.bezier.BezierBase.export", "_generated/splinepy.bezier.BezierBase.extract_dim", "_generated/splinepy.bezier.BezierBase.greville_abscissae", "_generated/splinepy.bezier.BezierBase.jacobian", "_generated/splinepy.bezier.BezierBase.mapper", "_generated/splinepy.bezier.BezierBase.proximities", "_generated/splinepy.bezier.BezierBase.reduce_degrees", "_generated/splinepy.bezier.BezierBase.sample", "_generated/splinepy.bezier.BezierBase.show", "_generated/splinepy.bezier.BezierBase.showable", "_generated/splinepy.bezier.BezierBase.split", "_generated/splinepy.bezier.BezierBase.support", "_generated/splinepy.bezier.BezierBase.todict", "_generated/splinepy.bspline", "_generated/splinepy.bspline.BSpline", "_generated/splinepy.bspline.BSpline.basis", "_generated/splinepy.bspline.BSpline.basis_and_support", "_generated/splinepy.bspline.BSpline.basis_derivative", "_generated/splinepy.bspline.BSpline.basis_derivative_and_support", "_generated/splinepy.bspline.BSpline.bspline", "_generated/splinepy.bspline.BSpline.clear", "_generated/splinepy.bspline.BSpline.copy", "_generated/splinepy.bspline.BSpline.current_core_properties", "_generated/splinepy.bspline.BSpline.derivative", "_generated/splinepy.bspline.BSpline.elevate_degrees", "_generated/splinepy.bspline.BSpline.evaluate", "_generated/splinepy.bspline.BSpline.export", "_generated/splinepy.bspline.BSpline.extract_bezier_patches", "_generated/splinepy.bspline.BSpline.greville_abscissae", "_generated/splinepy.bspline.BSpline.insert_knots", "_generated/splinepy.bspline.BSpline.jacobian", "_generated/splinepy.bspline.BSpline.knot_insertion_matrix", "_generated/splinepy.bspline.BSpline.mapper", "_generated/splinepy.bspline.BSpline.normalize_knot_vectors", "_generated/splinepy.bspline.BSpline.nurbs", "_generated/splinepy.bspline.BSpline.proximities", "_generated/splinepy.bspline.BSpline.reduce_degrees", "_generated/splinepy.bspline.BSpline.remove_knots", "_generated/splinepy.bspline.BSpline.sample", "_generated/splinepy.bspline.BSpline.show", "_generated/splinepy.bspline.BSpline.showable", "_generated/splinepy.bspline.BSpline.support", "_generated/splinepy.bspline.BSpline.todict", "_generated/splinepy.bspline.BSpline.uniform_refine", "_generated/splinepy.bspline.BSplineBase", "_generated/splinepy.bspline.BSplineBase.basis", "_generated/splinepy.bspline.BSplineBase.basis_and_support", "_generated/splinepy.bspline.BSplineBase.basis_derivative", "_generated/splinepy.bspline.BSplineBase.basis_derivative_and_support", "_generated/splinepy.bspline.BSplineBase.clear", "_generated/splinepy.bspline.BSplineBase.copy", "_generated/splinepy.bspline.BSplineBase.current_core_properties", "_generated/splinepy.bspline.BSplineBase.derivative", "_generated/splinepy.bspline.BSplineBase.elevate_degrees", "_generated/splinepy.bspline.BSplineBase.evaluate", "_generated/splinepy.bspline.BSplineBase.export", "_generated/splinepy.bspline.BSplineBase.extract_bezier_patches", "_generated/splinepy.bspline.BSplineBase.greville_abscissae", "_generated/splinepy.bspline.BSplineBase.insert_knots", "_generated/splinepy.bspline.BSplineBase.jacobian", "_generated/splinepy.bspline.BSplineBase.knot_insertion_matrix", "_generated/splinepy.bspline.BSplineBase.mapper", "_generated/splinepy.bspline.BSplineBase.normalize_knot_vectors", "_generated/splinepy.bspline.BSplineBase.proximities", "_generated/splinepy.bspline.BSplineBase.reduce_degrees", "_generated/splinepy.bspline.BSplineBase.remove_knots", "_generated/splinepy.bspline.BSplineBase.sample", "_generated/splinepy.bspline.BSplineBase.show", "_generated/splinepy.bspline.BSplineBase.showable", "_generated/splinepy.bspline.BSplineBase.support", "_generated/splinepy.bspline.BSplineBase.todict", "_generated/splinepy.bspline.BSplineBase.uniform_refine", "_generated/splinepy.cli", "_generated/splinepy.cli.convert", "_generated/splinepy.cli.entry", "_generated/splinepy.cli.show", "_generated/splinepy.helpme", "_generated/splinepy.helpme.check", "_generated/splinepy.helpme.check.Checker", "_generated/splinepy.helpme.check.Checker.clamped_knot_vectors", "_generated/splinepy.helpme.check.Checker.valid_queries", "_generated/splinepy.helpme.check.clamped_knot_vectors", "_generated/splinepy.helpme.check.valid_queries", "_generated/splinepy.helpme.create", "_generated/splinepy.helpme.create.Creator", "_generated/splinepy.helpme.create.Creator.determinant_spline", "_generated/splinepy.helpme.create.Creator.embedded", "_generated/splinepy.helpme.create.Creator.extruded", "_generated/splinepy.helpme.create.Creator.parametric_view", "_generated/splinepy.helpme.create.Creator.revolved", "_generated/splinepy.helpme.create.arc", "_generated/splinepy.helpme.create.box", "_generated/splinepy.helpme.create.circle", "_generated/splinepy.helpme.create.cone", "_generated/splinepy.helpme.create.determinant_spline", "_generated/splinepy.helpme.create.disk", "_generated/splinepy.helpme.create.embedded", "_generated/splinepy.helpme.create.extruded", "_generated/splinepy.helpme.create.from_bounds", "_generated/splinepy.helpme.create.line", "_generated/splinepy.helpme.create.parametric_view", "_generated/splinepy.helpme.create.plate", "_generated/splinepy.helpme.create.pyramid", "_generated/splinepy.helpme.create.revolved", "_generated/splinepy.helpme.create.sphere", "_generated/splinepy.helpme.create.surface_circle", "_generated/splinepy.helpme.create.torus", "_generated/splinepy.helpme.extract", "_generated/splinepy.helpme.extract.Extractor", "_generated/splinepy.helpme.extract.Extractor.arrow_data", "_generated/splinepy.helpme.extract.Extractor.bases", "_generated/splinepy.helpme.extract.Extractor.beziers", "_generated/splinepy.helpme.extract.Extractor.boundaries", "_generated/splinepy.helpme.extract.Extractor.control_edges", "_generated/splinepy.helpme.extract.Extractor.control_faces", "_generated/splinepy.helpme.extract.Extractor.control_mesh", "_generated/splinepy.helpme.extract.Extractor.control_points", "_generated/splinepy.helpme.extract.Extractor.control_volumes", "_generated/splinepy.helpme.extract.Extractor.edges", "_generated/splinepy.helpme.extract.Extractor.faces", "_generated/splinepy.helpme.extract.Extractor.spline", "_generated/splinepy.helpme.extract.Extractor.volumes", "_generated/splinepy.helpme.extract.arrow_data", "_generated/splinepy.helpme.extract.bases", "_generated/splinepy.helpme.extract.boundaries", "_generated/splinepy.helpme.extract.control_edges", "_generated/splinepy.helpme.extract.control_faces", "_generated/splinepy.helpme.extract.control_mesh", "_generated/splinepy.helpme.extract.control_points", "_generated/splinepy.helpme.extract.control_volumes", "_generated/splinepy.helpme.extract.edges", "_generated/splinepy.helpme.extract.faces", "_generated/splinepy.helpme.extract.spline", "_generated/splinepy.helpme.extract.volumes", "_generated/splinepy.helpme.ffd", "_generated/splinepy.helpme.ffd.FFD", "_generated/splinepy.helpme.ffd.FFD.mesh", "_generated/splinepy.helpme.ffd.FFD.padding", "_generated/splinepy.helpme.ffd.FFD.show", "_generated/splinepy.helpme.ffd.FFD.showable", "_generated/splinepy.helpme.ffd.FFD.spline", "_generated/splinepy.helpme.fit", "_generated/splinepy.helpme.fit.compute_knot_vector", "_generated/splinepy.helpme.fit.curve", "_generated/splinepy.helpme.fit.parameterize", "_generated/splinepy.helpme.fit.solve_for_control_points", "_generated/splinepy.helpme.fit.surface", "_generated/splinepy.helpme.integrate", "_generated/splinepy.helpme.integrate.Integrator", "_generated/splinepy.helpme.integrate.Integrator.parametric_function", "_generated/splinepy.helpme.integrate.Integrator.physical_function", "_generated/splinepy.helpme.integrate.Integrator.volume", "_generated/splinepy.helpme.integrate.parametric_function", "_generated/splinepy.helpme.integrate.physical_function", "_generated/splinepy.helpme.integrate.volume", "_generated/splinepy.helpme.mapper", "_generated/splinepy.helpme.mapper.Mapper", "_generated/splinepy.helpme.mapper.Mapper.basis_function_derivatives", "_generated/splinepy.helpme.mapper.Mapper.basis_gradient_and_support", "_generated/splinepy.helpme.mapper.Mapper.basis_hessian_and_support", "_generated/splinepy.helpme.mapper.Mapper.basis_laplacian_and_support", "_generated/splinepy.helpme.mapper.Mapper.divergence", "_generated/splinepy.helpme.mapper.Mapper.field_derivatives", "_generated/splinepy.helpme.mapper.Mapper.gradient", "_generated/splinepy.helpme.mapper.Mapper.hessian", "_generated/splinepy.helpme.mapper.Mapper.laplacian", "_generated/splinepy.helpme.multi_index", "_generated/splinepy.helpme.multi_index.MultiIndex", "_generated/splinepy.helpme.reparametrize", "_generated/splinepy.helpme.reparametrize.flip_axes", "_generated/splinepy.helpme.reparametrize.permute_parametric_axes", "_generated/splinepy.helpme.visualize", "_generated/splinepy.helpme.visualize.MultipatchShowOption", "_generated/splinepy.helpme.visualize.MultipatchShowOption.clear", "_generated/splinepy.helpme.visualize.MultipatchShowOption.copy_valid_options", "_generated/splinepy.helpme.visualize.MultipatchShowOption.get", "_generated/splinepy.helpme.visualize.MultipatchShowOption.items", "_generated/splinepy.helpme.visualize.MultipatchShowOption.keys", "_generated/splinepy.helpme.visualize.MultipatchShowOption.pop", "_generated/splinepy.helpme.visualize.MultipatchShowOption.update", "_generated/splinepy.helpme.visualize.MultipatchShowOption.valid_keys", "_generated/splinepy.helpme.visualize.MultipatchShowOption.values", "_generated/splinepy.helpme.visualize.SplineShowOption", "_generated/splinepy.helpme.visualize.SplineShowOption.clear", "_generated/splinepy.helpme.visualize.SplineShowOption.copy_valid_options", "_generated/splinepy.helpme.visualize.SplineShowOption.get", "_generated/splinepy.helpme.visualize.SplineShowOption.items", "_generated/splinepy.helpme.visualize.SplineShowOption.keys", "_generated/splinepy.helpme.visualize.SplineShowOption.pop", "_generated/splinepy.helpme.visualize.SplineShowOption.update", "_generated/splinepy.helpme.visualize.SplineShowOption.valid_keys", "_generated/splinepy.helpme.visualize.SplineShowOption.values", "_generated/splinepy.helpme.visualize.make_showable", "_generated/splinepy.helpme.visualize.show", "_generated/splinepy.io", "_generated/splinepy.io.cats", "_generated/splinepy.io.cats.export", "_generated/splinepy.io.cats.load", "_generated/splinepy.io.default", "_generated/splinepy.io.default.export", "_generated/splinepy.io.default.load", "_generated/splinepy.io.gismo", "_generated/splinepy.io.gismo.AdditionalBlocks", "_generated/splinepy.io.gismo.AdditionalBlocks.add_assembly_options", "_generated/splinepy.io.gismo.AdditionalBlocks.add_boundary_conditions", "_generated/splinepy.io.gismo.AdditionalBlocks.add_function", "_generated/splinepy.io.gismo.AdditionalBlocks.to_list", "_generated/splinepy.io.gismo.export", "_generated/splinepy.io.gismo.load", "_generated/splinepy.io.iges", "_generated/splinepy.io.iges.export", "_generated/splinepy.io.iges.load", "_generated/splinepy.io.ioutils", "_generated/splinepy.io.ioutils.abs_fname", "_generated/splinepy.io.ioutils.dict_to_spline", "_generated/splinepy.io.ioutils.expand_tabs", "_generated/splinepy.io.ioutils.form_lines", "_generated/splinepy.io.ioutils.make_meaningful", "_generated/splinepy.io.ioutils.next_line", "_generated/splinepy.io.irit", "_generated/splinepy.io.irit.export", "_generated/splinepy.io.irit.load", "_generated/splinepy.io.json", "_generated/splinepy.io.json.export", "_generated/splinepy.io.json.load", "_generated/splinepy.io.mfem", "_generated/splinepy.io.mfem.dof_mapping", "_generated/splinepy.io.mfem.export", "_generated/splinepy.io.mfem.export_cartesian", "_generated/splinepy.io.mfem.load", "_generated/splinepy.io.mfem.read_solution", "_generated/splinepy.io.npz", "_generated/splinepy.io.npz.export", "_generated/splinepy.io.npz.load", "_generated/splinepy.io.svg", "_generated/splinepy.io.svg.export", "_generated/splinepy.microstructure", "_generated/splinepy.microstructure.microstructure", "_generated/splinepy.microstructure.microstructure.Microstructure", "_generated/splinepy.microstructure.microstructure.Microstructure.create", "_generated/splinepy.microstructure.microstructure.Microstructure.deformation_function", "_generated/splinepy.microstructure.microstructure.Microstructure.microtile", "_generated/splinepy.microstructure.microstructure.Microstructure.parameter_sensitivity_function", "_generated/splinepy.microstructure.microstructure.Microstructure.parametrization_function", "_generated/splinepy.microstructure.microstructure.Microstructure.show", "_generated/splinepy.microstructure.microstructure.Microstructure.tiling", "_generated/splinepy.microstructure.tiles", "_generated/splinepy.microstructure.tiles.armadillo", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.check_param_derivatives", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.check_params", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.create_tile", "_generated/splinepy.microstructure.tiles.by_dim", "_generated/splinepy.microstructure.tiles.chi", "_generated/splinepy.microstructure.tiles.chi.Chi", "_generated/splinepy.microstructure.tiles.chi.Chi.check_param_derivatives", "_generated/splinepy.microstructure.tiles.chi.Chi.check_params", "_generated/splinepy.microstructure.tiles.chi.Chi.create_tile", "_generated/splinepy.microstructure.tiles.cross_2d", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.check_param_derivatives", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.check_params", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.create_tile", "_generated/splinepy.microstructure.tiles.cross_3d", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.check_param_derivatives", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.check_params", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.create_tile", "_generated/splinepy.microstructure.tiles.cross_3d_linear", "_generated/splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear", "_generated/splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_param_derivatives", "_generated/splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_params", "_generated/splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.create_tile", "_generated/splinepy.microstructure.tiles.cube_void", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.check_param_derivatives", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.check_params", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.create_tile", "_generated/splinepy.microstructure.tiles.double_lattice", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_param_derivatives", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_params", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.create_tile", "_generated/splinepy.microstructure.tiles.ellips_v_oid", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_param_derivatives", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_params", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.create_tile", "_generated/splinepy.microstructure.tiles.everything", "_generated/splinepy.microstructure.tiles.get", "_generated/splinepy.microstructure.tiles.hollow_cube", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.check_param_derivatives", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.check_params", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.create_tile", "_generated/splinepy.microstructure.tiles.hollow_octagon", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_param_derivatives", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_params", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.create_tile", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_param_derivatives", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_params", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.closing_tile", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.create_tile", "_generated/splinepy.microstructure.tiles.inverse_cross_3d", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_param_derivatives", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_params", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.create_tile", "_generated/splinepy.microstructure.tiles.show", "_generated/splinepy.microstructure.tiles.snappy", "_generated/splinepy.microstructure.tiles.snappy.Snappy", "_generated/splinepy.microstructure.tiles.snappy.Snappy.check_param_derivatives", "_generated/splinepy.microstructure.tiles.snappy.Snappy.check_params", "_generated/splinepy.microstructure.tiles.snappy.Snappy.create_tile", "_generated/splinepy.microstructure.tiles.tile_base", "_generated/splinepy.microstructure.tiles.tile_base.TileBase", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.check_param_derivatives", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.check_params", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.create_tile", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.dim", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.evaluation_points", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.para_dim", "_generated/splinepy.multipatch", "_generated/splinepy.multipatch.Multipatch", "_generated/splinepy.multipatch.Multipatch.add_fields", "_generated/splinepy.multipatch.Multipatch.boundaries", "_generated/splinepy.multipatch.Multipatch.boundaries_from_continuity", "_generated/splinepy.multipatch.Multipatch.boundary_from_function", "_generated/splinepy.multipatch.Multipatch.boundary_multipatch", "_generated/splinepy.multipatch.Multipatch.boundary_patch_ids", "_generated/splinepy.multipatch.Multipatch.clear", "_generated/splinepy.multipatch.Multipatch.combine_boundaries", "_generated/splinepy.multipatch.Multipatch.control_point_offsets", "_generated/splinepy.multipatch.Multipatch.determine_interfaces", "_generated/splinepy.multipatch.Multipatch.dim", "_generated/splinepy.multipatch.Multipatch.evaluate", "_generated/splinepy.multipatch.Multipatch.extract", "_generated/splinepy.multipatch.Multipatch.fields", "_generated/splinepy.multipatch.Multipatch.get_interfaces", "_generated/splinepy.multipatch.Multipatch.interface_orientations", "_generated/splinepy.multipatch.Multipatch.interfaces", "_generated/splinepy.multipatch.Multipatch.para_dim", "_generated/splinepy.multipatch.Multipatch.patches", "_generated/splinepy.multipatch.Multipatch.sample", "_generated/splinepy.multipatch.Multipatch.set_boundary", "_generated/splinepy.multipatch.Multipatch.set_interfaces", "_generated/splinepy.multipatch.Multipatch.show", "_generated/splinepy.multipatch.Multipatch.show_options", "_generated/splinepy.multipatch.Multipatch.showable", "_generated/splinepy.multipatch.Multipatch.spline_data", "_generated/splinepy.multipatch.Multipatch.sub_multipatch", "_generated/splinepy.multipatch.Multipatch.sub_patch_centers", "_generated/splinepy.nurbs", "_generated/splinepy.nurbs.NURBS", "_generated/splinepy.nurbs.NURBS.basis", "_generated/splinepy.nurbs.NURBS.basis_and_support", "_generated/splinepy.nurbs.NURBS.basis_derivative", "_generated/splinepy.nurbs.NURBS.basis_derivative_and_support", "_generated/splinepy.nurbs.NURBS.clear", "_generated/splinepy.nurbs.NURBS.copy", "_generated/splinepy.nurbs.NURBS.current_core_properties", "_generated/splinepy.nurbs.NURBS.derivative", "_generated/splinepy.nurbs.NURBS.elevate_degrees", "_generated/splinepy.nurbs.NURBS.evaluate", "_generated/splinepy.nurbs.NURBS.export", "_generated/splinepy.nurbs.NURBS.extract_bezier_patches", "_generated/splinepy.nurbs.NURBS.greville_abscissae", "_generated/splinepy.nurbs.NURBS.insert_knots", "_generated/splinepy.nurbs.NURBS.jacobian", "_generated/splinepy.nurbs.NURBS.knot_insertion_matrix", "_generated/splinepy.nurbs.NURBS.mapper", "_generated/splinepy.nurbs.NURBS.normalize_knot_vectors", "_generated/splinepy.nurbs.NURBS.nurbs", "_generated/splinepy.nurbs.NURBS.proximities", "_generated/splinepy.nurbs.NURBS.reduce_degrees", "_generated/splinepy.nurbs.NURBS.remove_knots", "_generated/splinepy.nurbs.NURBS.sample", "_generated/splinepy.nurbs.NURBS.show", "_generated/splinepy.nurbs.NURBS.showable", "_generated/splinepy.nurbs.NURBS.support", "_generated/splinepy.nurbs.NURBS.todict", "_generated/splinepy.nurbs.NURBS.uniform_refine", "_generated/splinepy.rational_bezier", "_generated/splinepy.rational_bezier.RationalBezier", "_generated/splinepy.rational_bezier.RationalBezier.basis", "_generated/splinepy.rational_bezier.RationalBezier.basis_and_support", "_generated/splinepy.rational_bezier.RationalBezier.basis_derivative", "_generated/splinepy.rational_bezier.RationalBezier.basis_derivative_and_support", "_generated/splinepy.rational_bezier.RationalBezier.clear", "_generated/splinepy.rational_bezier.RationalBezier.compose", "_generated/splinepy.rational_bezier.RationalBezier.composition_derivative", "_generated/splinepy.rational_bezier.RationalBezier.copy", "_generated/splinepy.rational_bezier.RationalBezier.current_core_properties", "_generated/splinepy.rational_bezier.RationalBezier.derivative", "_generated/splinepy.rational_bezier.RationalBezier.derivative_spline", "_generated/splinepy.rational_bezier.RationalBezier.elevate_degrees", "_generated/splinepy.rational_bezier.RationalBezier.evaluate", "_generated/splinepy.rational_bezier.RationalBezier.export", "_generated/splinepy.rational_bezier.RationalBezier.extract_dim", "_generated/splinepy.rational_bezier.RationalBezier.greville_abscissae", "_generated/splinepy.rational_bezier.RationalBezier.jacobian", "_generated/splinepy.rational_bezier.RationalBezier.mapper", "_generated/splinepy.rational_bezier.RationalBezier.nurbs", "_generated/splinepy.rational_bezier.RationalBezier.proximities", "_generated/splinepy.rational_bezier.RationalBezier.rationalbezier", "_generated/splinepy.rational_bezier.RationalBezier.reduce_degrees", "_generated/splinepy.rational_bezier.RationalBezier.sample", "_generated/splinepy.rational_bezier.RationalBezier.show", "_generated/splinepy.rational_bezier.RationalBezier.showable", "_generated/splinepy.rational_bezier.RationalBezier.split", "_generated/splinepy.rational_bezier.RationalBezier.support", "_generated/splinepy.rational_bezier.RationalBezier.todict", "_generated/splinepy.settings", "_generated/splinepy.settings.CHECK_BOUNDS", "_generated/splinepy.settings.NAME_TO_TYPE", "_generated/splinepy.settings.NTHREADS", "_generated/splinepy.settings.TOLERANCE", "_generated/splinepy.spline", "_generated/splinepy.spline.RequiredProperties", "_generated/splinepy.spline.RequiredProperties.intersection", "_generated/splinepy.spline.RequiredProperties.of", "_generated/splinepy.spline.RequiredProperties.union", "_generated/splinepy.spline.Spline", "_generated/splinepy.spline.Spline.basis", "_generated/splinepy.spline.Spline.basis_and_support", "_generated/splinepy.spline.Spline.basis_derivative", "_generated/splinepy.spline.Spline.basis_derivative_and_support", "_generated/splinepy.spline.Spline.check", "_generated/splinepy.spline.Spline.clear", "_generated/splinepy.spline.Spline.control_mesh_resolutions", "_generated/splinepy.spline.Spline.control_point_bounds", "_generated/splinepy.spline.Spline.control_points", "_generated/splinepy.spline.Spline.copy", "_generated/splinepy.spline.Spline.cps", "_generated/splinepy.spline.Spline.create", "_generated/splinepy.spline.Spline.current_core_properties", "_generated/splinepy.spline.Spline.degrees", "_generated/splinepy.spline.Spline.derivative", "_generated/splinepy.spline.Spline.dim", "_generated/splinepy.spline.Spline.ds", "_generated/splinepy.spline.Spline.elevate_degrees", "_generated/splinepy.spline.Spline.evaluate", "_generated/splinepy.spline.Spline.export", "_generated/splinepy.spline.Spline.extract", "_generated/splinepy.spline.Spline.greville_abscissae", "_generated/splinepy.spline.Spline.has_knot_vectors", "_generated/splinepy.spline.Spline.integrate", "_generated/splinepy.spline.Spline.is_rational", "_generated/splinepy.spline.Spline.jacobian", "_generated/splinepy.spline.Spline.knot_multiplicities", "_generated/splinepy.spline.Spline.knot_vectors", "_generated/splinepy.spline.Spline.kvs", "_generated/splinepy.spline.Spline.mapper", "_generated/splinepy.spline.Spline.multi_index", "_generated/splinepy.spline.Spline.name", "_generated/splinepy.spline.Spline.para_dim", "_generated/splinepy.spline.Spline.parametric_bounds", "_generated/splinepy.spline.Spline.proximities", "_generated/splinepy.spline.Spline.reduce_degrees", "_generated/splinepy.spline.Spline.required_properties", "_generated/splinepy.spline.Spline.sample", "_generated/splinepy.spline.Spline.show", "_generated/splinepy.spline.Spline.show_options", "_generated/splinepy.spline.Spline.showable", "_generated/splinepy.spline.Spline.spline_data", "_generated/splinepy.spline.Spline.support", "_generated/splinepy.spline.Spline.todict", "_generated/splinepy.spline.Spline.unique_knots", "_generated/splinepy.spline.Spline.weights", "_generated/splinepy.spline.Spline.whatami", "_generated/splinepy.spline.Spline.ws", "_generated/splinepy.splinepy_core", "_generated/splinepy.splinepy_core.ControlPointPointers", "_generated/splinepy.splinepy_core.ControlPointPointers.dim", "_generated/splinepy.splinepy_core.ControlPointPointers.len", "_generated/splinepy.splinepy_core.ControlPointPointers.set_row", "_generated/splinepy.splinepy_core.ControlPointPointers.set_rows", "_generated/splinepy.splinepy_core.ControlPointPointers.sync", "_generated/splinepy.splinepy_core.ControlPointPointers.sync_rows", "_generated/splinepy.splinepy_core.KnotVector", "_generated/splinepy.splinepy_core.KnotVector.find_span", "_generated/splinepy.splinepy_core.KnotVector.multiplicities", "_generated/splinepy.splinepy_core.KnotVector.numpy", "_generated/splinepy.splinepy_core.KnotVector.scale", "_generated/splinepy.splinepy_core.KnotVector.unique", "_generated/splinepy.splinepy_core.ParameterSpace", "_generated/splinepy.splinepy_core.ParameterSpace.copy", "_generated/splinepy.splinepy_core.ParameterSpace.unique_knots", "_generated/splinepy.splinepy_core.PyMultipatch", "_generated/splinepy.splinepy_core.PyMultipatch.add_fields", "_generated/splinepy.splinepy_core.PyMultipatch.boundary_multipatch", "_generated/splinepy.splinepy_core.PyMultipatch.boundary_patch_ids", "_generated/splinepy.splinepy_core.PyMultipatch.clear", "_generated/splinepy.splinepy_core.PyMultipatch.control_point_offsets", "_generated/splinepy.splinepy_core.PyMultipatch.control_points", "_generated/splinepy.splinepy_core.PyMultipatch.dim", "_generated/splinepy.splinepy_core.PyMultipatch.evaluate", "_generated/splinepy.splinepy_core.PyMultipatch.fields", "_generated/splinepy.splinepy_core.PyMultipatch.get_interfaces", "_generated/splinepy.splinepy_core.PyMultipatch.interface_orientations", "_generated/splinepy.splinepy_core.PyMultipatch.n_default_threads", "_generated/splinepy.splinepy_core.PyMultipatch.name", "_generated/splinepy.splinepy_core.PyMultipatch.para_dim", "_generated/splinepy.splinepy_core.PyMultipatch.patches", "_generated/splinepy.splinepy_core.PyMultipatch.same_parametric_bounds", "_generated/splinepy.splinepy_core.PyMultipatch.sample", "_generated/splinepy.splinepy_core.PyMultipatch.set_interfaces", "_generated/splinepy.splinepy_core.PyMultipatch.sub_multipatch", "_generated/splinepy.splinepy_core.PyMultipatch.sub_patch_centers", "_generated/splinepy.splinepy_core.PyMultipatch.tolerance", "_generated/splinepy.splinepy_core.PyMultipatch.whatami", "_generated/splinepy.splinepy_core.PySpline", "_generated/splinepy.splinepy_core.PySpline.basis", "_generated/splinepy.splinepy_core.PySpline.basis_and_support", "_generated/splinepy.splinepy_core.PySpline.basis_derivative", "_generated/splinepy.splinepy_core.PySpline.basis_derivative_and_support", "_generated/splinepy.splinepy_core.PySpline.control_mesh_resolutions", "_generated/splinepy.splinepy_core.PySpline.current_core_properties", "_generated/splinepy.splinepy_core.PySpline.derivative", "_generated/splinepy.splinepy_core.PySpline.dim", "_generated/splinepy.splinepy_core.PySpline.elevate_degrees", "_generated/splinepy.splinepy_core.PySpline.evaluate", "_generated/splinepy.splinepy_core.PySpline.has_knot_vectors", "_generated/splinepy.splinepy_core.PySpline.is_rational", "_generated/splinepy.splinepy_core.PySpline.jacobian", "_generated/splinepy.splinepy_core.PySpline.name", "_generated/splinepy.splinepy_core.PySpline.para_dim", "_generated/splinepy.splinepy_core.PySpline.parametric_bounds", "_generated/splinepy.splinepy_core.PySpline.proximities", "_generated/splinepy.splinepy_core.PySpline.reduce_degrees", "_generated/splinepy.splinepy_core.PySpline.sample", "_generated/splinepy.splinepy_core.PySpline.support", "_generated/splinepy.splinepy_core.PySpline.whatami", "_generated/splinepy.splinepy_core.WeightPointers", "_generated/splinepy.splinepy_core.WeightPointers.dim", "_generated/splinepy.splinepy_core.WeightPointers.len", "_generated/splinepy.splinepy_core.WeightPointers.set_row", "_generated/splinepy.splinepy_core.WeightPointers.set_rows", "_generated/splinepy.splinepy_core.WeightPointers.sync", "_generated/splinepy.splinepy_core.WeightPointers.sync_rows", "_generated/splinepy.splinepy_core.add", "_generated/splinepy.splinepy_core.annul_core", "_generated/splinepy.splinepy_core.bezier_extraction_matrix", "_generated/splinepy.splinepy_core.boundaries_from_continuity", "_generated/splinepy.splinepy_core.boundary_centers", "_generated/splinepy.splinepy_core.build_type", "_generated/splinepy.splinepy_core.compose", "_generated/splinepy.splinepy_core.compose_sensitivities", "_generated/splinepy.splinepy_core.composition_derivative", "_generated/splinepy.splinepy_core.core_id", "_generated/splinepy.splinepy_core.core_ref_count", "_generated/splinepy.splinepy_core.derivative_spline", "_generated/splinepy.splinepy_core.export_iges", "_generated/splinepy.splinepy_core.extract_all_boundary_splines", "_generated/splinepy.splinepy_core.extract_bezier_patches", "_generated/splinepy.splinepy_core.extract_boundaries", "_generated/splinepy.splinepy_core.extract_dim", "_generated/splinepy.splinepy_core.global_knot_insertion_matrix", "_generated/splinepy.splinepy_core.has_core", "_generated/splinepy.splinepy_core.insert_knots", "_generated/splinepy.splinepy_core.interfaces_from_boundary_centers", "_generated/splinepy.splinepy_core.is_minimal", "_generated/splinepy.splinepy_core.knot_insertion_matrix", "_generated/splinepy.splinepy_core.multiply", "_generated/splinepy.splinepy_core.null_spline", "_generated/splinepy.splinepy_core.read_iges", "_generated/splinepy.splinepy_core.remove_knots", "_generated/splinepy.splinepy_core.same_spline_with_knot_vectors", "_generated/splinepy.splinepy_core.split", "_generated/splinepy.to_derived", "_generated/splinepy.utils", "_generated/splinepy.utils.data", "_generated/splinepy.utils.data.MultipatchData", "_generated/splinepy.utils.data.MultipatchData.as_arrow", "_generated/splinepy.utils.data.MultipatchData.as_scalar", "_generated/splinepy.utils.data.MultipatchData.clear", "_generated/splinepy.utils.data.MultipatchData.get", "_generated/splinepy.utils.data.MultipatchData.items", "_generated/splinepy.utils.data.MultipatchData.keys", "_generated/splinepy.utils.data.MultipatchData.pop", "_generated/splinepy.utils.data.MultipatchData.update", "_generated/splinepy.utils.data.MultipatchData.values", "_generated/splinepy.utils.data.PhysicalSpaceArray", "_generated/splinepy.utils.data.PhysicalSpaceArray.all", "_generated/splinepy.utils.data.PhysicalSpaceArray.any", "_generated/splinepy.utils.data.PhysicalSpaceArray.argmax", "_generated/splinepy.utils.data.PhysicalSpaceArray.argmin", "_generated/splinepy.utils.data.PhysicalSpaceArray.argpartition", "_generated/splinepy.utils.data.PhysicalSpaceArray.argsort", "_generated/splinepy.utils.data.PhysicalSpaceArray.astype", "_generated/splinepy.utils.data.PhysicalSpaceArray.byteswap", "_generated/splinepy.utils.data.PhysicalSpaceArray.choose", "_generated/splinepy.utils.data.PhysicalSpaceArray.clip", "_generated/splinepy.utils.data.PhysicalSpaceArray.compress", "_generated/splinepy.utils.data.PhysicalSpaceArray.conj", "_generated/splinepy.utils.data.PhysicalSpaceArray.conjugate", "_generated/splinepy.utils.data.PhysicalSpaceArray.copy", "_generated/splinepy.utils.data.PhysicalSpaceArray.cumprod", "_generated/splinepy.utils.data.PhysicalSpaceArray.cumsum", "_generated/splinepy.utils.data.PhysicalSpaceArray.diagonal", "_generated/splinepy.utils.data.PhysicalSpaceArray.dot", "_generated/splinepy.utils.data.PhysicalSpaceArray.dump", "_generated/splinepy.utils.data.PhysicalSpaceArray.dumps", "_generated/splinepy.utils.data.PhysicalSpaceArray.fill", "_generated/splinepy.utils.data.PhysicalSpaceArray.flatten", "_generated/splinepy.utils.data.PhysicalSpaceArray.full_row_indices", "_generated/splinepy.utils.data.PhysicalSpaceArray.getfield", "_generated/splinepy.utils.data.PhysicalSpaceArray.item", "_generated/splinepy.utils.data.PhysicalSpaceArray.max", "_generated/splinepy.utils.data.PhysicalSpaceArray.mean", "_generated/splinepy.utils.data.PhysicalSpaceArray.min", "_generated/splinepy.utils.data.PhysicalSpaceArray.nonzero", "_generated/splinepy.utils.data.PhysicalSpaceArray.partition", "_generated/splinepy.utils.data.PhysicalSpaceArray.prod", "_generated/splinepy.utils.data.PhysicalSpaceArray.put", "_generated/splinepy.utils.data.PhysicalSpaceArray.ravel", "_generated/splinepy.utils.data.PhysicalSpaceArray.repeat", "_generated/splinepy.utils.data.PhysicalSpaceArray.reshape", "_generated/splinepy.utils.data.PhysicalSpaceArray.resize", "_generated/splinepy.utils.data.PhysicalSpaceArray.round", "_generated/splinepy.utils.data.PhysicalSpaceArray.row_indices", "_generated/splinepy.utils.data.PhysicalSpaceArray.searchsorted", "_generated/splinepy.utils.data.PhysicalSpaceArray.setfield", "_generated/splinepy.utils.data.PhysicalSpaceArray.setflags", "_generated/splinepy.utils.data.PhysicalSpaceArray.sort", "_generated/splinepy.utils.data.PhysicalSpaceArray.squeeze", "_generated/splinepy.utils.data.PhysicalSpaceArray.std", "_generated/splinepy.utils.data.PhysicalSpaceArray.sum", "_generated/splinepy.utils.data.PhysicalSpaceArray.swapaxes", "_generated/splinepy.utils.data.PhysicalSpaceArray.take", "_generated/splinepy.utils.data.PhysicalSpaceArray.to_device", "_generated/splinepy.utils.data.PhysicalSpaceArray.tobytes", "_generated/splinepy.utils.data.PhysicalSpaceArray.tofile", "_generated/splinepy.utils.data.PhysicalSpaceArray.tolist", "_generated/splinepy.utils.data.PhysicalSpaceArray.tostring", "_generated/splinepy.utils.data.PhysicalSpaceArray.trace", "_generated/splinepy.utils.data.PhysicalSpaceArray.transpose", "_generated/splinepy.utils.data.PhysicalSpaceArray.var", "_generated/splinepy.utils.data.PhysicalSpaceArray.view", "_generated/splinepy.utils.data.SplineData", "_generated/splinepy.utils.data.SplineData.as_arrow", "_generated/splinepy.utils.data.SplineData.as_scalar", "_generated/splinepy.utils.data.SplineData.clear", "_generated/splinepy.utils.data.SplineData.get", "_generated/splinepy.utils.data.SplineData.items", "_generated/splinepy.utils.data.SplineData.keys", "_generated/splinepy.utils.data.SplineData.pop", "_generated/splinepy.utils.data.SplineData.update", "_generated/splinepy.utils.data.SplineData.values", "_generated/splinepy.utils.data.SplineDataAdaptor", "_generated/splinepy.utils.data.SplineDataAdaptor.arrow_data_only", "_generated/splinepy.utils.data.SplineDataAdaptor.as_vertex_data", "_generated/splinepy.utils.data.SplineDataAdaptor.data", "_generated/splinepy.utils.data.SplineDataAdaptor.function", "_generated/splinepy.utils.data.SplineDataAdaptor.has_evaluate", "_generated/splinepy.utils.data.SplineDataAdaptor.has_function", "_generated/splinepy.utils.data.SplineDataAdaptor.has_locations", "_generated/splinepy.utils.data.SplineDataAdaptor.is_spline", "_generated/splinepy.utils.data.SplineDataAdaptor.locations", "_generated/splinepy.utils.data.SplineDataAdaptor.parametric_bounds", "_generated/splinepy.utils.data.cartesian_product", "_generated/splinepy.utils.data.enforce_contiguous", "_generated/splinepy.utils.data.enforce_contiguous_values", "_generated/splinepy.utils.data.make_matrix", "_generated/splinepy.utils.data.uniform_query", "_generated/splinepy.utils.log", "_generated/splinepy.utils.log.configure", "_generated/splinepy.utils.log.debug", "_generated/splinepy.utils.log.error", "_generated/splinepy.utils.log.info", "_generated/splinepy.utils.log.prepend_log", "_generated/splinepy.utils.log.warning", "api_reference", "index", "python_api", "spline_intro"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["CONTRIBUTING.rst", "_generated/splinepy.rst", "_generated/splinepy.bezier.rst", "_generated/splinepy.bezier.Bezier.rst", "_generated/splinepy.bezier.Bezier.basis.rst", "_generated/splinepy.bezier.Bezier.basis_and_support.rst", "_generated/splinepy.bezier.Bezier.basis_derivative.rst", "_generated/splinepy.bezier.Bezier.basis_derivative_and_support.rst", "_generated/splinepy.bezier.Bezier.bezier.rst", "_generated/splinepy.bezier.Bezier.bspline.rst", "_generated/splinepy.bezier.Bezier.clear.rst", "_generated/splinepy.bezier.Bezier.compose.rst", "_generated/splinepy.bezier.Bezier.composition_derivative.rst", "_generated/splinepy.bezier.Bezier.copy.rst", "_generated/splinepy.bezier.Bezier.current_core_properties.rst", "_generated/splinepy.bezier.Bezier.derivative.rst", "_generated/splinepy.bezier.Bezier.derivative_spline.rst", "_generated/splinepy.bezier.Bezier.elevate_degrees.rst", "_generated/splinepy.bezier.Bezier.evaluate.rst", "_generated/splinepy.bezier.Bezier.export.rst", "_generated/splinepy.bezier.Bezier.extract_dim.rst", "_generated/splinepy.bezier.Bezier.greville_abscissae.rst", "_generated/splinepy.bezier.Bezier.jacobian.rst", "_generated/splinepy.bezier.Bezier.mapper.rst", "_generated/splinepy.bezier.Bezier.nurbs.rst", "_generated/splinepy.bezier.Bezier.proximities.rst", "_generated/splinepy.bezier.Bezier.rationalbezier.rst", "_generated/splinepy.bezier.Bezier.reduce_degrees.rst", "_generated/splinepy.bezier.Bezier.sample.rst", "_generated/splinepy.bezier.Bezier.show.rst", "_generated/splinepy.bezier.Bezier.showable.rst", "_generated/splinepy.bezier.Bezier.split.rst", "_generated/splinepy.bezier.Bezier.support.rst", "_generated/splinepy.bezier.Bezier.todict.rst", "_generated/splinepy.bezier.BezierBase.rst", "_generated/splinepy.bezier.BezierBase.basis.rst", "_generated/splinepy.bezier.BezierBase.basis_and_support.rst", "_generated/splinepy.bezier.BezierBase.basis_derivative.rst", "_generated/splinepy.bezier.BezierBase.basis_derivative_and_support.rst", "_generated/splinepy.bezier.BezierBase.clear.rst", "_generated/splinepy.bezier.BezierBase.compose.rst", "_generated/splinepy.bezier.BezierBase.composition_derivative.rst", "_generated/splinepy.bezier.BezierBase.copy.rst", "_generated/splinepy.bezier.BezierBase.current_core_properties.rst", "_generated/splinepy.bezier.BezierBase.derivative.rst", "_generated/splinepy.bezier.BezierBase.derivative_spline.rst", "_generated/splinepy.bezier.BezierBase.elevate_degrees.rst", "_generated/splinepy.bezier.BezierBase.evaluate.rst", "_generated/splinepy.bezier.BezierBase.export.rst", "_generated/splinepy.bezier.BezierBase.extract_dim.rst", "_generated/splinepy.bezier.BezierBase.greville_abscissae.rst", "_generated/splinepy.bezier.BezierBase.jacobian.rst", "_generated/splinepy.bezier.BezierBase.mapper.rst", "_generated/splinepy.bezier.BezierBase.proximities.rst", "_generated/splinepy.bezier.BezierBase.reduce_degrees.rst", "_generated/splinepy.bezier.BezierBase.sample.rst", "_generated/splinepy.bezier.BezierBase.show.rst", "_generated/splinepy.bezier.BezierBase.showable.rst", "_generated/splinepy.bezier.BezierBase.split.rst", "_generated/splinepy.bezier.BezierBase.support.rst", "_generated/splinepy.bezier.BezierBase.todict.rst", "_generated/splinepy.bspline.rst", "_generated/splinepy.bspline.BSpline.rst", "_generated/splinepy.bspline.BSpline.basis.rst", "_generated/splinepy.bspline.BSpline.basis_and_support.rst", "_generated/splinepy.bspline.BSpline.basis_derivative.rst", "_generated/splinepy.bspline.BSpline.basis_derivative_and_support.rst", "_generated/splinepy.bspline.BSpline.bspline.rst", "_generated/splinepy.bspline.BSpline.clear.rst", "_generated/splinepy.bspline.BSpline.copy.rst", "_generated/splinepy.bspline.BSpline.current_core_properties.rst", "_generated/splinepy.bspline.BSpline.derivative.rst", "_generated/splinepy.bspline.BSpline.elevate_degrees.rst", "_generated/splinepy.bspline.BSpline.evaluate.rst", "_generated/splinepy.bspline.BSpline.export.rst", "_generated/splinepy.bspline.BSpline.extract_bezier_patches.rst", "_generated/splinepy.bspline.BSpline.greville_abscissae.rst", "_generated/splinepy.bspline.BSpline.insert_knots.rst", "_generated/splinepy.bspline.BSpline.jacobian.rst", "_generated/splinepy.bspline.BSpline.knot_insertion_matrix.rst", "_generated/splinepy.bspline.BSpline.mapper.rst", "_generated/splinepy.bspline.BSpline.normalize_knot_vectors.rst", "_generated/splinepy.bspline.BSpline.nurbs.rst", "_generated/splinepy.bspline.BSpline.proximities.rst", "_generated/splinepy.bspline.BSpline.reduce_degrees.rst", "_generated/splinepy.bspline.BSpline.remove_knots.rst", "_generated/splinepy.bspline.BSpline.sample.rst", "_generated/splinepy.bspline.BSpline.show.rst", "_generated/splinepy.bspline.BSpline.showable.rst", "_generated/splinepy.bspline.BSpline.support.rst", "_generated/splinepy.bspline.BSpline.todict.rst", "_generated/splinepy.bspline.BSpline.uniform_refine.rst", "_generated/splinepy.bspline.BSplineBase.rst", "_generated/splinepy.bspline.BSplineBase.basis.rst", "_generated/splinepy.bspline.BSplineBase.basis_and_support.rst", "_generated/splinepy.bspline.BSplineBase.basis_derivative.rst", "_generated/splinepy.bspline.BSplineBase.basis_derivative_and_support.rst", "_generated/splinepy.bspline.BSplineBase.clear.rst", "_generated/splinepy.bspline.BSplineBase.copy.rst", "_generated/splinepy.bspline.BSplineBase.current_core_properties.rst", "_generated/splinepy.bspline.BSplineBase.derivative.rst", "_generated/splinepy.bspline.BSplineBase.elevate_degrees.rst", "_generated/splinepy.bspline.BSplineBase.evaluate.rst", "_generated/splinepy.bspline.BSplineBase.export.rst", "_generated/splinepy.bspline.BSplineBase.extract_bezier_patches.rst", "_generated/splinepy.bspline.BSplineBase.greville_abscissae.rst", "_generated/splinepy.bspline.BSplineBase.insert_knots.rst", "_generated/splinepy.bspline.BSplineBase.jacobian.rst", "_generated/splinepy.bspline.BSplineBase.knot_insertion_matrix.rst", "_generated/splinepy.bspline.BSplineBase.mapper.rst", "_generated/splinepy.bspline.BSplineBase.normalize_knot_vectors.rst", "_generated/splinepy.bspline.BSplineBase.proximities.rst", "_generated/splinepy.bspline.BSplineBase.reduce_degrees.rst", "_generated/splinepy.bspline.BSplineBase.remove_knots.rst", "_generated/splinepy.bspline.BSplineBase.sample.rst", "_generated/splinepy.bspline.BSplineBase.show.rst", "_generated/splinepy.bspline.BSplineBase.showable.rst", "_generated/splinepy.bspline.BSplineBase.support.rst", "_generated/splinepy.bspline.BSplineBase.todict.rst", "_generated/splinepy.bspline.BSplineBase.uniform_refine.rst", "_generated/splinepy.cli.rst", "_generated/splinepy.cli.convert.rst", "_generated/splinepy.cli.entry.rst", "_generated/splinepy.cli.show.rst", "_generated/splinepy.helpme.rst", "_generated/splinepy.helpme.check.rst", "_generated/splinepy.helpme.check.Checker.rst", "_generated/splinepy.helpme.check.Checker.clamped_knot_vectors.rst", "_generated/splinepy.helpme.check.Checker.valid_queries.rst", "_generated/splinepy.helpme.check.clamped_knot_vectors.rst", "_generated/splinepy.helpme.check.valid_queries.rst", "_generated/splinepy.helpme.create.rst", "_generated/splinepy.helpme.create.Creator.rst", "_generated/splinepy.helpme.create.Creator.determinant_spline.rst", "_generated/splinepy.helpme.create.Creator.embedded.rst", "_generated/splinepy.helpme.create.Creator.extruded.rst", "_generated/splinepy.helpme.create.Creator.parametric_view.rst", "_generated/splinepy.helpme.create.Creator.revolved.rst", "_generated/splinepy.helpme.create.arc.rst", "_generated/splinepy.helpme.create.box.rst", "_generated/splinepy.helpme.create.circle.rst", "_generated/splinepy.helpme.create.cone.rst", "_generated/splinepy.helpme.create.determinant_spline.rst", "_generated/splinepy.helpme.create.disk.rst", "_generated/splinepy.helpme.create.embedded.rst", "_generated/splinepy.helpme.create.extruded.rst", "_generated/splinepy.helpme.create.from_bounds.rst", "_generated/splinepy.helpme.create.line.rst", "_generated/splinepy.helpme.create.parametric_view.rst", "_generated/splinepy.helpme.create.plate.rst", "_generated/splinepy.helpme.create.pyramid.rst", "_generated/splinepy.helpme.create.revolved.rst", "_generated/splinepy.helpme.create.sphere.rst", "_generated/splinepy.helpme.create.surface_circle.rst", "_generated/splinepy.helpme.create.torus.rst", "_generated/splinepy.helpme.extract.rst", "_generated/splinepy.helpme.extract.Extractor.rst", "_generated/splinepy.helpme.extract.Extractor.arrow_data.rst", "_generated/splinepy.helpme.extract.Extractor.bases.rst", "_generated/splinepy.helpme.extract.Extractor.beziers.rst", "_generated/splinepy.helpme.extract.Extractor.boundaries.rst", "_generated/splinepy.helpme.extract.Extractor.control_edges.rst", "_generated/splinepy.helpme.extract.Extractor.control_faces.rst", "_generated/splinepy.helpme.extract.Extractor.control_mesh.rst", "_generated/splinepy.helpme.extract.Extractor.control_points.rst", "_generated/splinepy.helpme.extract.Extractor.control_volumes.rst", "_generated/splinepy.helpme.extract.Extractor.edges.rst", "_generated/splinepy.helpme.extract.Extractor.faces.rst", "_generated/splinepy.helpme.extract.Extractor.spline.rst", "_generated/splinepy.helpme.extract.Extractor.volumes.rst", "_generated/splinepy.helpme.extract.arrow_data.rst", "_generated/splinepy.helpme.extract.bases.rst", "_generated/splinepy.helpme.extract.boundaries.rst", "_generated/splinepy.helpme.extract.control_edges.rst", "_generated/splinepy.helpme.extract.control_faces.rst", "_generated/splinepy.helpme.extract.control_mesh.rst", "_generated/splinepy.helpme.extract.control_points.rst", "_generated/splinepy.helpme.extract.control_volumes.rst", "_generated/splinepy.helpme.extract.edges.rst", "_generated/splinepy.helpme.extract.faces.rst", "_generated/splinepy.helpme.extract.spline.rst", "_generated/splinepy.helpme.extract.volumes.rst", "_generated/splinepy.helpme.ffd.rst", "_generated/splinepy.helpme.ffd.FFD.rst", "_generated/splinepy.helpme.ffd.FFD.mesh.rst", "_generated/splinepy.helpme.ffd.FFD.padding.rst", "_generated/splinepy.helpme.ffd.FFD.show.rst", "_generated/splinepy.helpme.ffd.FFD.showable.rst", "_generated/splinepy.helpme.ffd.FFD.spline.rst", "_generated/splinepy.helpme.fit.rst", "_generated/splinepy.helpme.fit.compute_knot_vector.rst", "_generated/splinepy.helpme.fit.curve.rst", "_generated/splinepy.helpme.fit.parameterize.rst", "_generated/splinepy.helpme.fit.solve_for_control_points.rst", "_generated/splinepy.helpme.fit.surface.rst", "_generated/splinepy.helpme.integrate.rst", "_generated/splinepy.helpme.integrate.Integrator.rst", "_generated/splinepy.helpme.integrate.Integrator.parametric_function.rst", "_generated/splinepy.helpme.integrate.Integrator.physical_function.rst", "_generated/splinepy.helpme.integrate.Integrator.volume.rst", "_generated/splinepy.helpme.integrate.parametric_function.rst", "_generated/splinepy.helpme.integrate.physical_function.rst", "_generated/splinepy.helpme.integrate.volume.rst", "_generated/splinepy.helpme.mapper.rst", "_generated/splinepy.helpme.mapper.Mapper.rst", "_generated/splinepy.helpme.mapper.Mapper.basis_function_derivatives.rst", "_generated/splinepy.helpme.mapper.Mapper.basis_gradient_and_support.rst", "_generated/splinepy.helpme.mapper.Mapper.basis_hessian_and_support.rst", "_generated/splinepy.helpme.mapper.Mapper.basis_laplacian_and_support.rst", "_generated/splinepy.helpme.mapper.Mapper.divergence.rst", "_generated/splinepy.helpme.mapper.Mapper.field_derivatives.rst", "_generated/splinepy.helpme.mapper.Mapper.gradient.rst", "_generated/splinepy.helpme.mapper.Mapper.hessian.rst", "_generated/splinepy.helpme.mapper.Mapper.laplacian.rst", "_generated/splinepy.helpme.multi_index.rst", "_generated/splinepy.helpme.multi_index.MultiIndex.rst", "_generated/splinepy.helpme.reparametrize.rst", "_generated/splinepy.helpme.reparametrize.flip_axes.rst", "_generated/splinepy.helpme.reparametrize.permute_parametric_axes.rst", "_generated/splinepy.helpme.visualize.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.clear.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.copy_valid_options.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.get.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.items.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.keys.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.pop.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.update.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.valid_keys.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.values.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.clear.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.copy_valid_options.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.get.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.items.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.keys.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.pop.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.update.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.valid_keys.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.values.rst", "_generated/splinepy.helpme.visualize.make_showable.rst", "_generated/splinepy.helpme.visualize.show.rst", "_generated/splinepy.io.rst", "_generated/splinepy.io.cats.rst", "_generated/splinepy.io.cats.export.rst", "_generated/splinepy.io.cats.load.rst", "_generated/splinepy.io.default.rst", "_generated/splinepy.io.default.export.rst", "_generated/splinepy.io.default.load.rst", "_generated/splinepy.io.gismo.rst", "_generated/splinepy.io.gismo.AdditionalBlocks.rst", "_generated/splinepy.io.gismo.AdditionalBlocks.add_assembly_options.rst", "_generated/splinepy.io.gismo.AdditionalBlocks.add_boundary_conditions.rst", "_generated/splinepy.io.gismo.AdditionalBlocks.add_function.rst", "_generated/splinepy.io.gismo.AdditionalBlocks.to_list.rst", "_generated/splinepy.io.gismo.export.rst", "_generated/splinepy.io.gismo.load.rst", "_generated/splinepy.io.iges.rst", "_generated/splinepy.io.iges.export.rst", "_generated/splinepy.io.iges.load.rst", "_generated/splinepy.io.ioutils.rst", "_generated/splinepy.io.ioutils.abs_fname.rst", "_generated/splinepy.io.ioutils.dict_to_spline.rst", "_generated/splinepy.io.ioutils.expand_tabs.rst", "_generated/splinepy.io.ioutils.form_lines.rst", "_generated/splinepy.io.ioutils.make_meaningful.rst", "_generated/splinepy.io.ioutils.next_line.rst", "_generated/splinepy.io.irit.rst", "_generated/splinepy.io.irit.export.rst", "_generated/splinepy.io.irit.load.rst", "_generated/splinepy.io.json.rst", "_generated/splinepy.io.json.export.rst", "_generated/splinepy.io.json.load.rst", "_generated/splinepy.io.mfem.rst", "_generated/splinepy.io.mfem.dof_mapping.rst", "_generated/splinepy.io.mfem.export.rst", "_generated/splinepy.io.mfem.export_cartesian.rst", "_generated/splinepy.io.mfem.load.rst", "_generated/splinepy.io.mfem.read_solution.rst", "_generated/splinepy.io.npz.rst", "_generated/splinepy.io.npz.export.rst", "_generated/splinepy.io.npz.load.rst", "_generated/splinepy.io.svg.rst", "_generated/splinepy.io.svg.export.rst", "_generated/splinepy.microstructure.rst", "_generated/splinepy.microstructure.microstructure.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.create.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.deformation_function.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.microtile.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.parameter_sensitivity_function.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.parametrization_function.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.show.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.tiling.rst", "_generated/splinepy.microstructure.tiles.rst", "_generated/splinepy.microstructure.tiles.armadillo.rst", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.rst", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.check_params.rst", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.create_tile.rst", "_generated/splinepy.microstructure.tiles.by_dim.rst", "_generated/splinepy.microstructure.tiles.chi.rst", "_generated/splinepy.microstructure.tiles.chi.Chi.rst", "_generated/splinepy.microstructure.tiles.chi.Chi.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.chi.Chi.check_params.rst", "_generated/splinepy.microstructure.tiles.chi.Chi.create_tile.rst", "_generated/splinepy.microstructure.tiles.cross_2d.rst", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.rst", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.check_params.rst", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.create_tile.rst", "_generated/splinepy.microstructure.tiles.cross_3d.rst", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.rst", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.check_params.rst", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.create_tile.rst", "_generated/splinepy.microstructure.tiles.cross_3d_linear.rst", "_generated/splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.rst", "_generated/splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_params.rst", "_generated/splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.create_tile.rst", "_generated/splinepy.microstructure.tiles.cube_void.rst", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.rst", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.check_params.rst", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.create_tile.rst", "_generated/splinepy.microstructure.tiles.double_lattice.rst", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.rst", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_params.rst", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.create_tile.rst", "_generated/splinepy.microstructure.tiles.ellips_v_oid.rst", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.rst", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_params.rst", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.create_tile.rst", "_generated/splinepy.microstructure.tiles.everything.rst", "_generated/splinepy.microstructure.tiles.get.rst", "_generated/splinepy.microstructure.tiles.hollow_cube.rst", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.rst", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.check_params.rst", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.create_tile.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_params.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.create_tile.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_params.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.closing_tile.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.create_tile.rst", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.rst", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.rst", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_params.rst", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.create_tile.rst", "_generated/splinepy.microstructure.tiles.show.rst", "_generated/splinepy.microstructure.tiles.snappy.rst", "_generated/splinepy.microstructure.tiles.snappy.Snappy.rst", "_generated/splinepy.microstructure.tiles.snappy.Snappy.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.snappy.Snappy.check_params.rst", "_generated/splinepy.microstructure.tiles.snappy.Snappy.create_tile.rst", "_generated/splinepy.microstructure.tiles.tile_base.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.check_params.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.create_tile.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.dim.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.evaluation_points.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.para_dim.rst", "_generated/splinepy.multipatch.rst", "_generated/splinepy.multipatch.Multipatch.rst", "_generated/splinepy.multipatch.Multipatch.add_fields.rst", "_generated/splinepy.multipatch.Multipatch.boundaries.rst", "_generated/splinepy.multipatch.Multipatch.boundaries_from_continuity.rst", "_generated/splinepy.multipatch.Multipatch.boundary_from_function.rst", "_generated/splinepy.multipatch.Multipatch.boundary_multipatch.rst", "_generated/splinepy.multipatch.Multipatch.boundary_patch_ids.rst", "_generated/splinepy.multipatch.Multipatch.clear.rst", "_generated/splinepy.multipatch.Multipatch.combine_boundaries.rst", "_generated/splinepy.multipatch.Multipatch.control_point_offsets.rst", "_generated/splinepy.multipatch.Multipatch.determine_interfaces.rst", "_generated/splinepy.multipatch.Multipatch.dim.rst", "_generated/splinepy.multipatch.Multipatch.evaluate.rst", "_generated/splinepy.multipatch.Multipatch.extract.rst", "_generated/splinepy.multipatch.Multipatch.fields.rst", "_generated/splinepy.multipatch.Multipatch.get_interfaces.rst", "_generated/splinepy.multipatch.Multipatch.interface_orientations.rst", "_generated/splinepy.multipatch.Multipatch.interfaces.rst", "_generated/splinepy.multipatch.Multipatch.para_dim.rst", "_generated/splinepy.multipatch.Multipatch.patches.rst", "_generated/splinepy.multipatch.Multipatch.sample.rst", "_generated/splinepy.multipatch.Multipatch.set_boundary.rst", "_generated/splinepy.multipatch.Multipatch.set_interfaces.rst", "_generated/splinepy.multipatch.Multipatch.show.rst", "_generated/splinepy.multipatch.Multipatch.show_options.rst", "_generated/splinepy.multipatch.Multipatch.showable.rst", "_generated/splinepy.multipatch.Multipatch.spline_data.rst", "_generated/splinepy.multipatch.Multipatch.sub_multipatch.rst", "_generated/splinepy.multipatch.Multipatch.sub_patch_centers.rst", "_generated/splinepy.nurbs.rst", "_generated/splinepy.nurbs.NURBS.rst", "_generated/splinepy.nurbs.NURBS.basis.rst", "_generated/splinepy.nurbs.NURBS.basis_and_support.rst", "_generated/splinepy.nurbs.NURBS.basis_derivative.rst", "_generated/splinepy.nurbs.NURBS.basis_derivative_and_support.rst", "_generated/splinepy.nurbs.NURBS.clear.rst", "_generated/splinepy.nurbs.NURBS.copy.rst", "_generated/splinepy.nurbs.NURBS.current_core_properties.rst", "_generated/splinepy.nurbs.NURBS.derivative.rst", "_generated/splinepy.nurbs.NURBS.elevate_degrees.rst", "_generated/splinepy.nurbs.NURBS.evaluate.rst", "_generated/splinepy.nurbs.NURBS.export.rst", "_generated/splinepy.nurbs.NURBS.extract_bezier_patches.rst", "_generated/splinepy.nurbs.NURBS.greville_abscissae.rst", "_generated/splinepy.nurbs.NURBS.insert_knots.rst", "_generated/splinepy.nurbs.NURBS.jacobian.rst", "_generated/splinepy.nurbs.NURBS.knot_insertion_matrix.rst", "_generated/splinepy.nurbs.NURBS.mapper.rst", "_generated/splinepy.nurbs.NURBS.normalize_knot_vectors.rst", "_generated/splinepy.nurbs.NURBS.nurbs.rst", "_generated/splinepy.nurbs.NURBS.proximities.rst", "_generated/splinepy.nurbs.NURBS.reduce_degrees.rst", "_generated/splinepy.nurbs.NURBS.remove_knots.rst", "_generated/splinepy.nurbs.NURBS.sample.rst", "_generated/splinepy.nurbs.NURBS.show.rst", "_generated/splinepy.nurbs.NURBS.showable.rst", "_generated/splinepy.nurbs.NURBS.support.rst", "_generated/splinepy.nurbs.NURBS.todict.rst", "_generated/splinepy.nurbs.NURBS.uniform_refine.rst", "_generated/splinepy.rational_bezier.rst", "_generated/splinepy.rational_bezier.RationalBezier.rst", "_generated/splinepy.rational_bezier.RationalBezier.basis.rst", "_generated/splinepy.rational_bezier.RationalBezier.basis_and_support.rst", "_generated/splinepy.rational_bezier.RationalBezier.basis_derivative.rst", "_generated/splinepy.rational_bezier.RationalBezier.basis_derivative_and_support.rst", "_generated/splinepy.rational_bezier.RationalBezier.clear.rst", "_generated/splinepy.rational_bezier.RationalBezier.compose.rst", "_generated/splinepy.rational_bezier.RationalBezier.composition_derivative.rst", "_generated/splinepy.rational_bezier.RationalBezier.copy.rst", "_generated/splinepy.rational_bezier.RationalBezier.current_core_properties.rst", "_generated/splinepy.rational_bezier.RationalBezier.derivative.rst", "_generated/splinepy.rational_bezier.RationalBezier.derivative_spline.rst", "_generated/splinepy.rational_bezier.RationalBezier.elevate_degrees.rst", "_generated/splinepy.rational_bezier.RationalBezier.evaluate.rst", "_generated/splinepy.rational_bezier.RationalBezier.export.rst", "_generated/splinepy.rational_bezier.RationalBezier.extract_dim.rst", "_generated/splinepy.rational_bezier.RationalBezier.greville_abscissae.rst", "_generated/splinepy.rational_bezier.RationalBezier.jacobian.rst", "_generated/splinepy.rational_bezier.RationalBezier.mapper.rst", "_generated/splinepy.rational_bezier.RationalBezier.nurbs.rst", "_generated/splinepy.rational_bezier.RationalBezier.proximities.rst", "_generated/splinepy.rational_bezier.RationalBezier.rationalbezier.rst", "_generated/splinepy.rational_bezier.RationalBezier.reduce_degrees.rst", "_generated/splinepy.rational_bezier.RationalBezier.sample.rst", "_generated/splinepy.rational_bezier.RationalBezier.show.rst", "_generated/splinepy.rational_bezier.RationalBezier.showable.rst", "_generated/splinepy.rational_bezier.RationalBezier.split.rst", "_generated/splinepy.rational_bezier.RationalBezier.support.rst", "_generated/splinepy.rational_bezier.RationalBezier.todict.rst", "_generated/splinepy.settings.rst", "_generated/splinepy.settings.CHECK_BOUNDS.rst", "_generated/splinepy.settings.NAME_TO_TYPE.rst", "_generated/splinepy.settings.NTHREADS.rst", "_generated/splinepy.settings.TOLERANCE.rst", "_generated/splinepy.spline.rst", "_generated/splinepy.spline.RequiredProperties.rst", "_generated/splinepy.spline.RequiredProperties.intersection.rst", "_generated/splinepy.spline.RequiredProperties.of.rst", "_generated/splinepy.spline.RequiredProperties.union.rst", "_generated/splinepy.spline.Spline.rst", "_generated/splinepy.spline.Spline.basis.rst", "_generated/splinepy.spline.Spline.basis_and_support.rst", "_generated/splinepy.spline.Spline.basis_derivative.rst", "_generated/splinepy.spline.Spline.basis_derivative_and_support.rst", "_generated/splinepy.spline.Spline.check.rst", "_generated/splinepy.spline.Spline.clear.rst", "_generated/splinepy.spline.Spline.control_mesh_resolutions.rst", "_generated/splinepy.spline.Spline.control_point_bounds.rst", "_generated/splinepy.spline.Spline.control_points.rst", "_generated/splinepy.spline.Spline.copy.rst", "_generated/splinepy.spline.Spline.cps.rst", "_generated/splinepy.spline.Spline.create.rst", "_generated/splinepy.spline.Spline.current_core_properties.rst", "_generated/splinepy.spline.Spline.degrees.rst", "_generated/splinepy.spline.Spline.derivative.rst", "_generated/splinepy.spline.Spline.dim.rst", "_generated/splinepy.spline.Spline.ds.rst", "_generated/splinepy.spline.Spline.elevate_degrees.rst", "_generated/splinepy.spline.Spline.evaluate.rst", "_generated/splinepy.spline.Spline.export.rst", "_generated/splinepy.spline.Spline.extract.rst", "_generated/splinepy.spline.Spline.greville_abscissae.rst", "_generated/splinepy.spline.Spline.has_knot_vectors.rst", "_generated/splinepy.spline.Spline.integrate.rst", "_generated/splinepy.spline.Spline.is_rational.rst", "_generated/splinepy.spline.Spline.jacobian.rst", "_generated/splinepy.spline.Spline.knot_multiplicities.rst", "_generated/splinepy.spline.Spline.knot_vectors.rst", "_generated/splinepy.spline.Spline.kvs.rst", "_generated/splinepy.spline.Spline.mapper.rst", "_generated/splinepy.spline.Spline.multi_index.rst", "_generated/splinepy.spline.Spline.name.rst", "_generated/splinepy.spline.Spline.para_dim.rst", "_generated/splinepy.spline.Spline.parametric_bounds.rst", "_generated/splinepy.spline.Spline.proximities.rst", "_generated/splinepy.spline.Spline.reduce_degrees.rst", "_generated/splinepy.spline.Spline.required_properties.rst", "_generated/splinepy.spline.Spline.sample.rst", "_generated/splinepy.spline.Spline.show.rst", "_generated/splinepy.spline.Spline.show_options.rst", "_generated/splinepy.spline.Spline.showable.rst", "_generated/splinepy.spline.Spline.spline_data.rst", "_generated/splinepy.spline.Spline.support.rst", "_generated/splinepy.spline.Spline.todict.rst", "_generated/splinepy.spline.Spline.unique_knots.rst", "_generated/splinepy.spline.Spline.weights.rst", "_generated/splinepy.spline.Spline.whatami.rst", "_generated/splinepy.spline.Spline.ws.rst", "_generated/splinepy.splinepy_core.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.dim.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.len.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.set_row.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.set_rows.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.sync.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.sync_rows.rst", "_generated/splinepy.splinepy_core.KnotVector.rst", "_generated/splinepy.splinepy_core.KnotVector.find_span.rst", "_generated/splinepy.splinepy_core.KnotVector.multiplicities.rst", "_generated/splinepy.splinepy_core.KnotVector.numpy.rst", "_generated/splinepy.splinepy_core.KnotVector.scale.rst", "_generated/splinepy.splinepy_core.KnotVector.unique.rst", "_generated/splinepy.splinepy_core.ParameterSpace.rst", "_generated/splinepy.splinepy_core.ParameterSpace.copy.rst", "_generated/splinepy.splinepy_core.ParameterSpace.unique_knots.rst", "_generated/splinepy.splinepy_core.PyMultipatch.rst", "_generated/splinepy.splinepy_core.PyMultipatch.add_fields.rst", "_generated/splinepy.splinepy_core.PyMultipatch.boundary_multipatch.rst", "_generated/splinepy.splinepy_core.PyMultipatch.boundary_patch_ids.rst", "_generated/splinepy.splinepy_core.PyMultipatch.clear.rst", "_generated/splinepy.splinepy_core.PyMultipatch.control_point_offsets.rst", "_generated/splinepy.splinepy_core.PyMultipatch.control_points.rst", "_generated/splinepy.splinepy_core.PyMultipatch.dim.rst", "_generated/splinepy.splinepy_core.PyMultipatch.evaluate.rst", "_generated/splinepy.splinepy_core.PyMultipatch.fields.rst", "_generated/splinepy.splinepy_core.PyMultipatch.get_interfaces.rst", "_generated/splinepy.splinepy_core.PyMultipatch.interface_orientations.rst", "_generated/splinepy.splinepy_core.PyMultipatch.n_default_threads.rst", "_generated/splinepy.splinepy_core.PyMultipatch.name.rst", "_generated/splinepy.splinepy_core.PyMultipatch.para_dim.rst", "_generated/splinepy.splinepy_core.PyMultipatch.patches.rst", "_generated/splinepy.splinepy_core.PyMultipatch.same_parametric_bounds.rst", "_generated/splinepy.splinepy_core.PyMultipatch.sample.rst", "_generated/splinepy.splinepy_core.PyMultipatch.set_interfaces.rst", "_generated/splinepy.splinepy_core.PyMultipatch.sub_multipatch.rst", "_generated/splinepy.splinepy_core.PyMultipatch.sub_patch_centers.rst", "_generated/splinepy.splinepy_core.PyMultipatch.tolerance.rst", "_generated/splinepy.splinepy_core.PyMultipatch.whatami.rst", "_generated/splinepy.splinepy_core.PySpline.rst", "_generated/splinepy.splinepy_core.PySpline.basis.rst", "_generated/splinepy.splinepy_core.PySpline.basis_and_support.rst", "_generated/splinepy.splinepy_core.PySpline.basis_derivative.rst", "_generated/splinepy.splinepy_core.PySpline.basis_derivative_and_support.rst", "_generated/splinepy.splinepy_core.PySpline.control_mesh_resolutions.rst", "_generated/splinepy.splinepy_core.PySpline.current_core_properties.rst", "_generated/splinepy.splinepy_core.PySpline.derivative.rst", "_generated/splinepy.splinepy_core.PySpline.dim.rst", "_generated/splinepy.splinepy_core.PySpline.elevate_degrees.rst", "_generated/splinepy.splinepy_core.PySpline.evaluate.rst", "_generated/splinepy.splinepy_core.PySpline.has_knot_vectors.rst", "_generated/splinepy.splinepy_core.PySpline.is_rational.rst", "_generated/splinepy.splinepy_core.PySpline.jacobian.rst", "_generated/splinepy.splinepy_core.PySpline.name.rst", "_generated/splinepy.splinepy_core.PySpline.para_dim.rst", "_generated/splinepy.splinepy_core.PySpline.parametric_bounds.rst", "_generated/splinepy.splinepy_core.PySpline.proximities.rst", "_generated/splinepy.splinepy_core.PySpline.reduce_degrees.rst", "_generated/splinepy.splinepy_core.PySpline.sample.rst", "_generated/splinepy.splinepy_core.PySpline.support.rst", "_generated/splinepy.splinepy_core.PySpline.whatami.rst", "_generated/splinepy.splinepy_core.WeightPointers.rst", "_generated/splinepy.splinepy_core.WeightPointers.dim.rst", "_generated/splinepy.splinepy_core.WeightPointers.len.rst", "_generated/splinepy.splinepy_core.WeightPointers.set_row.rst", "_generated/splinepy.splinepy_core.WeightPointers.set_rows.rst", "_generated/splinepy.splinepy_core.WeightPointers.sync.rst", "_generated/splinepy.splinepy_core.WeightPointers.sync_rows.rst", "_generated/splinepy.splinepy_core.add.rst", "_generated/splinepy.splinepy_core.annul_core.rst", "_generated/splinepy.splinepy_core.bezier_extraction_matrix.rst", "_generated/splinepy.splinepy_core.boundaries_from_continuity.rst", "_generated/splinepy.splinepy_core.boundary_centers.rst", "_generated/splinepy.splinepy_core.build_type.rst", "_generated/splinepy.splinepy_core.compose.rst", "_generated/splinepy.splinepy_core.compose_sensitivities.rst", "_generated/splinepy.splinepy_core.composition_derivative.rst", "_generated/splinepy.splinepy_core.core_id.rst", "_generated/splinepy.splinepy_core.core_ref_count.rst", "_generated/splinepy.splinepy_core.derivative_spline.rst", "_generated/splinepy.splinepy_core.export_iges.rst", "_generated/splinepy.splinepy_core.extract_all_boundary_splines.rst", "_generated/splinepy.splinepy_core.extract_bezier_patches.rst", "_generated/splinepy.splinepy_core.extract_boundaries.rst", "_generated/splinepy.splinepy_core.extract_dim.rst", "_generated/splinepy.splinepy_core.global_knot_insertion_matrix.rst", "_generated/splinepy.splinepy_core.has_core.rst", "_generated/splinepy.splinepy_core.insert_knots.rst", "_generated/splinepy.splinepy_core.interfaces_from_boundary_centers.rst", "_generated/splinepy.splinepy_core.is_minimal.rst", "_generated/splinepy.splinepy_core.knot_insertion_matrix.rst", "_generated/splinepy.splinepy_core.multiply.rst", "_generated/splinepy.splinepy_core.null_spline.rst", "_generated/splinepy.splinepy_core.read_iges.rst", "_generated/splinepy.splinepy_core.remove_knots.rst", "_generated/splinepy.splinepy_core.same_spline_with_knot_vectors.rst", "_generated/splinepy.splinepy_core.split.rst", "_generated/splinepy.to_derived.rst", "_generated/splinepy.utils.rst", "_generated/splinepy.utils.data.rst", "_generated/splinepy.utils.data.MultipatchData.rst", "_generated/splinepy.utils.data.MultipatchData.as_arrow.rst", "_generated/splinepy.utils.data.MultipatchData.as_scalar.rst", "_generated/splinepy.utils.data.MultipatchData.clear.rst", "_generated/splinepy.utils.data.MultipatchData.get.rst", "_generated/splinepy.utils.data.MultipatchData.items.rst", "_generated/splinepy.utils.data.MultipatchData.keys.rst", "_generated/splinepy.utils.data.MultipatchData.pop.rst", "_generated/splinepy.utils.data.MultipatchData.update.rst", "_generated/splinepy.utils.data.MultipatchData.values.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.all.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.any.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.argmax.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.argmin.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.argpartition.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.argsort.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.astype.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.byteswap.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.choose.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.clip.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.compress.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.conj.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.conjugate.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.copy.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.cumprod.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.cumsum.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.diagonal.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.dot.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.dump.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.dumps.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.fill.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.flatten.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.full_row_indices.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.getfield.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.item.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.max.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.mean.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.min.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.nonzero.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.partition.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.prod.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.put.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.ravel.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.repeat.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.reshape.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.resize.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.round.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.row_indices.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.searchsorted.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.setfield.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.setflags.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.sort.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.squeeze.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.std.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.sum.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.swapaxes.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.take.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.to_device.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.tobytes.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.tofile.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.tolist.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.tostring.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.trace.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.transpose.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.var.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.view.rst", "_generated/splinepy.utils.data.SplineData.rst", "_generated/splinepy.utils.data.SplineData.as_arrow.rst", "_generated/splinepy.utils.data.SplineData.as_scalar.rst", "_generated/splinepy.utils.data.SplineData.clear.rst", "_generated/splinepy.utils.data.SplineData.get.rst", "_generated/splinepy.utils.data.SplineData.items.rst", "_generated/splinepy.utils.data.SplineData.keys.rst", "_generated/splinepy.utils.data.SplineData.pop.rst", "_generated/splinepy.utils.data.SplineData.update.rst", "_generated/splinepy.utils.data.SplineData.values.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.arrow_data_only.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.as_vertex_data.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.data.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.function.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.has_evaluate.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.has_function.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.has_locations.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.is_spline.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.locations.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.parametric_bounds.rst", "_generated/splinepy.utils.data.cartesian_product.rst", "_generated/splinepy.utils.data.enforce_contiguous.rst", "_generated/splinepy.utils.data.enforce_contiguous_values.rst", "_generated/splinepy.utils.data.make_matrix.rst", "_generated/splinepy.utils.data.uniform_query.rst", "_generated/splinepy.utils.log.rst", "_generated/splinepy.utils.log.configure.rst", "_generated/splinepy.utils.log.debug.rst", "_generated/splinepy.utils.log.error.rst", "_generated/splinepy.utils.log.info.rst", "_generated/splinepy.utils.log.prepend_log.rst", "_generated/splinepy.utils.log.warning.rst", "api_reference.rst", "index.rst", "python_api.rst", "spline_intro.rst"], "indexentries": {"abs_fname() (in module splinepy.io.ioutils)": [[261, "splinepy.io.ioutils.abs_fname", false]], "add() (in module splinepy.splinepy_core)": [[591, "splinepy.splinepy_core.add", false]], "add_assembly_options() (splinepy.io.gismo.additionalblocks method)": [[251, "splinepy.io.gismo.AdditionalBlocks.add_assembly_options", false]], "add_boundary_conditions() (splinepy.io.gismo.additionalblocks method)": [[252, "splinepy.io.gismo.AdditionalBlocks.add_boundary_conditions", false]], "add_fields() (splinepy.multipatch.multipatch method)": [[375, "splinepy.multipatch.Multipatch.add_fields", false]], "add_fields() (splinepy.splinepy_core.pymultipatch method)": [[540, "splinepy.splinepy_core.PyMultipatch.add_fields", false]], "add_function() (splinepy.io.gismo.additionalblocks method)": [[253, "splinepy.io.gismo.AdditionalBlocks.add_function", false]], "additionalblocks (class in splinepy.io.gismo)": [[250, "splinepy.io.gismo.AdditionalBlocks", false]], "all() (splinepy.utils.data.physicalspacearray method)": [[634, "splinepy.utils.data.PhysicalSpaceArray.all", false]], "annul_core() (in module splinepy.splinepy_core)": [[592, "splinepy.splinepy_core.annul_core", false]], "any() (splinepy.utils.data.physicalspacearray method)": [[635, "splinepy.utils.data.PhysicalSpaceArray.any", false]], "arc() (in module splinepy.helpme.create)": [[138, "splinepy.helpme.create.arc", false]], "argmax() (splinepy.utils.data.physicalspacearray method)": [[636, "splinepy.utils.data.PhysicalSpaceArray.argmax", false]], "argmin() (splinepy.utils.data.physicalspacearray method)": [[637, "splinepy.utils.data.PhysicalSpaceArray.argmin", false]], "argpartition() (splinepy.utils.data.physicalspacearray method)": [[638, "splinepy.utils.data.PhysicalSpaceArray.argpartition", false]], "argsort() (splinepy.utils.data.physicalspacearray method)": [[639, "splinepy.utils.data.PhysicalSpaceArray.argsort", false]], "armadillo (class in splinepy.microstructure.tiles.armadillo)": [[296, "splinepy.microstructure.tiles.armadillo.Armadillo", false]], "arrow_data() (in module splinepy.helpme.extract)": [[170, "splinepy.helpme.extract.arrow_data", false]], "arrow_data() (splinepy.helpme.extract.extractor method)": [[157, "splinepy.helpme.extract.Extractor.arrow_data", false]], "arrow_data_only (splinepy.utils.data.splinedataadaptor attribute)": [[701, "splinepy.utils.data.SplineDataAdaptor.arrow_data_only", false]], "as_arrow() (splinepy.utils.data.multipatchdata method)": [[624, "splinepy.utils.data.MultipatchData.as_arrow", false]], "as_arrow() (splinepy.utils.data.splinedata method)": [[691, "splinepy.utils.data.SplineData.as_arrow", false]], "as_scalar() (splinepy.utils.data.multipatchdata method)": [[625, "splinepy.utils.data.MultipatchData.as_scalar", false]], "as_scalar() (splinepy.utils.data.splinedata method)": [[692, "splinepy.utils.data.SplineData.as_scalar", false]], "as_vertex_data() (splinepy.utils.data.splinedataadaptor method)": [[702, "splinepy.utils.data.SplineDataAdaptor.as_vertex_data", false]], "astype() (splinepy.utils.data.physicalspacearray method)": [[640, "splinepy.utils.data.PhysicalSpaceArray.astype", false]], "bases() (in module splinepy.helpme.extract)": [[171, "splinepy.helpme.extract.bases", false]], "bases() (splinepy.helpme.extract.extractor method)": [[158, "splinepy.helpme.extract.Extractor.bases", false]], "basis() (splinepy.bezier.bezier method)": [[4, "splinepy.bezier.Bezier.basis", false]], "basis() (splinepy.bezier.bezierbase method)": [[35, "splinepy.bezier.BezierBase.basis", false]], "basis() (splinepy.bspline.bspline method)": [[63, "splinepy.bspline.BSpline.basis", false]], "basis() (splinepy.bspline.bsplinebase method)": [[93, "splinepy.bspline.BSplineBase.basis", false]], "basis() (splinepy.nurbs.nurbs method)": [[405, "splinepy.nurbs.NURBS.basis", false]], "basis() (splinepy.rational_bezier.rationalbezier method)": [[435, "splinepy.rational_bezier.RationalBezier.basis", false]], "basis() (splinepy.spline.spline method)": [[474, "splinepy.spline.Spline.basis", false]], "basis() (splinepy.splinepy_core.pyspline method)": [[563, "splinepy.splinepy_core.PySpline.basis", false]], "basis_and_support() (splinepy.bezier.bezier method)": [[5, "splinepy.bezier.Bezier.basis_and_support", false]], "basis_and_support() (splinepy.bezier.bezierbase method)": [[36, "splinepy.bezier.BezierBase.basis_and_support", false]], "basis_and_support() (splinepy.bspline.bspline method)": [[64, "splinepy.bspline.BSpline.basis_and_support", false]], "basis_and_support() (splinepy.bspline.bsplinebase method)": [[94, "splinepy.bspline.BSplineBase.basis_and_support", false]], "basis_and_support() (splinepy.nurbs.nurbs method)": [[406, "splinepy.nurbs.NURBS.basis_and_support", false]], "basis_and_support() (splinepy.rational_bezier.rationalbezier method)": [[436, "splinepy.rational_bezier.RationalBezier.basis_and_support", false]], "basis_and_support() (splinepy.spline.spline method)": [[475, "splinepy.spline.Spline.basis_and_support", false]], "basis_and_support() (splinepy.splinepy_core.pyspline method)": [[564, "splinepy.splinepy_core.PySpline.basis_and_support", false]], "basis_derivative() (splinepy.bezier.bezier method)": [[6, "splinepy.bezier.Bezier.basis_derivative", false]], "basis_derivative() (splinepy.bezier.bezierbase method)": [[37, "splinepy.bezier.BezierBase.basis_derivative", false]], "basis_derivative() (splinepy.bspline.bspline method)": [[65, "splinepy.bspline.BSpline.basis_derivative", false]], "basis_derivative() (splinepy.bspline.bsplinebase method)": [[95, "splinepy.bspline.BSplineBase.basis_derivative", false]], "basis_derivative() (splinepy.nurbs.nurbs method)": [[407, "splinepy.nurbs.NURBS.basis_derivative", false]], "basis_derivative() (splinepy.rational_bezier.rationalbezier method)": [[437, "splinepy.rational_bezier.RationalBezier.basis_derivative", false]], "basis_derivative() (splinepy.spline.spline method)": [[476, "splinepy.spline.Spline.basis_derivative", false]], "basis_derivative() (splinepy.splinepy_core.pyspline method)": [[565, "splinepy.splinepy_core.PySpline.basis_derivative", false]], "basis_derivative_and_support() (splinepy.bezier.bezier method)": [[7, "splinepy.bezier.Bezier.basis_derivative_and_support", false]], "basis_derivative_and_support() (splinepy.bezier.bezierbase method)": [[38, "splinepy.bezier.BezierBase.basis_derivative_and_support", false]], "basis_derivative_and_support() (splinepy.bspline.bspline method)": [[66, "splinepy.bspline.BSpline.basis_derivative_and_support", false]], "basis_derivative_and_support() (splinepy.bspline.bsplinebase method)": [[96, "splinepy.bspline.BSplineBase.basis_derivative_and_support", false]], "basis_derivative_and_support() (splinepy.nurbs.nurbs method)": [[408, "splinepy.nurbs.NURBS.basis_derivative_and_support", false]], "basis_derivative_and_support() (splinepy.rational_bezier.rationalbezier method)": [[438, "splinepy.rational_bezier.RationalBezier.basis_derivative_and_support", false]], "basis_derivative_and_support() (splinepy.spline.spline method)": [[477, "splinepy.spline.Spline.basis_derivative_and_support", false]], "basis_derivative_and_support() (splinepy.splinepy_core.pyspline method)": [[566, "splinepy.splinepy_core.PySpline.basis_derivative_and_support", false]], "basis_function_derivatives() (splinepy.helpme.mapper.mapper method)": [[205, "splinepy.helpme.mapper.Mapper.basis_function_derivatives", false]], "basis_gradient_and_support() (splinepy.helpme.mapper.mapper method)": [[206, "splinepy.helpme.mapper.Mapper.basis_gradient_and_support", false]], "basis_hessian_and_support() (splinepy.helpme.mapper.mapper method)": [[207, "splinepy.helpme.mapper.Mapper.basis_hessian_and_support", false]], "basis_laplacian_and_support() (splinepy.helpme.mapper.mapper method)": [[208, "splinepy.helpme.mapper.Mapper.basis_laplacian_and_support", false]], "bezier (class in splinepy.bezier)": [[3, "splinepy.bezier.Bezier", false]], "bezier (splinepy.bezier.bezier property)": [[8, "splinepy.bezier.Bezier.bezier", false]], "bezier_extraction_matrix() (in module splinepy.splinepy_core)": [[593, "splinepy.splinepy_core.bezier_extraction_matrix", false]], "bezierbase (class in splinepy.bezier)": [[34, "splinepy.bezier.BezierBase", false]], "beziers() (splinepy.helpme.extract.extractor method)": [[159, "splinepy.helpme.extract.Extractor.beziers", false]], "boundaries (splinepy.multipatch.multipatch property)": [[376, "splinepy.multipatch.Multipatch.boundaries", false]], "boundaries() (in module splinepy.helpme.extract)": [[172, "splinepy.helpme.extract.boundaries", false]], "boundaries() (splinepy.helpme.extract.extractor method)": [[160, "splinepy.helpme.extract.Extractor.boundaries", false]], "boundaries_from_continuity() (in module splinepy.splinepy_core)": [[594, "splinepy.splinepy_core.boundaries_from_continuity", false]], "boundaries_from_continuity() (splinepy.multipatch.multipatch method)": [[377, "splinepy.multipatch.Multipatch.boundaries_from_continuity", false]], "boundary_centers() (in module splinepy.splinepy_core)": [[595, "splinepy.splinepy_core.boundary_centers", false]], "boundary_from_function() (splinepy.multipatch.multipatch method)": [[378, "splinepy.multipatch.Multipatch.boundary_from_function", false]], "boundary_multipatch() (splinepy.multipatch.multipatch method)": [[379, "splinepy.multipatch.Multipatch.boundary_multipatch", false]], "boundary_multipatch() (splinepy.splinepy_core.pymultipatch method)": [[541, "splinepy.splinepy_core.PyMultipatch.boundary_multipatch", false]], "boundary_patch_ids() (splinepy.multipatch.multipatch method)": [[380, "splinepy.multipatch.Multipatch.boundary_patch_ids", false]], "boundary_patch_ids() (splinepy.splinepy_core.pymultipatch method)": [[542, "splinepy.splinepy_core.PyMultipatch.boundary_patch_ids", false]], "box() (in module splinepy.helpme.create)": [[139, "splinepy.helpme.create.box", false]], "bspline (class in splinepy.bspline)": [[62, "splinepy.bspline.BSpline", false]], "bspline (splinepy.bezier.bezier property)": [[9, "splinepy.bezier.Bezier.bspline", false]], "bspline (splinepy.bspline.bspline property)": [[67, "splinepy.bspline.BSpline.bspline", false]], "bsplinebase (class in splinepy.bspline)": [[92, "splinepy.bspline.BSplineBase", false]], "build_type() (in module splinepy.splinepy_core)": [[596, "splinepy.splinepy_core.build_type", false]], "by_dim() (in module splinepy.microstructure.tiles)": [[300, "splinepy.microstructure.tiles.by_dim", false]], "byteswap() (splinepy.utils.data.physicalspacearray method)": [[641, "splinepy.utils.data.PhysicalSpaceArray.byteswap", false]], "cartesian_product() (in module splinepy.utils.data)": [[711, "splinepy.utils.data.cartesian_product", false]], "check (splinepy.spline.spline property)": [[478, "splinepy.spline.Spline.check", false]], "check_bounds (in module splinepy.settings)": [[464, "splinepy.settings.CHECK_BOUNDS", false]], "check_param_derivatives() (splinepy.microstructure.tiles.armadillo.armadillo method)": [[297, "splinepy.microstructure.tiles.armadillo.Armadillo.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.chi.chi method)": [[303, "splinepy.microstructure.tiles.chi.Chi.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.cross_2d.cross2d method)": [[308, "splinepy.microstructure.tiles.cross_2d.Cross2D.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.cross_3d.cross3d method)": [[313, "splinepy.microstructure.tiles.cross_3d.Cross3D.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.cross_3d_linear.cross3dlinear method)": [[318, "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.cube_void.cubevoid method)": [[323, "splinepy.microstructure.tiles.cube_void.CubeVoid.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.double_lattice.doublelattice method)": [[328, "splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.ellips_v_oid.ellipsvoid method)": [[333, "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.hollow_cube.hollowcube method)": [[340, "splinepy.microstructure.tiles.hollow_cube.HollowCube.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.hollow_octagon.hollowoctagon method)": [[345, "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.hollow_octagon_extrude.hollowoctagonextrude method)": [[350, "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.inverse_cross_3d.inversecross3d method)": [[356, "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.snappy.snappy method)": [[362, "splinepy.microstructure.tiles.snappy.Snappy.check_param_derivatives", false]], "check_param_derivatives() (splinepy.microstructure.tiles.tile_base.tilebase method)": [[367, "splinepy.microstructure.tiles.tile_base.TileBase.check_param_derivatives", false]], "check_params() (splinepy.microstructure.tiles.armadillo.armadillo method)": [[298, "splinepy.microstructure.tiles.armadillo.Armadillo.check_params", false]], "check_params() (splinepy.microstructure.tiles.chi.chi method)": [[304, "splinepy.microstructure.tiles.chi.Chi.check_params", false]], "check_params() (splinepy.microstructure.tiles.cross_2d.cross2d method)": [[309, "splinepy.microstructure.tiles.cross_2d.Cross2D.check_params", false]], "check_params() (splinepy.microstructure.tiles.cross_3d.cross3d method)": [[314, "splinepy.microstructure.tiles.cross_3d.Cross3D.check_params", false]], "check_params() (splinepy.microstructure.tiles.cross_3d_linear.cross3dlinear method)": [[319, "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_params", false]], "check_params() (splinepy.microstructure.tiles.cube_void.cubevoid method)": [[324, "splinepy.microstructure.tiles.cube_void.CubeVoid.check_params", false]], "check_params() (splinepy.microstructure.tiles.double_lattice.doublelattice method)": [[329, "splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_params", false]], "check_params() (splinepy.microstructure.tiles.ellips_v_oid.ellipsvoid method)": [[334, "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_params", false]], "check_params() (splinepy.microstructure.tiles.hollow_cube.hollowcube method)": [[341, "splinepy.microstructure.tiles.hollow_cube.HollowCube.check_params", false]], "check_params() (splinepy.microstructure.tiles.hollow_octagon.hollowoctagon method)": [[346, "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_params", false]], "check_params() (splinepy.microstructure.tiles.hollow_octagon_extrude.hollowoctagonextrude method)": [[351, "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_params", false]], "check_params() (splinepy.microstructure.tiles.inverse_cross_3d.inversecross3d method)": [[357, "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_params", false]], "check_params() (splinepy.microstructure.tiles.snappy.snappy method)": [[363, "splinepy.microstructure.tiles.snappy.Snappy.check_params", false]], "check_params() (splinepy.microstructure.tiles.tile_base.tilebase method)": [[368, "splinepy.microstructure.tiles.tile_base.TileBase.check_params", false]], "checker (class in splinepy.helpme.check)": [[126, "splinepy.helpme.check.Checker", false]], "chi (class in splinepy.microstructure.tiles.chi)": [[302, "splinepy.microstructure.tiles.chi.Chi", false]], "choose() (splinepy.utils.data.physicalspacearray method)": [[642, "splinepy.utils.data.PhysicalSpaceArray.choose", false]], "circle() (in module splinepy.helpme.create)": [[140, "splinepy.helpme.create.circle", false]], "clamped_knot_vectors() (in module splinepy.helpme.check)": [[129, "splinepy.helpme.check.clamped_knot_vectors", false]], "clamped_knot_vectors() (splinepy.helpme.check.checker method)": [[127, "splinepy.helpme.check.Checker.clamped_knot_vectors", false]], "clear() (splinepy.bezier.bezier method)": [[10, "splinepy.bezier.Bezier.clear", false]], "clear() (splinepy.bezier.bezierbase method)": [[39, "splinepy.bezier.BezierBase.clear", false]], "clear() (splinepy.bspline.bspline method)": [[68, "splinepy.bspline.BSpline.clear", false]], "clear() (splinepy.bspline.bsplinebase method)": [[97, "splinepy.bspline.BSplineBase.clear", false]], "clear() (splinepy.helpme.visualize.multipatchshowoption method)": [[221, "splinepy.helpme.visualize.MultipatchShowOption.clear", false]], "clear() (splinepy.helpme.visualize.splineshowoption method)": [[231, "splinepy.helpme.visualize.SplineShowOption.clear", false]], "clear() (splinepy.multipatch.multipatch method)": [[381, "splinepy.multipatch.Multipatch.clear", false]], "clear() (splinepy.nurbs.nurbs method)": [[409, "splinepy.nurbs.NURBS.clear", false]], "clear() (splinepy.rational_bezier.rationalbezier method)": [[439, "splinepy.rational_bezier.RationalBezier.clear", false]], "clear() (splinepy.spline.spline method)": [[479, "splinepy.spline.Spline.clear", false]], "clear() (splinepy.splinepy_core.pymultipatch method)": [[543, "splinepy.splinepy_core.PyMultipatch.clear", false]], "clear() (splinepy.utils.data.multipatchdata method)": [[626, "splinepy.utils.data.MultipatchData.clear", false]], "clear() (splinepy.utils.data.splinedata method)": [[693, "splinepy.utils.data.SplineData.clear", false]], "clip() (splinepy.utils.data.physicalspacearray method)": [[643, "splinepy.utils.data.PhysicalSpaceArray.clip", false]], "closing_tile() (splinepy.microstructure.tiles.hollow_octagon_extrude.hollowoctagonextrude method)": [[352, "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.closing_tile", false]], "combine_boundaries() (splinepy.multipatch.multipatch method)": [[382, "splinepy.multipatch.Multipatch.combine_boundaries", false]], "compose() (in module splinepy.splinepy_core)": [[597, "splinepy.splinepy_core.compose", false]], "compose() (splinepy.bezier.bezier method)": [[11, "splinepy.bezier.Bezier.compose", false]], "compose() (splinepy.bezier.bezierbase method)": [[40, "splinepy.bezier.BezierBase.compose", false]], "compose() (splinepy.rational_bezier.rationalbezier method)": [[440, "splinepy.rational_bezier.RationalBezier.compose", false]], "compose_sensitivities() (in module splinepy.splinepy_core)": [[598, "splinepy.splinepy_core.compose_sensitivities", false]], "composition_derivative() (in module splinepy.splinepy_core)": [[599, "splinepy.splinepy_core.composition_derivative", false]], "composition_derivative() (splinepy.bezier.bezier method)": [[12, "splinepy.bezier.Bezier.composition_derivative", false]], "composition_derivative() (splinepy.bezier.bezierbase method)": [[41, "splinepy.bezier.BezierBase.composition_derivative", false]], "composition_derivative() (splinepy.rational_bezier.rationalbezier method)": [[441, "splinepy.rational_bezier.RationalBezier.composition_derivative", false]], "compress() (splinepy.utils.data.physicalspacearray method)": [[644, "splinepy.utils.data.PhysicalSpaceArray.compress", false]], "compute_knot_vector() (in module splinepy.helpme.fit)": [[190, "splinepy.helpme.fit.compute_knot_vector", false]], "cone() (in module splinepy.helpme.create)": [[141, "splinepy.helpme.create.cone", false]], "configure() (in module splinepy.utils.log)": [[717, "splinepy.utils.log.configure", false]], "conj() (splinepy.utils.data.physicalspacearray method)": [[645, "splinepy.utils.data.PhysicalSpaceArray.conj", false]], "conjugate() (splinepy.utils.data.physicalspacearray method)": [[646, "splinepy.utils.data.PhysicalSpaceArray.conjugate", false]], "control_edges() (in module splinepy.helpme.extract)": [[173, "splinepy.helpme.extract.control_edges", false]], "control_edges() (splinepy.helpme.extract.extractor method)": [[161, "splinepy.helpme.extract.Extractor.control_edges", false]], "control_faces() (in module splinepy.helpme.extract)": [[174, "splinepy.helpme.extract.control_faces", false]], "control_faces() (splinepy.helpme.extract.extractor method)": [[162, "splinepy.helpme.extract.Extractor.control_faces", false]], "control_mesh() (in module splinepy.helpme.extract)": [[175, "splinepy.helpme.extract.control_mesh", false]], "control_mesh() (splinepy.helpme.extract.extractor method)": [[163, "splinepy.helpme.extract.Extractor.control_mesh", false]], "control_mesh_resolutions (splinepy.spline.spline property)": [[480, "splinepy.spline.Spline.control_mesh_resolutions", false]], "control_mesh_resolutions (splinepy.splinepy_core.pyspline property)": [[567, "splinepy.splinepy_core.PySpline.control_mesh_resolutions", false]], "control_point_bounds (splinepy.spline.spline property)": [[481, "splinepy.spline.Spline.control_point_bounds", false]], "control_point_offsets() (splinepy.multipatch.multipatch method)": [[383, "splinepy.multipatch.Multipatch.control_point_offsets", false]], "control_point_offsets() (splinepy.splinepy_core.pymultipatch method)": [[544, "splinepy.splinepy_core.PyMultipatch.control_point_offsets", false]], "control_points (splinepy.spline.spline property)": [[482, "splinepy.spline.Spline.control_points", false]], "control_points (splinepy.splinepy_core.pymultipatch property)": [[545, "splinepy.splinepy_core.PyMultipatch.control_points", false]], "control_points() (in module splinepy.helpme.extract)": [[176, "splinepy.helpme.extract.control_points", false]], "control_points() (splinepy.helpme.extract.extractor method)": [[164, "splinepy.helpme.extract.Extractor.control_points", false]], "control_volumes() (in module splinepy.helpme.extract)": [[177, "splinepy.helpme.extract.control_volumes", false]], "control_volumes() (splinepy.helpme.extract.extractor method)": [[165, "splinepy.helpme.extract.Extractor.control_volumes", false]], "controlpointpointers (class in splinepy.splinepy_core)": [[523, "splinepy.splinepy_core.ControlPointPointers", false]], "convert() (in module splinepy.cli)": [[121, "splinepy.cli.convert", false]], "copy() (splinepy.bezier.bezier method)": [[13, "splinepy.bezier.Bezier.copy", false]], "copy() (splinepy.bezier.bezierbase method)": [[42, "splinepy.bezier.BezierBase.copy", false]], "copy() (splinepy.bspline.bspline method)": [[69, "splinepy.bspline.BSpline.copy", false]], "copy() (splinepy.bspline.bsplinebase method)": [[98, "splinepy.bspline.BSplineBase.copy", false]], "copy() (splinepy.nurbs.nurbs method)": [[410, "splinepy.nurbs.NURBS.copy", false]], "copy() (splinepy.rational_bezier.rationalbezier method)": [[442, "splinepy.rational_bezier.RationalBezier.copy", false]], "copy() (splinepy.spline.spline method)": [[483, "splinepy.spline.Spline.copy", false]], "copy() (splinepy.splinepy_core.parameterspace method)": [[537, "splinepy.splinepy_core.ParameterSpace.copy", false]], "copy() (splinepy.utils.data.physicalspacearray method)": [[647, "splinepy.utils.data.PhysicalSpaceArray.copy", false]], "copy_valid_options() (splinepy.helpme.visualize.multipatchshowoption method)": [[222, "splinepy.helpme.visualize.MultipatchShowOption.copy_valid_options", false]], "copy_valid_options() (splinepy.helpme.visualize.splineshowoption method)": [[232, "splinepy.helpme.visualize.SplineShowOption.copy_valid_options", false]], "core_id() (in module splinepy.splinepy_core)": [[600, "splinepy.splinepy_core.core_id", false]], "core_ref_count() (in module splinepy.splinepy_core)": [[601, "splinepy.splinepy_core.core_ref_count", false]], "cps (splinepy.spline.spline property)": [[484, "splinepy.spline.Spline.cps", false]], "create (splinepy.spline.spline property)": [[485, "splinepy.spline.Spline.create", false]], "create() (splinepy.microstructure.microstructure.microstructure method)": [[287, "splinepy.microstructure.microstructure.Microstructure.create", false]], "create_tile() (splinepy.microstructure.tiles.armadillo.armadillo method)": [[299, "splinepy.microstructure.tiles.armadillo.Armadillo.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.chi.chi method)": [[305, "splinepy.microstructure.tiles.chi.Chi.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.cross_2d.cross2d method)": [[310, "splinepy.microstructure.tiles.cross_2d.Cross2D.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.cross_3d.cross3d method)": [[315, "splinepy.microstructure.tiles.cross_3d.Cross3D.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.cross_3d_linear.cross3dlinear method)": [[320, "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.cube_void.cubevoid method)": [[325, "splinepy.microstructure.tiles.cube_void.CubeVoid.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.double_lattice.doublelattice method)": [[330, "splinepy.microstructure.tiles.double_lattice.DoubleLattice.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.ellips_v_oid.ellipsvoid method)": [[335, "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.hollow_cube.hollowcube method)": [[342, "splinepy.microstructure.tiles.hollow_cube.HollowCube.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.hollow_octagon.hollowoctagon method)": [[347, "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.hollow_octagon_extrude.hollowoctagonextrude method)": [[353, "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.inverse_cross_3d.inversecross3d method)": [[358, "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.snappy.snappy method)": [[364, "splinepy.microstructure.tiles.snappy.Snappy.create_tile", false]], "create_tile() (splinepy.microstructure.tiles.tile_base.tilebase method)": [[369, "splinepy.microstructure.tiles.tile_base.TileBase.create_tile", false]], "creator (class in splinepy.helpme.create)": [[132, "splinepy.helpme.create.Creator", false]], "cross2d (class in splinepy.microstructure.tiles.cross_2d)": [[307, "splinepy.microstructure.tiles.cross_2d.Cross2D", false]], "cross3d (class in splinepy.microstructure.tiles.cross_3d)": [[312, "splinepy.microstructure.tiles.cross_3d.Cross3D", false]], "cross3dlinear (class in splinepy.microstructure.tiles.cross_3d_linear)": [[317, "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear", false]], "cubevoid (class in splinepy.microstructure.tiles.cube_void)": [[322, "splinepy.microstructure.tiles.cube_void.CubeVoid", false]], "cumprod() (splinepy.utils.data.physicalspacearray method)": [[648, "splinepy.utils.data.PhysicalSpaceArray.cumprod", false]], "cumsum() (splinepy.utils.data.physicalspacearray method)": [[649, "splinepy.utils.data.PhysicalSpaceArray.cumsum", false]], "current_core_properties() (splinepy.bezier.bezier method)": [[14, "splinepy.bezier.Bezier.current_core_properties", false]], "current_core_properties() (splinepy.bezier.bezierbase method)": [[43, "splinepy.bezier.BezierBase.current_core_properties", false]], "current_core_properties() (splinepy.bspline.bspline method)": [[70, "splinepy.bspline.BSpline.current_core_properties", false]], "current_core_properties() (splinepy.bspline.bsplinebase method)": [[99, "splinepy.bspline.BSplineBase.current_core_properties", false]], "current_core_properties() (splinepy.nurbs.nurbs method)": [[411, "splinepy.nurbs.NURBS.current_core_properties", false]], "current_core_properties() (splinepy.rational_bezier.rationalbezier method)": [[443, "splinepy.rational_bezier.RationalBezier.current_core_properties", false]], "current_core_properties() (splinepy.spline.spline method)": [[486, "splinepy.spline.Spline.current_core_properties", false]], "current_core_properties() (splinepy.splinepy_core.pyspline method)": [[568, "splinepy.splinepy_core.PySpline.current_core_properties", false]], "curve() (in module splinepy.helpme.fit)": [[191, "splinepy.helpme.fit.curve", false]], "data (splinepy.utils.data.splinedataadaptor attribute)": [[703, "splinepy.utils.data.SplineDataAdaptor.data", false]], "debug() (in module splinepy.utils.log)": [[718, "splinepy.utils.log.debug", false]], "deformation_function (splinepy.microstructure.microstructure.microstructure property)": [[288, "splinepy.microstructure.microstructure.Microstructure.deformation_function", false]], "degrees (splinepy.spline.spline property)": [[487, "splinepy.spline.Spline.degrees", false]], "derivative() (splinepy.bezier.bezier method)": [[15, "splinepy.bezier.Bezier.derivative", false]], "derivative() (splinepy.bezier.bezierbase method)": [[44, "splinepy.bezier.BezierBase.derivative", false]], "derivative() (splinepy.bspline.bspline method)": [[71, "splinepy.bspline.BSpline.derivative", false]], "derivative() (splinepy.bspline.bsplinebase method)": [[100, "splinepy.bspline.BSplineBase.derivative", false]], "derivative() (splinepy.nurbs.nurbs method)": [[412, "splinepy.nurbs.NURBS.derivative", false]], "derivative() (splinepy.rational_bezier.rationalbezier method)": [[444, "splinepy.rational_bezier.RationalBezier.derivative", false]], "derivative() (splinepy.spline.spline method)": [[488, "splinepy.spline.Spline.derivative", false]], "derivative() (splinepy.splinepy_core.pyspline method)": [[569, "splinepy.splinepy_core.PySpline.derivative", false]], "derivative_spline() (in module splinepy.splinepy_core)": [[602, "splinepy.splinepy_core.derivative_spline", false]], "derivative_spline() (splinepy.bezier.bezier method)": [[16, "splinepy.bezier.Bezier.derivative_spline", false]], "derivative_spline() (splinepy.bezier.bezierbase method)": [[45, "splinepy.bezier.BezierBase.derivative_spline", false]], "derivative_spline() (splinepy.rational_bezier.rationalbezier method)": [[445, "splinepy.rational_bezier.RationalBezier.derivative_spline", false]], "determinant_spline() (in module splinepy.helpme.create)": [[142, "splinepy.helpme.create.determinant_spline", false]], "determinant_spline() (splinepy.helpme.create.creator method)": [[133, "splinepy.helpme.create.Creator.determinant_spline", false]], "determine_interfaces() (splinepy.multipatch.multipatch method)": [[384, "splinepy.multipatch.Multipatch.determine_interfaces", false]], "diagonal() (splinepy.utils.data.physicalspacearray method)": [[650, "splinepy.utils.data.PhysicalSpaceArray.diagonal", false]], "dict_to_spline() (in module splinepy.io.ioutils)": [[262, "splinepy.io.ioutils.dict_to_spline", false]], "dim (splinepy.microstructure.tiles.tile_base.tilebase attribute)": [[370, "splinepy.microstructure.tiles.tile_base.TileBase.dim", false]], "dim (splinepy.multipatch.multipatch property)": [[385, "splinepy.multipatch.Multipatch.dim", false]], "dim (splinepy.spline.spline property)": [[489, "splinepy.spline.Spline.dim", false]], "dim (splinepy.splinepy_core.pymultipatch property)": [[546, "splinepy.splinepy_core.PyMultipatch.dim", false]], "dim (splinepy.splinepy_core.pyspline property)": [[570, "splinepy.splinepy_core.PySpline.dim", false]], "dim() (splinepy.splinepy_core.controlpointpointers method)": [[524, "splinepy.splinepy_core.ControlPointPointers.dim", false]], "dim() (splinepy.splinepy_core.weightpointers method)": [[585, "splinepy.splinepy_core.WeightPointers.dim", false]], "disk() (in module splinepy.helpme.create)": [[143, "splinepy.helpme.create.disk", false]], "divergence() (splinepy.helpme.mapper.mapper method)": [[209, "splinepy.helpme.mapper.Mapper.divergence", false]], "dof_mapping() (in module splinepy.io.mfem)": [[274, "splinepy.io.mfem.dof_mapping", false]], "dot() (splinepy.utils.data.physicalspacearray method)": [[651, "splinepy.utils.data.PhysicalSpaceArray.dot", false]], "doublelattice (class in splinepy.microstructure.tiles.double_lattice)": [[327, "splinepy.microstructure.tiles.double_lattice.DoubleLattice", false]], "ds (splinepy.spline.spline property)": [[490, "splinepy.spline.Spline.ds", false]], "dump() (splinepy.utils.data.physicalspacearray method)": [[652, "splinepy.utils.data.PhysicalSpaceArray.dump", false]], "dumps() (splinepy.utils.data.physicalspacearray method)": [[653, "splinepy.utils.data.PhysicalSpaceArray.dumps", false]], "edges() (in module splinepy.helpme.extract)": [[178, "splinepy.helpme.extract.edges", false]], "edges() (splinepy.helpme.extract.extractor method)": [[166, "splinepy.helpme.extract.Extractor.edges", false]], "elevate_degrees() (splinepy.bezier.bezier method)": [[17, "splinepy.bezier.Bezier.elevate_degrees", false]], "elevate_degrees() (splinepy.bezier.bezierbase method)": [[46, "splinepy.bezier.BezierBase.elevate_degrees", false]], "elevate_degrees() (splinepy.bspline.bspline method)": [[72, "splinepy.bspline.BSpline.elevate_degrees", false]], "elevate_degrees() (splinepy.bspline.bsplinebase method)": [[101, "splinepy.bspline.BSplineBase.elevate_degrees", false]], "elevate_degrees() (splinepy.nurbs.nurbs method)": [[413, "splinepy.nurbs.NURBS.elevate_degrees", false]], "elevate_degrees() (splinepy.rational_bezier.rationalbezier method)": [[446, "splinepy.rational_bezier.RationalBezier.elevate_degrees", false]], "elevate_degrees() (splinepy.spline.spline method)": [[491, "splinepy.spline.Spline.elevate_degrees", false]], "elevate_degrees() (splinepy.splinepy_core.pyspline method)": [[571, "splinepy.splinepy_core.PySpline.elevate_degrees", false]], "ellipsvoid (class in splinepy.microstructure.tiles.ellips_v_oid)": [[332, "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid", false]], "embedded() (in module splinepy.helpme.create)": [[144, "splinepy.helpme.create.embedded", false]], "embedded() (splinepy.helpme.create.creator method)": [[134, "splinepy.helpme.create.Creator.embedded", false]], "enforce_contiguous() (in module splinepy.utils.data)": [[712, "splinepy.utils.data.enforce_contiguous", false]], "enforce_contiguous_values() (in module splinepy.utils.data)": [[713, "splinepy.utils.data.enforce_contiguous_values", false]], "entry() (in module splinepy.cli)": [[122, "splinepy.cli.entry", false]], "error() (in module splinepy.utils.log)": [[719, "splinepy.utils.log.error", false]], "evaluate() (splinepy.bezier.bezier method)": [[18, "splinepy.bezier.Bezier.evaluate", false]], "evaluate() (splinepy.bezier.bezierbase method)": [[47, "splinepy.bezier.BezierBase.evaluate", false]], "evaluate() (splinepy.bspline.bspline method)": [[73, "splinepy.bspline.BSpline.evaluate", false]], "evaluate() (splinepy.bspline.bsplinebase method)": [[102, "splinepy.bspline.BSplineBase.evaluate", false]], "evaluate() (splinepy.multipatch.multipatch method)": [[386, "splinepy.multipatch.Multipatch.evaluate", false]], "evaluate() (splinepy.nurbs.nurbs method)": [[414, "splinepy.nurbs.NURBS.evaluate", false]], "evaluate() (splinepy.rational_bezier.rationalbezier method)": [[447, "splinepy.rational_bezier.RationalBezier.evaluate", false]], "evaluate() (splinepy.spline.spline method)": [[492, "splinepy.spline.Spline.evaluate", false]], "evaluate() (splinepy.splinepy_core.pymultipatch method)": [[547, "splinepy.splinepy_core.PyMultipatch.evaluate", false]], "evaluate() (splinepy.splinepy_core.pyspline method)": [[572, "splinepy.splinepy_core.PySpline.evaluate", false]], "evaluation_points (splinepy.microstructure.tiles.tile_base.tilebase attribute)": [[371, "splinepy.microstructure.tiles.tile_base.TileBase.evaluation_points", false]], "everything() (in module splinepy.microstructure.tiles)": [[336, "splinepy.microstructure.tiles.everything", false]], "expand_tabs() (in module splinepy.io.ioutils)": [[263, "splinepy.io.ioutils.expand_tabs", false]], "export() (in module splinepy.io.cats)": [[244, "splinepy.io.cats.export", false]], "export() (in module splinepy.io.default)": [[247, "splinepy.io.default.export", false]], "export() (in module splinepy.io.gismo)": [[255, "splinepy.io.gismo.export", false]], "export() (in module splinepy.io.iges)": [[258, "splinepy.io.iges.export", false]], "export() (in module splinepy.io.irit)": [[268, "splinepy.io.irit.export", false]], "export() (in module splinepy.io.json)": [[271, "splinepy.io.json.export", false]], "export() (in module splinepy.io.mfem)": [[275, "splinepy.io.mfem.export", false]], "export() (in module splinepy.io.npz)": [[280, "splinepy.io.npz.export", false]], "export() (in module splinepy.io.svg)": [[283, "splinepy.io.svg.export", false]], "export() (splinepy.bezier.bezier method)": [[19, "splinepy.bezier.Bezier.export", false]], "export() (splinepy.bezier.bezierbase method)": [[48, "splinepy.bezier.BezierBase.export", false]], "export() (splinepy.bspline.bspline method)": [[74, "splinepy.bspline.BSpline.export", false]], "export() (splinepy.bspline.bsplinebase method)": [[103, "splinepy.bspline.BSplineBase.export", false]], "export() (splinepy.nurbs.nurbs method)": [[415, "splinepy.nurbs.NURBS.export", false]], "export() (splinepy.rational_bezier.rationalbezier method)": [[448, "splinepy.rational_bezier.RationalBezier.export", false]], "export() (splinepy.spline.spline method)": [[493, "splinepy.spline.Spline.export", false]], "export_cartesian() (in module splinepy.io.mfem)": [[276, "splinepy.io.mfem.export_cartesian", false]], "export_iges() (in module splinepy.splinepy_core)": [[603, "splinepy.splinepy_core.export_iges", false]], "extract (splinepy.multipatch.multipatch property)": [[387, "splinepy.multipatch.Multipatch.extract", false]], "extract (splinepy.spline.spline property)": [[494, "splinepy.spline.Spline.extract", false]], "extract_all_boundary_splines() (in module splinepy.splinepy_core)": [[604, "splinepy.splinepy_core.extract_all_boundary_splines", false]], "extract_bezier_patches() (in module splinepy.splinepy_core)": [[605, "splinepy.splinepy_core.extract_bezier_patches", false]], "extract_bezier_patches() (splinepy.bspline.bspline method)": [[75, "splinepy.bspline.BSpline.extract_bezier_patches", false]], "extract_bezier_patches() (splinepy.bspline.bsplinebase method)": [[104, "splinepy.bspline.BSplineBase.extract_bezier_patches", false]], "extract_bezier_patches() (splinepy.nurbs.nurbs method)": [[416, "splinepy.nurbs.NURBS.extract_bezier_patches", false]], "extract_boundaries() (in module splinepy.splinepy_core)": [[606, "splinepy.splinepy_core.extract_boundaries", false]], "extract_dim() (in module splinepy.splinepy_core)": [[607, "splinepy.splinepy_core.extract_dim", false]], "extract_dim() (splinepy.bezier.bezier method)": [[20, "splinepy.bezier.Bezier.extract_dim", false]], "extract_dim() (splinepy.bezier.bezierbase method)": [[49, "splinepy.bezier.BezierBase.extract_dim", false]], "extract_dim() (splinepy.rational_bezier.rationalbezier method)": [[449, "splinepy.rational_bezier.RationalBezier.extract_dim", false]], "extractor (class in splinepy.helpme.extract)": [[156, "splinepy.helpme.extract.Extractor", false]], "extruded() (in module splinepy.helpme.create)": [[145, "splinepy.helpme.create.extruded", false]], "extruded() (splinepy.helpme.create.creator method)": [[135, "splinepy.helpme.create.Creator.extruded", false]], "faces() (in module splinepy.helpme.extract)": [[179, "splinepy.helpme.extract.faces", false]], "faces() (splinepy.helpme.extract.extractor method)": [[167, "splinepy.helpme.extract.Extractor.faces", false]], "ffd (class in splinepy.helpme.ffd)": [[183, "splinepy.helpme.ffd.FFD", false]], "field_derivatives() (splinepy.helpme.mapper.mapper method)": [[210, "splinepy.helpme.mapper.Mapper.field_derivatives", false]], "fields (splinepy.multipatch.multipatch property)": [[388, "splinepy.multipatch.Multipatch.fields", false]], "fields() (splinepy.splinepy_core.pymultipatch method)": [[548, "splinepy.splinepy_core.PyMultipatch.fields", false]], "fill() (splinepy.utils.data.physicalspacearray method)": [[654, "splinepy.utils.data.PhysicalSpaceArray.fill", false]], "find_span() (splinepy.splinepy_core.knotvector method)": [[531, "splinepy.splinepy_core.KnotVector.find_span", false]], "flatten() (splinepy.utils.data.physicalspacearray method)": [[655, "splinepy.utils.data.PhysicalSpaceArray.flatten", false]], "flip_axes() (in module splinepy.helpme.reparametrize)": [[217, "splinepy.helpme.reparametrize.flip_axes", false]], "form_lines() (in module splinepy.io.ioutils)": [[264, "splinepy.io.ioutils.form_lines", false]], "from_bounds() (in module splinepy.helpme.create)": [[146, "splinepy.helpme.create.from_bounds", false]], "full_row_indices() (splinepy.utils.data.physicalspacearray method)": [[656, "splinepy.utils.data.PhysicalSpaceArray.full_row_indices", false]], "function (splinepy.utils.data.splinedataadaptor attribute)": [[704, "splinepy.utils.data.SplineDataAdaptor.function", false]], "get() (in module splinepy.microstructure.tiles)": [[337, "splinepy.microstructure.tiles.get", false]], "get() (splinepy.helpme.visualize.multipatchshowoption method)": [[223, "splinepy.helpme.visualize.MultipatchShowOption.get", false]], "get() (splinepy.helpme.visualize.splineshowoption method)": [[233, "splinepy.helpme.visualize.SplineShowOption.get", false]], "get() (splinepy.utils.data.multipatchdata method)": [[627, "splinepy.utils.data.MultipatchData.get", false]], "get() (splinepy.utils.data.splinedata method)": [[694, "splinepy.utils.data.SplineData.get", false]], "get_interfaces() (splinepy.multipatch.multipatch method)": [[389, "splinepy.multipatch.Multipatch.get_interfaces", false]], "get_interfaces() (splinepy.splinepy_core.pymultipatch method)": [[549, "splinepy.splinepy_core.PyMultipatch.get_interfaces", false]], "getfield() (splinepy.utils.data.physicalspacearray method)": [[657, "splinepy.utils.data.PhysicalSpaceArray.getfield", false]], "global_knot_insertion_matrix() (in module splinepy.splinepy_core)": [[608, "splinepy.splinepy_core.global_knot_insertion_matrix", false]], "gradient() (splinepy.helpme.mapper.mapper method)": [[211, "splinepy.helpme.mapper.Mapper.gradient", false]], "greville_abscissae() (splinepy.bezier.bezier method)": [[21, "splinepy.bezier.Bezier.greville_abscissae", false]], "greville_abscissae() (splinepy.bezier.bezierbase method)": [[50, "splinepy.bezier.BezierBase.greville_abscissae", false]], "greville_abscissae() (splinepy.bspline.bspline method)": [[76, "splinepy.bspline.BSpline.greville_abscissae", false]], "greville_abscissae() (splinepy.bspline.bsplinebase method)": [[105, "splinepy.bspline.BSplineBase.greville_abscissae", false]], "greville_abscissae() (splinepy.nurbs.nurbs method)": [[417, "splinepy.nurbs.NURBS.greville_abscissae", false]], "greville_abscissae() (splinepy.rational_bezier.rationalbezier method)": [[450, "splinepy.rational_bezier.RationalBezier.greville_abscissae", false]], "greville_abscissae() (splinepy.spline.spline method)": [[495, "splinepy.spline.Spline.greville_abscissae", false]], "has_core() (in module splinepy.splinepy_core)": [[609, "splinepy.splinepy_core.has_core", false]], "has_evaluate (splinepy.utils.data.splinedataadaptor attribute)": [[705, "splinepy.utils.data.SplineDataAdaptor.has_evaluate", false]], "has_function (splinepy.utils.data.splinedataadaptor attribute)": [[706, "splinepy.utils.data.SplineDataAdaptor.has_function", false]], "has_knot_vectors (splinepy.spline.spline property)": [[496, "splinepy.spline.Spline.has_knot_vectors", false]], "has_knot_vectors (splinepy.splinepy_core.pyspline property)": [[573, "splinepy.splinepy_core.PySpline.has_knot_vectors", false]], "has_locations (splinepy.utils.data.splinedataadaptor attribute)": [[707, "splinepy.utils.data.SplineDataAdaptor.has_locations", false]], "hessian() (splinepy.helpme.mapper.mapper method)": [[212, "splinepy.helpme.mapper.Mapper.hessian", false]], "hollowcube (class in splinepy.microstructure.tiles.hollow_cube)": [[339, "splinepy.microstructure.tiles.hollow_cube.HollowCube", false]], "hollowoctagon (class in splinepy.microstructure.tiles.hollow_octagon)": [[344, "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon", false]], "hollowoctagonextrude (class in splinepy.microstructure.tiles.hollow_octagon_extrude)": [[349, "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude", false]], "info() (in module splinepy.utils.log)": [[720, "splinepy.utils.log.info", false]], "insert_knots() (in module splinepy.splinepy_core)": [[610, "splinepy.splinepy_core.insert_knots", false]], "insert_knots() (splinepy.bspline.bspline method)": [[77, "splinepy.bspline.BSpline.insert_knots", false]], "insert_knots() (splinepy.bspline.bsplinebase method)": [[106, "splinepy.bspline.BSplineBase.insert_knots", false]], "insert_knots() (splinepy.nurbs.nurbs method)": [[418, "splinepy.nurbs.NURBS.insert_knots", false]], "integrate (splinepy.spline.spline property)": [[497, "splinepy.spline.Spline.integrate", false]], "integrator (class in splinepy.helpme.integrate)": [[196, "splinepy.helpme.integrate.Integrator", false]], "interface_orientations() (splinepy.multipatch.multipatch method)": [[390, "splinepy.multipatch.Multipatch.interface_orientations", false]], "interface_orientations() (splinepy.splinepy_core.pymultipatch method)": [[550, "splinepy.splinepy_core.PyMultipatch.interface_orientations", false]], "interfaces (splinepy.multipatch.multipatch property)": [[391, "splinepy.multipatch.Multipatch.interfaces", false]], "interfaces_from_boundary_centers() (in module splinepy.splinepy_core)": [[611, "splinepy.splinepy_core.interfaces_from_boundary_centers", false]], "intersection() (splinepy.spline.requiredproperties class method)": [[470, "splinepy.spline.RequiredProperties.intersection", false]], "inversecross3d (class in splinepy.microstructure.tiles.inverse_cross_3d)": [[355, "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D", false]], "is_minimal() (in module splinepy.splinepy_core)": [[612, "splinepy.splinepy_core.is_minimal", false]], "is_rational (splinepy.spline.spline property)": [[498, "splinepy.spline.Spline.is_rational", false]], "is_rational (splinepy.splinepy_core.pyspline property)": [[574, "splinepy.splinepy_core.PySpline.is_rational", false]], "is_spline (splinepy.utils.data.splinedataadaptor attribute)": [[708, "splinepy.utils.data.SplineDataAdaptor.is_spline", false]], "item() (splinepy.utils.data.physicalspacearray method)": [[658, "splinepy.utils.data.PhysicalSpaceArray.item", false]], "items() (splinepy.helpme.visualize.multipatchshowoption method)": [[224, "splinepy.helpme.visualize.MultipatchShowOption.items", false]], "items() (splinepy.helpme.visualize.splineshowoption method)": [[234, "splinepy.helpme.visualize.SplineShowOption.items", false]], "items() (splinepy.utils.data.multipatchdata method)": [[628, "splinepy.utils.data.MultipatchData.items", false]], "items() (splinepy.utils.data.splinedata method)": [[695, "splinepy.utils.data.SplineData.items", false]], "jacobian() (splinepy.bezier.bezier method)": [[22, "splinepy.bezier.Bezier.jacobian", false]], "jacobian() (splinepy.bezier.bezierbase method)": [[51, "splinepy.bezier.BezierBase.jacobian", false]], "jacobian() (splinepy.bspline.bspline method)": [[78, "splinepy.bspline.BSpline.jacobian", false]], "jacobian() (splinepy.bspline.bsplinebase method)": [[107, "splinepy.bspline.BSplineBase.jacobian", false]], "jacobian() (splinepy.nurbs.nurbs method)": [[419, "splinepy.nurbs.NURBS.jacobian", false]], "jacobian() (splinepy.rational_bezier.rationalbezier method)": [[451, "splinepy.rational_bezier.RationalBezier.jacobian", false]], "jacobian() (splinepy.spline.spline method)": [[499, "splinepy.spline.Spline.jacobian", false]], "jacobian() (splinepy.splinepy_core.pyspline method)": [[575, "splinepy.splinepy_core.PySpline.jacobian", false]], "keys() (splinepy.helpme.visualize.multipatchshowoption method)": [[225, "splinepy.helpme.visualize.MultipatchShowOption.keys", false]], "keys() (splinepy.helpme.visualize.splineshowoption method)": [[235, "splinepy.helpme.visualize.SplineShowOption.keys", false]], "keys() (splinepy.utils.data.multipatchdata method)": [[629, "splinepy.utils.data.MultipatchData.keys", false]], "keys() (splinepy.utils.data.splinedata method)": [[696, "splinepy.utils.data.SplineData.keys", false]], "knot_insertion_matrix() (in module splinepy.splinepy_core)": [[613, "splinepy.splinepy_core.knot_insertion_matrix", false]], "knot_insertion_matrix() (splinepy.bspline.bspline method)": [[79, "splinepy.bspline.BSpline.knot_insertion_matrix", false]], "knot_insertion_matrix() (splinepy.bspline.bsplinebase method)": [[108, "splinepy.bspline.BSplineBase.knot_insertion_matrix", false]], "knot_insertion_matrix() (splinepy.nurbs.nurbs method)": [[420, "splinepy.nurbs.NURBS.knot_insertion_matrix", false]], "knot_multiplicities (splinepy.spline.spline property)": [[500, "splinepy.spline.Spline.knot_multiplicities", false]], "knot_vectors (splinepy.spline.spline property)": [[501, "splinepy.spline.Spline.knot_vectors", false]], "knotvector (class in splinepy.splinepy_core)": [[530, "splinepy.splinepy_core.KnotVector", false]], "kvs (splinepy.spline.spline property)": [[502, "splinepy.spline.Spline.kvs", false]], "laplacian() (splinepy.helpme.mapper.mapper method)": [[213, "splinepy.helpme.mapper.Mapper.laplacian", false]], "len() (splinepy.splinepy_core.controlpointpointers method)": [[525, "splinepy.splinepy_core.ControlPointPointers.len", false]], "len() (splinepy.splinepy_core.weightpointers method)": [[586, "splinepy.splinepy_core.WeightPointers.len", false]], "line() (in module splinepy.helpme.create)": [[147, "splinepy.helpme.create.line", false]], "load() (in module splinepy.io.cats)": [[245, "splinepy.io.cats.load", false]], "load() (in module splinepy.io.default)": [[248, "splinepy.io.default.load", false]], "load() (in module splinepy.io.gismo)": [[256, "splinepy.io.gismo.load", false]], "load() (in module splinepy.io.iges)": [[259, "splinepy.io.iges.load", false]], "load() (in module splinepy.io.irit)": [[269, "splinepy.io.irit.load", false]], "load() (in module splinepy.io.json)": [[272, "splinepy.io.json.load", false]], "load() (in module splinepy.io.mfem)": [[277, "splinepy.io.mfem.load", false]], "load() (in module splinepy.io.npz)": [[281, "splinepy.io.npz.load", false]], "locations (splinepy.utils.data.splinedataadaptor attribute)": [[709, "splinepy.utils.data.SplineDataAdaptor.locations", false]], "make_matrix() (in module splinepy.utils.data)": [[714, "splinepy.utils.data.make_matrix", false]], "make_meaningful() (in module splinepy.io.ioutils)": [[265, "splinepy.io.ioutils.make_meaningful", false]], "make_showable() (in module splinepy.helpme.visualize)": [[240, "splinepy.helpme.visualize.make_showable", false]], "mapper (class in splinepy.helpme.mapper)": [[204, "splinepy.helpme.mapper.Mapper", false]], "mapper() (splinepy.bezier.bezier method)": [[23, "splinepy.bezier.Bezier.mapper", false]], "mapper() (splinepy.bezier.bezierbase method)": [[52, "splinepy.bezier.BezierBase.mapper", false]], "mapper() (splinepy.bspline.bspline method)": [[80, "splinepy.bspline.BSpline.mapper", false]], "mapper() (splinepy.bspline.bsplinebase method)": [[109, "splinepy.bspline.BSplineBase.mapper", false]], "mapper() (splinepy.nurbs.nurbs method)": [[421, "splinepy.nurbs.NURBS.mapper", false]], "mapper() (splinepy.rational_bezier.rationalbezier method)": [[452, "splinepy.rational_bezier.RationalBezier.mapper", false]], "mapper() (splinepy.spline.spline method)": [[503, "splinepy.spline.Spline.mapper", false]], "max() (splinepy.utils.data.physicalspacearray method)": [[659, "splinepy.utils.data.PhysicalSpaceArray.max", false]], "mean() (splinepy.utils.data.physicalspacearray method)": [[660, "splinepy.utils.data.PhysicalSpaceArray.mean", false]], "mesh (splinepy.helpme.ffd.ffd property)": [[184, "splinepy.helpme.ffd.FFD.mesh", false]], "microstructure (class in splinepy.microstructure.microstructure)": [[286, "splinepy.microstructure.microstructure.Microstructure", false]], "microtile (splinepy.microstructure.microstructure.microstructure property)": [[289, "splinepy.microstructure.microstructure.Microstructure.microtile", false]], "min() (splinepy.utils.data.physicalspacearray method)": [[661, "splinepy.utils.data.PhysicalSpaceArray.min", false]], "module": [[1, "module-splinepy", false], [2, "module-splinepy.bezier", false], [61, "module-splinepy.bspline", false], [120, "module-splinepy.cli", false], [124, "module-splinepy.helpme", false], [125, "module-splinepy.helpme.check", false], [131, "module-splinepy.helpme.create", false], [155, "module-splinepy.helpme.extract", false], [182, "module-splinepy.helpme.ffd", false], [189, "module-splinepy.helpme.fit", false], [195, "module-splinepy.helpme.integrate", false], [203, "module-splinepy.helpme.mapper", false], [214, "module-splinepy.helpme.multi_index", false], [216, "module-splinepy.helpme.reparametrize", false], [219, "module-splinepy.helpme.visualize", false], [242, "module-splinepy.io", false], [243, "module-splinepy.io.cats", false], [246, "module-splinepy.io.default", false], [249, "module-splinepy.io.gismo", false], [257, "module-splinepy.io.iges", false], [260, "module-splinepy.io.ioutils", false], [267, "module-splinepy.io.irit", false], [270, "module-splinepy.io.json", false], [273, "module-splinepy.io.mfem", false], [279, "module-splinepy.io.npz", false], [282, "module-splinepy.io.svg", false], [284, "module-splinepy.microstructure", false], [285, "module-splinepy.microstructure.microstructure", false], [294, "module-splinepy.microstructure.tiles", false], [295, "module-splinepy.microstructure.tiles.armadillo", false], [301, "module-splinepy.microstructure.tiles.chi", false], [306, "module-splinepy.microstructure.tiles.cross_2d", false], [311, "module-splinepy.microstructure.tiles.cross_3d", false], [316, "module-splinepy.microstructure.tiles.cross_3d_linear", false], [321, "module-splinepy.microstructure.tiles.cube_void", false], [326, "module-splinepy.microstructure.tiles.double_lattice", false], [331, "module-splinepy.microstructure.tiles.ellips_v_oid", false], [338, "module-splinepy.microstructure.tiles.hollow_cube", false], [343, "module-splinepy.microstructure.tiles.hollow_octagon", false], [348, "module-splinepy.microstructure.tiles.hollow_octagon_extrude", false], [354, "module-splinepy.microstructure.tiles.inverse_cross_3d", false], [360, "module-splinepy.microstructure.tiles.snappy", false], [365, "module-splinepy.microstructure.tiles.tile_base", false], [373, "module-splinepy.multipatch", false], [403, "module-splinepy.nurbs", false], [433, "module-splinepy.rational_bezier", false], [463, "module-splinepy.settings", false], [468, "module-splinepy.spline", false], [522, "module-splinepy.splinepy_core", false], [621, "module-splinepy.utils", false], [622, "module-splinepy.utils.data", false], [716, "module-splinepy.utils.log", false]], "multi_index (splinepy.spline.spline property)": [[504, "splinepy.spline.Spline.multi_index", false]], "multiindex (class in splinepy.helpme.multi_index)": [[215, "splinepy.helpme.multi_index.MultiIndex", false]], "multipatch (class in splinepy.multipatch)": [[374, "splinepy.multipatch.Multipatch", false]], "multipatchdata (class in splinepy.utils.data)": [[623, "splinepy.utils.data.MultipatchData", false]], "multipatchshowoption (class in splinepy.helpme.visualize)": [[220, "splinepy.helpme.visualize.MultipatchShowOption", false]], "multiplicities() (splinepy.splinepy_core.knotvector method)": [[532, "splinepy.splinepy_core.KnotVector.multiplicities", false]], "multiply() (in module splinepy.splinepy_core)": [[614, "splinepy.splinepy_core.multiply", false]], "n_default_threads (splinepy.splinepy_core.pymultipatch property)": [[551, "splinepy.splinepy_core.PyMultipatch.n_default_threads", false]], "name (splinepy.spline.spline property)": [[505, "splinepy.spline.Spline.name", false]], "name (splinepy.splinepy_core.pymultipatch property)": [[552, "splinepy.splinepy_core.PyMultipatch.name", false]], "name (splinepy.splinepy_core.pyspline property)": [[576, "splinepy.splinepy_core.PySpline.name", false]], "name_to_type (in module splinepy.settings)": [[465, "splinepy.settings.NAME_TO_TYPE", false]], "next_line() (in module splinepy.io.ioutils)": [[266, "splinepy.io.ioutils.next_line", false]], "nonzero() (splinepy.utils.data.physicalspacearray method)": [[662, "splinepy.utils.data.PhysicalSpaceArray.nonzero", false]], "normalize_knot_vectors() (splinepy.bspline.bspline method)": [[81, "splinepy.bspline.BSpline.normalize_knot_vectors", false]], "normalize_knot_vectors() (splinepy.bspline.bsplinebase method)": [[110, "splinepy.bspline.BSplineBase.normalize_knot_vectors", false]], "normalize_knot_vectors() (splinepy.nurbs.nurbs method)": [[422, "splinepy.nurbs.NURBS.normalize_knot_vectors", false]], "nthreads (in module splinepy.settings)": [[466, "splinepy.settings.NTHREADS", false]], "null_spline() (in module splinepy.splinepy_core)": [[615, "splinepy.splinepy_core.null_spline", false]], "numpy() (splinepy.splinepy_core.knotvector method)": [[533, "splinepy.splinepy_core.KnotVector.numpy", false]], "nurbs (class in splinepy.nurbs)": [[404, "splinepy.nurbs.NURBS", false]], "nurbs (splinepy.bezier.bezier property)": [[24, "splinepy.bezier.Bezier.nurbs", false]], "nurbs (splinepy.bspline.bspline property)": [[82, "splinepy.bspline.BSpline.nurbs", false]], "nurbs (splinepy.nurbs.nurbs property)": [[423, "splinepy.nurbs.NURBS.nurbs", false]], "nurbs (splinepy.rational_bezier.rationalbezier property)": [[453, "splinepy.rational_bezier.RationalBezier.nurbs", false]], "of() (splinepy.spline.requiredproperties class method)": [[471, "splinepy.spline.RequiredProperties.of", false]], "padding (splinepy.helpme.ffd.ffd property)": [[185, "splinepy.helpme.ffd.FFD.padding", false]], "para_dim (splinepy.microstructure.tiles.tile_base.tilebase attribute)": [[372, "splinepy.microstructure.tiles.tile_base.TileBase.para_dim", false]], "para_dim (splinepy.multipatch.multipatch property)": [[392, "splinepy.multipatch.Multipatch.para_dim", false]], "para_dim (splinepy.spline.spline property)": [[506, "splinepy.spline.Spline.para_dim", false]], "para_dim (splinepy.splinepy_core.pymultipatch property)": [[553, "splinepy.splinepy_core.PyMultipatch.para_dim", false]], "para_dim (splinepy.splinepy_core.pyspline property)": [[577, "splinepy.splinepy_core.PySpline.para_dim", false]], "parameter_sensitivity_function (splinepy.microstructure.microstructure.microstructure property)": [[290, "splinepy.microstructure.microstructure.Microstructure.parameter_sensitivity_function", false]], "parameterize() (in module splinepy.helpme.fit)": [[192, "splinepy.helpme.fit.parameterize", false]], "parameterspace (class in splinepy.splinepy_core)": [[536, "splinepy.splinepy_core.ParameterSpace", false]], "parametric_bounds (splinepy.spline.spline property)": [[507, "splinepy.spline.Spline.parametric_bounds", false]], "parametric_bounds (splinepy.splinepy_core.pyspline property)": [[578, "splinepy.splinepy_core.PySpline.parametric_bounds", false]], "parametric_bounds (splinepy.utils.data.splinedataadaptor attribute)": [[710, "splinepy.utils.data.SplineDataAdaptor.parametric_bounds", false]], "parametric_function() (in module splinepy.helpme.integrate)": [[200, "splinepy.helpme.integrate.parametric_function", false]], "parametric_function() (splinepy.helpme.integrate.integrator method)": [[197, "splinepy.helpme.integrate.Integrator.parametric_function", false]], "parametric_view() (in module splinepy.helpme.create)": [[148, "splinepy.helpme.create.parametric_view", false]], "parametric_view() (splinepy.helpme.create.creator method)": [[136, "splinepy.helpme.create.Creator.parametric_view", false]], "parametrization_function (splinepy.microstructure.microstructure.microstructure property)": [[291, "splinepy.microstructure.microstructure.Microstructure.parametrization_function", false]], "partition() (splinepy.utils.data.physicalspacearray method)": [[663, "splinepy.utils.data.PhysicalSpaceArray.partition", false]], "patches (splinepy.multipatch.multipatch property)": [[393, "splinepy.multipatch.Multipatch.patches", false]], "patches (splinepy.splinepy_core.pymultipatch property)": [[554, "splinepy.splinepy_core.PyMultipatch.patches", false]], "permute_parametric_axes() (in module splinepy.helpme.reparametrize)": [[218, "splinepy.helpme.reparametrize.permute_parametric_axes", false]], "physical_function() (in module splinepy.helpme.integrate)": [[201, "splinepy.helpme.integrate.physical_function", false]], "physical_function() (splinepy.helpme.integrate.integrator method)": [[198, "splinepy.helpme.integrate.Integrator.physical_function", false]], "physicalspacearray (class in splinepy.utils.data)": [[633, "splinepy.utils.data.PhysicalSpaceArray", false]], "plate() (in module splinepy.helpme.create)": [[149, "splinepy.helpme.create.plate", false]], "pop() (splinepy.helpme.visualize.multipatchshowoption method)": [[226, "splinepy.helpme.visualize.MultipatchShowOption.pop", false]], "pop() (splinepy.helpme.visualize.splineshowoption method)": [[236, "splinepy.helpme.visualize.SplineShowOption.pop", false]], "pop() (splinepy.utils.data.multipatchdata method)": [[630, "splinepy.utils.data.MultipatchData.pop", false]], "pop() (splinepy.utils.data.splinedata method)": [[697, "splinepy.utils.data.SplineData.pop", false]], "prepend_log() (in module splinepy.utils.log)": [[721, "splinepy.utils.log.prepend_log", false]], "prod() (splinepy.utils.data.physicalspacearray method)": [[664, "splinepy.utils.data.PhysicalSpaceArray.prod", false]], "proximities() (splinepy.bezier.bezier method)": [[25, "splinepy.bezier.Bezier.proximities", false]], "proximities() (splinepy.bezier.bezierbase method)": [[53, "splinepy.bezier.BezierBase.proximities", false]], "proximities() (splinepy.bspline.bspline method)": [[83, "splinepy.bspline.BSpline.proximities", false]], "proximities() (splinepy.bspline.bsplinebase method)": [[111, "splinepy.bspline.BSplineBase.proximities", false]], "proximities() (splinepy.nurbs.nurbs method)": [[424, "splinepy.nurbs.NURBS.proximities", false]], "proximities() (splinepy.rational_bezier.rationalbezier method)": [[454, "splinepy.rational_bezier.RationalBezier.proximities", false]], "proximities() (splinepy.spline.spline method)": [[508, "splinepy.spline.Spline.proximities", false]], "proximities() (splinepy.splinepy_core.pyspline method)": [[579, "splinepy.splinepy_core.PySpline.proximities", false]], "put() (splinepy.utils.data.physicalspacearray method)": [[665, "splinepy.utils.data.PhysicalSpaceArray.put", false]], "pymultipatch (class in splinepy.splinepy_core)": [[539, "splinepy.splinepy_core.PyMultipatch", false]], "pyramid() (in module splinepy.helpme.create)": [[150, "splinepy.helpme.create.pyramid", false]], "pyspline (class in splinepy.splinepy_core)": [[562, "splinepy.splinepy_core.PySpline", false]], "rationalbezier (class in splinepy.rational_bezier)": [[434, "splinepy.rational_bezier.RationalBezier", false]], "rationalbezier (splinepy.bezier.bezier property)": [[26, "splinepy.bezier.Bezier.rationalbezier", false]], "rationalbezier (splinepy.rational_bezier.rationalbezier property)": [[455, "splinepy.rational_bezier.RationalBezier.rationalbezier", false]], "ravel() (splinepy.utils.data.physicalspacearray method)": [[666, "splinepy.utils.data.PhysicalSpaceArray.ravel", false]], "read_iges() (in module splinepy.splinepy_core)": [[616, "splinepy.splinepy_core.read_iges", false]], "read_solution() (in module splinepy.io.mfem)": [[278, "splinepy.io.mfem.read_solution", false]], "reduce_degrees() (splinepy.bezier.bezier method)": [[27, "splinepy.bezier.Bezier.reduce_degrees", false]], "reduce_degrees() (splinepy.bezier.bezierbase method)": [[54, "splinepy.bezier.BezierBase.reduce_degrees", false]], "reduce_degrees() (splinepy.bspline.bspline method)": [[84, "splinepy.bspline.BSpline.reduce_degrees", false]], "reduce_degrees() (splinepy.bspline.bsplinebase method)": [[112, "splinepy.bspline.BSplineBase.reduce_degrees", false]], "reduce_degrees() (splinepy.nurbs.nurbs method)": [[425, "splinepy.nurbs.NURBS.reduce_degrees", false]], "reduce_degrees() (splinepy.rational_bezier.rationalbezier method)": [[456, "splinepy.rational_bezier.RationalBezier.reduce_degrees", false]], "reduce_degrees() (splinepy.spline.spline method)": [[509, "splinepy.spline.Spline.reduce_degrees", false]], "reduce_degrees() (splinepy.splinepy_core.pyspline method)": [[580, "splinepy.splinepy_core.PySpline.reduce_degrees", false]], "remove_knots() (in module splinepy.splinepy_core)": [[617, "splinepy.splinepy_core.remove_knots", false]], "remove_knots() (splinepy.bspline.bspline method)": [[85, "splinepy.bspline.BSpline.remove_knots", false]], "remove_knots() (splinepy.bspline.bsplinebase method)": [[113, "splinepy.bspline.BSplineBase.remove_knots", false]], "remove_knots() (splinepy.nurbs.nurbs method)": [[426, "splinepy.nurbs.NURBS.remove_knots", false]], "repeat() (splinepy.utils.data.physicalspacearray method)": [[667, "splinepy.utils.data.PhysicalSpaceArray.repeat", false]], "required_properties (splinepy.spline.spline property)": [[510, "splinepy.spline.Spline.required_properties", false]], "requiredproperties (class in splinepy.spline)": [[469, "splinepy.spline.RequiredProperties", false]], "reshape() (splinepy.utils.data.physicalspacearray method)": [[668, "splinepy.utils.data.PhysicalSpaceArray.reshape", false]], "resize() (splinepy.utils.data.physicalspacearray method)": [[669, "splinepy.utils.data.PhysicalSpaceArray.resize", false]], "revolved() (in module splinepy.helpme.create)": [[151, "splinepy.helpme.create.revolved", false]], "revolved() (splinepy.helpme.create.creator method)": [[137, "splinepy.helpme.create.Creator.revolved", false]], "round() (splinepy.utils.data.physicalspacearray method)": [[670, "splinepy.utils.data.PhysicalSpaceArray.round", false]], "row_indices() (splinepy.utils.data.physicalspacearray method)": [[671, "splinepy.utils.data.PhysicalSpaceArray.row_indices", false]], "same_parametric_bounds (splinepy.splinepy_core.pymultipatch property)": [[555, "splinepy.splinepy_core.PyMultipatch.same_parametric_bounds", false]], "same_spline_with_knot_vectors() (in module splinepy.splinepy_core)": [[618, "splinepy.splinepy_core.same_spline_with_knot_vectors", false]], "sample() (splinepy.bezier.bezier method)": [[28, "splinepy.bezier.Bezier.sample", false]], "sample() (splinepy.bezier.bezierbase method)": [[55, "splinepy.bezier.BezierBase.sample", false]], "sample() (splinepy.bspline.bspline method)": [[86, "splinepy.bspline.BSpline.sample", false]], "sample() (splinepy.bspline.bsplinebase method)": [[114, "splinepy.bspline.BSplineBase.sample", false]], "sample() (splinepy.multipatch.multipatch method)": [[394, "splinepy.multipatch.Multipatch.sample", false]], "sample() (splinepy.nurbs.nurbs method)": [[427, "splinepy.nurbs.NURBS.sample", false]], "sample() (splinepy.rational_bezier.rationalbezier method)": [[457, "splinepy.rational_bezier.RationalBezier.sample", false]], "sample() (splinepy.spline.spline method)": [[511, "splinepy.spline.Spline.sample", false]], "sample() (splinepy.splinepy_core.pymultipatch method)": [[556, "splinepy.splinepy_core.PyMultipatch.sample", false]], "sample() (splinepy.splinepy_core.pyspline method)": [[581, "splinepy.splinepy_core.PySpline.sample", false]], "scale() (splinepy.splinepy_core.knotvector method)": [[534, "splinepy.splinepy_core.KnotVector.scale", false]], "searchsorted() (splinepy.utils.data.physicalspacearray method)": [[672, "splinepy.utils.data.PhysicalSpaceArray.searchsorted", false]], "set_boundary() (splinepy.multipatch.multipatch method)": [[395, "splinepy.multipatch.Multipatch.set_boundary", false]], "set_interfaces() (splinepy.multipatch.multipatch method)": [[396, "splinepy.multipatch.Multipatch.set_interfaces", false]], "set_interfaces() (splinepy.splinepy_core.pymultipatch method)": [[557, "splinepy.splinepy_core.PyMultipatch.set_interfaces", false]], "set_row() (splinepy.splinepy_core.controlpointpointers method)": [[526, "splinepy.splinepy_core.ControlPointPointers.set_row", false]], "set_row() (splinepy.splinepy_core.weightpointers method)": [[587, "splinepy.splinepy_core.WeightPointers.set_row", false]], "set_rows() (splinepy.splinepy_core.controlpointpointers method)": [[527, "splinepy.splinepy_core.ControlPointPointers.set_rows", false]], "set_rows() (splinepy.splinepy_core.weightpointers method)": [[588, "splinepy.splinepy_core.WeightPointers.set_rows", false]], "setfield() (splinepy.utils.data.physicalspacearray method)": [[673, "splinepy.utils.data.PhysicalSpaceArray.setfield", false]], "setflags() (splinepy.utils.data.physicalspacearray method)": [[674, "splinepy.utils.data.PhysicalSpaceArray.setflags", false]], "show() (in module splinepy.cli)": [[123, "splinepy.cli.show", false]], "show() (in module splinepy.helpme.visualize)": [[241, "splinepy.helpme.visualize.show", false]], "show() (in module splinepy.microstructure.tiles)": [[359, "splinepy.microstructure.tiles.show", false]], "show() (splinepy.bezier.bezier method)": [[29, "splinepy.bezier.Bezier.show", false]], "show() (splinepy.bezier.bezierbase method)": [[56, "splinepy.bezier.BezierBase.show", false]], "show() (splinepy.bspline.bspline method)": [[87, "splinepy.bspline.BSpline.show", false]], "show() (splinepy.bspline.bsplinebase method)": [[115, "splinepy.bspline.BSplineBase.show", false]], "show() (splinepy.helpme.ffd.ffd method)": [[186, "splinepy.helpme.ffd.FFD.show", false]], "show() (splinepy.microstructure.microstructure.microstructure method)": [[292, "splinepy.microstructure.microstructure.Microstructure.show", false]], "show() (splinepy.multipatch.multipatch method)": [[397, "splinepy.multipatch.Multipatch.show", false]], "show() (splinepy.nurbs.nurbs method)": [[428, "splinepy.nurbs.NURBS.show", false]], "show() (splinepy.rational_bezier.rationalbezier method)": [[458, "splinepy.rational_bezier.RationalBezier.show", false]], "show() (splinepy.spline.spline method)": [[512, "splinepy.spline.Spline.show", false]], "show_options (splinepy.multipatch.multipatch property)": [[398, "splinepy.multipatch.Multipatch.show_options", false]], "show_options (splinepy.spline.spline property)": [[513, "splinepy.spline.Spline.show_options", false]], "showable() (splinepy.bezier.bezier method)": [[30, "splinepy.bezier.Bezier.showable", false]], "showable() (splinepy.bezier.bezierbase method)": [[57, "splinepy.bezier.BezierBase.showable", false]], "showable() (splinepy.bspline.bspline method)": [[88, "splinepy.bspline.BSpline.showable", false]], "showable() (splinepy.bspline.bsplinebase method)": [[116, "splinepy.bspline.BSplineBase.showable", false]], "showable() (splinepy.helpme.ffd.ffd method)": [[187, "splinepy.helpme.ffd.FFD.showable", false]], "showable() (splinepy.multipatch.multipatch method)": [[399, "splinepy.multipatch.Multipatch.showable", false]], "showable() (splinepy.nurbs.nurbs method)": [[429, "splinepy.nurbs.NURBS.showable", false]], "showable() (splinepy.rational_bezier.rationalbezier method)": [[459, "splinepy.rational_bezier.RationalBezier.showable", false]], "showable() (splinepy.spline.spline method)": [[514, "splinepy.spline.Spline.showable", false]], "snappy (class in splinepy.microstructure.tiles.snappy)": [[361, "splinepy.microstructure.tiles.snappy.Snappy", false]], "solve_for_control_points() (in module splinepy.helpme.fit)": [[193, "splinepy.helpme.fit.solve_for_control_points", false]], "sort() (splinepy.utils.data.physicalspacearray method)": [[675, "splinepy.utils.data.PhysicalSpaceArray.sort", false]], "sphere() (in module splinepy.helpme.create)": [[152, "splinepy.helpme.create.sphere", false]], "spline (class in splinepy.spline)": [[473, "splinepy.spline.Spline", false]], "spline (splinepy.helpme.ffd.ffd property)": [[188, "splinepy.helpme.ffd.FFD.spline", false]], "spline() (in module splinepy.helpme.extract)": [[180, "splinepy.helpme.extract.spline", false]], "spline() (splinepy.helpme.extract.extractor method)": [[168, "splinepy.helpme.extract.Extractor.spline", false]], "spline_data (splinepy.multipatch.multipatch property)": [[400, "splinepy.multipatch.Multipatch.spline_data", false]], "spline_data (splinepy.spline.spline property)": [[515, "splinepy.spline.Spline.spline_data", false]], "splinedata (class in splinepy.utils.data)": [[690, "splinepy.utils.data.SplineData", false]], "splinedataadaptor (class in splinepy.utils.data)": [[700, "splinepy.utils.data.SplineDataAdaptor", false]], "splinepy": [[1, "module-splinepy", false]], "splinepy.bezier": [[2, "module-splinepy.bezier", false]], "splinepy.bspline": [[61, "module-splinepy.bspline", false]], "splinepy.cli": [[120, "module-splinepy.cli", false]], "splinepy.helpme": [[124, "module-splinepy.helpme", false]], "splinepy.helpme.check": [[125, "module-splinepy.helpme.check", false]], "splinepy.helpme.create": [[131, "module-splinepy.helpme.create", false]], "splinepy.helpme.extract": [[155, "module-splinepy.helpme.extract", false]], "splinepy.helpme.ffd": [[182, "module-splinepy.helpme.ffd", false]], "splinepy.helpme.fit": [[189, "module-splinepy.helpme.fit", false]], "splinepy.helpme.integrate": [[195, "module-splinepy.helpme.integrate", false]], "splinepy.helpme.mapper": [[203, "module-splinepy.helpme.mapper", false]], "splinepy.helpme.multi_index": [[214, "module-splinepy.helpme.multi_index", false]], "splinepy.helpme.reparametrize": [[216, "module-splinepy.helpme.reparametrize", false]], "splinepy.helpme.visualize": [[219, "module-splinepy.helpme.visualize", false]], "splinepy.io": [[242, "module-splinepy.io", false]], "splinepy.io.cats": [[243, "module-splinepy.io.cats", false]], "splinepy.io.default": [[246, "module-splinepy.io.default", false]], "splinepy.io.gismo": [[249, "module-splinepy.io.gismo", false]], "splinepy.io.iges": [[257, "module-splinepy.io.iges", false]], "splinepy.io.ioutils": [[260, "module-splinepy.io.ioutils", false]], "splinepy.io.irit": [[267, "module-splinepy.io.irit", false]], "splinepy.io.json": [[270, "module-splinepy.io.json", false]], "splinepy.io.mfem": [[273, "module-splinepy.io.mfem", false]], "splinepy.io.npz": [[279, "module-splinepy.io.npz", false]], "splinepy.io.svg": [[282, "module-splinepy.io.svg", false]], "splinepy.microstructure": [[284, "module-splinepy.microstructure", false]], "splinepy.microstructure.microstructure": [[285, "module-splinepy.microstructure.microstructure", false]], "splinepy.microstructure.tiles": [[294, "module-splinepy.microstructure.tiles", false]], "splinepy.microstructure.tiles.armadillo": [[295, "module-splinepy.microstructure.tiles.armadillo", false]], "splinepy.microstructure.tiles.chi": [[301, "module-splinepy.microstructure.tiles.chi", false]], "splinepy.microstructure.tiles.cross_2d": [[306, "module-splinepy.microstructure.tiles.cross_2d", false]], "splinepy.microstructure.tiles.cross_3d": [[311, "module-splinepy.microstructure.tiles.cross_3d", false]], "splinepy.microstructure.tiles.cross_3d_linear": [[316, "module-splinepy.microstructure.tiles.cross_3d_linear", false]], "splinepy.microstructure.tiles.cube_void": [[321, "module-splinepy.microstructure.tiles.cube_void", false]], "splinepy.microstructure.tiles.double_lattice": [[326, "module-splinepy.microstructure.tiles.double_lattice", false]], "splinepy.microstructure.tiles.ellips_v_oid": [[331, "module-splinepy.microstructure.tiles.ellips_v_oid", false]], "splinepy.microstructure.tiles.hollow_cube": [[338, "module-splinepy.microstructure.tiles.hollow_cube", false]], "splinepy.microstructure.tiles.hollow_octagon": [[343, "module-splinepy.microstructure.tiles.hollow_octagon", false]], "splinepy.microstructure.tiles.hollow_octagon_extrude": [[348, "module-splinepy.microstructure.tiles.hollow_octagon_extrude", false]], "splinepy.microstructure.tiles.inverse_cross_3d": [[354, "module-splinepy.microstructure.tiles.inverse_cross_3d", false]], "splinepy.microstructure.tiles.snappy": [[360, "module-splinepy.microstructure.tiles.snappy", false]], "splinepy.microstructure.tiles.tile_base": [[365, "module-splinepy.microstructure.tiles.tile_base", false]], "splinepy.multipatch": [[373, "module-splinepy.multipatch", false]], "splinepy.nurbs": [[403, "module-splinepy.nurbs", false]], "splinepy.rational_bezier": [[433, "module-splinepy.rational_bezier", false]], "splinepy.settings": [[463, "module-splinepy.settings", false]], "splinepy.spline": [[468, "module-splinepy.spline", false]], "splinepy.splinepy_core": [[522, "module-splinepy.splinepy_core", false]], "splinepy.utils": [[621, "module-splinepy.utils", false]], "splinepy.utils.data": [[622, "module-splinepy.utils.data", false]], "splinepy.utils.log": [[716, "module-splinepy.utils.log", false]], "splineshowoption (class in splinepy.helpme.visualize)": [[230, "splinepy.helpme.visualize.SplineShowOption", false]], "split() (in module splinepy.splinepy_core)": [[619, "splinepy.splinepy_core.split", false]], "split() (splinepy.bezier.bezier method)": [[31, "splinepy.bezier.Bezier.split", false]], "split() (splinepy.bezier.bezierbase method)": [[58, "splinepy.bezier.BezierBase.split", false]], "split() (splinepy.rational_bezier.rationalbezier method)": [[460, "splinepy.rational_bezier.RationalBezier.split", false]], "squeeze() (splinepy.utils.data.physicalspacearray method)": [[676, "splinepy.utils.data.PhysicalSpaceArray.squeeze", false]], "std() (splinepy.utils.data.physicalspacearray method)": [[677, "splinepy.utils.data.PhysicalSpaceArray.std", false]], "sub_multipatch() (splinepy.multipatch.multipatch method)": [[401, "splinepy.multipatch.Multipatch.sub_multipatch", false]], "sub_multipatch() (splinepy.splinepy_core.pymultipatch method)": [[558, "splinepy.splinepy_core.PyMultipatch.sub_multipatch", false]], "sub_patch_centers (splinepy.multipatch.multipatch property)": [[402, "splinepy.multipatch.Multipatch.sub_patch_centers", false]], "sub_patch_centers() (splinepy.splinepy_core.pymultipatch method)": [[559, "splinepy.splinepy_core.PyMultipatch.sub_patch_centers", false]], "sum() (splinepy.utils.data.physicalspacearray method)": [[678, "splinepy.utils.data.PhysicalSpaceArray.sum", false]], "support() (splinepy.bezier.bezier method)": [[32, "splinepy.bezier.Bezier.support", false]], "support() (splinepy.bezier.bezierbase method)": [[59, "splinepy.bezier.BezierBase.support", false]], "support() (splinepy.bspline.bspline method)": [[89, "splinepy.bspline.BSpline.support", false]], "support() (splinepy.bspline.bsplinebase method)": [[117, "splinepy.bspline.BSplineBase.support", false]], "support() (splinepy.nurbs.nurbs method)": [[430, "splinepy.nurbs.NURBS.support", false]], "support() (splinepy.rational_bezier.rationalbezier method)": [[461, "splinepy.rational_bezier.RationalBezier.support", false]], "support() (splinepy.spline.spline method)": [[516, "splinepy.spline.Spline.support", false]], "support() (splinepy.splinepy_core.pyspline method)": [[582, "splinepy.splinepy_core.PySpline.support", false]], "surface() (in module splinepy.helpme.fit)": [[194, "splinepy.helpme.fit.surface", false]], "surface_circle() (in module splinepy.helpme.create)": [[153, "splinepy.helpme.create.surface_circle", false]], "swapaxes() (splinepy.utils.data.physicalspacearray method)": [[679, "splinepy.utils.data.PhysicalSpaceArray.swapaxes", false]], "sync() (splinepy.splinepy_core.controlpointpointers method)": [[528, "splinepy.splinepy_core.ControlPointPointers.sync", false]], "sync() (splinepy.splinepy_core.weightpointers method)": [[589, "splinepy.splinepy_core.WeightPointers.sync", false]], "sync_rows() (splinepy.splinepy_core.controlpointpointers method)": [[529, "splinepy.splinepy_core.ControlPointPointers.sync_rows", false]], "sync_rows() (splinepy.splinepy_core.weightpointers method)": [[590, "splinepy.splinepy_core.WeightPointers.sync_rows", false]], "take() (splinepy.utils.data.physicalspacearray method)": [[680, "splinepy.utils.data.PhysicalSpaceArray.take", false]], "tilebase (class in splinepy.microstructure.tiles.tile_base)": [[366, "splinepy.microstructure.tiles.tile_base.TileBase", false]], "tiling (splinepy.microstructure.microstructure.microstructure property)": [[293, "splinepy.microstructure.microstructure.Microstructure.tiling", false]], "to_derived() (in module splinepy)": [[620, "splinepy.to_derived", false]], "to_device() (splinepy.utils.data.physicalspacearray method)": [[681, "splinepy.utils.data.PhysicalSpaceArray.to_device", false]], "to_list() (splinepy.io.gismo.additionalblocks method)": [[254, "splinepy.io.gismo.AdditionalBlocks.to_list", false]], "tobytes() (splinepy.utils.data.physicalspacearray method)": [[682, "splinepy.utils.data.PhysicalSpaceArray.tobytes", false]], "todict() (splinepy.bezier.bezier method)": [[33, "splinepy.bezier.Bezier.todict", false]], "todict() (splinepy.bezier.bezierbase method)": [[60, "splinepy.bezier.BezierBase.todict", false]], "todict() (splinepy.bspline.bspline method)": [[90, "splinepy.bspline.BSpline.todict", false]], "todict() (splinepy.bspline.bsplinebase method)": [[118, "splinepy.bspline.BSplineBase.todict", false]], "todict() (splinepy.nurbs.nurbs method)": [[431, "splinepy.nurbs.NURBS.todict", false]], "todict() (splinepy.rational_bezier.rationalbezier method)": [[462, "splinepy.rational_bezier.RationalBezier.todict", false]], "todict() (splinepy.spline.spline method)": [[517, "splinepy.spline.Spline.todict", false]], "tofile() (splinepy.utils.data.physicalspacearray method)": [[683, "splinepy.utils.data.PhysicalSpaceArray.tofile", false]], "tolerance (in module splinepy.settings)": [[467, "splinepy.settings.TOLERANCE", false]], "tolerance (splinepy.splinepy_core.pymultipatch property)": [[560, "splinepy.splinepy_core.PyMultipatch.tolerance", false]], "tolist() (splinepy.utils.data.physicalspacearray method)": [[684, "splinepy.utils.data.PhysicalSpaceArray.tolist", false]], "torus() (in module splinepy.helpme.create)": [[154, "splinepy.helpme.create.torus", false]], "tostring() (splinepy.utils.data.physicalspacearray method)": [[685, "splinepy.utils.data.PhysicalSpaceArray.tostring", false]], "trace() (splinepy.utils.data.physicalspacearray method)": [[686, "splinepy.utils.data.PhysicalSpaceArray.trace", false]], "transpose() (splinepy.utils.data.physicalspacearray method)": [[687, "splinepy.utils.data.PhysicalSpaceArray.transpose", false]], "uniform_query() (in module splinepy.utils.data)": [[715, "splinepy.utils.data.uniform_query", false]], "uniform_refine() (splinepy.bspline.bspline method)": [[91, "splinepy.bspline.BSpline.uniform_refine", false]], "uniform_refine() (splinepy.bspline.bsplinebase method)": [[119, "splinepy.bspline.BSplineBase.uniform_refine", false]], "uniform_refine() (splinepy.nurbs.nurbs method)": [[432, "splinepy.nurbs.NURBS.uniform_refine", false]], "union() (splinepy.spline.requiredproperties class method)": [[472, "splinepy.spline.RequiredProperties.union", false]], "unique() (splinepy.splinepy_core.knotvector method)": [[535, "splinepy.splinepy_core.KnotVector.unique", false]], "unique_knots (splinepy.spline.spline property)": [[518, "splinepy.spline.Spline.unique_knots", false]], "unique_knots() (splinepy.splinepy_core.parameterspace method)": [[538, "splinepy.splinepy_core.ParameterSpace.unique_knots", false]], "update() (splinepy.helpme.visualize.multipatchshowoption method)": [[227, "splinepy.helpme.visualize.MultipatchShowOption.update", false]], "update() (splinepy.helpme.visualize.splineshowoption method)": [[237, "splinepy.helpme.visualize.SplineShowOption.update", false]], "update() (splinepy.utils.data.multipatchdata method)": [[631, "splinepy.utils.data.MultipatchData.update", false]], "update() (splinepy.utils.data.splinedata method)": [[698, "splinepy.utils.data.SplineData.update", false]], "valid_keys() (splinepy.helpme.visualize.multipatchshowoption method)": [[228, "splinepy.helpme.visualize.MultipatchShowOption.valid_keys", false]], "valid_keys() (splinepy.helpme.visualize.splineshowoption method)": [[238, "splinepy.helpme.visualize.SplineShowOption.valid_keys", false]], "valid_queries() (in module splinepy.helpme.check)": [[130, "splinepy.helpme.check.valid_queries", false]], "valid_queries() (splinepy.helpme.check.checker method)": [[128, "splinepy.helpme.check.Checker.valid_queries", false]], "values() (splinepy.helpme.visualize.multipatchshowoption method)": [[229, "splinepy.helpme.visualize.MultipatchShowOption.values", false]], "values() (splinepy.helpme.visualize.splineshowoption method)": [[239, "splinepy.helpme.visualize.SplineShowOption.values", false]], "values() (splinepy.utils.data.multipatchdata method)": [[632, "splinepy.utils.data.MultipatchData.values", false]], "values() (splinepy.utils.data.splinedata method)": [[699, "splinepy.utils.data.SplineData.values", false]], "var() (splinepy.utils.data.physicalspacearray method)": [[688, "splinepy.utils.data.PhysicalSpaceArray.var", false]], "view() (splinepy.utils.data.physicalspacearray method)": [[689, "splinepy.utils.data.PhysicalSpaceArray.view", false]], "volume() (in module splinepy.helpme.integrate)": [[202, "splinepy.helpme.integrate.volume", false]], "volume() (splinepy.helpme.integrate.integrator method)": [[199, "splinepy.helpme.integrate.Integrator.volume", false]], "volumes() (in module splinepy.helpme.extract)": [[181, "splinepy.helpme.extract.volumes", false]], "volumes() (splinepy.helpme.extract.extractor method)": [[169, "splinepy.helpme.extract.Extractor.volumes", false]], "warning() (in module splinepy.utils.log)": [[722, "splinepy.utils.log.warning", false]], "weightpointers (class in splinepy.splinepy_core)": [[584, "splinepy.splinepy_core.WeightPointers", false]], "weights (splinepy.spline.spline property)": [[519, "splinepy.spline.Spline.weights", false]], "whatami (splinepy.spline.spline property)": [[520, "splinepy.spline.Spline.whatami", false]], "whatami (splinepy.splinepy_core.pymultipatch property)": [[561, "splinepy.splinepy_core.PyMultipatch.whatami", false]], "whatami (splinepy.splinepy_core.pyspline property)": [[583, "splinepy.splinepy_core.PySpline.whatami", false]], "ws (splinepy.spline.spline property)": [[521, "splinepy.spline.Spline.ws", false]]}, "objects": {"": [[1, 0, 0, "-", "splinepy"]], "splinepy": [[2, 0, 0, "-", "bezier"], [61, 0, 0, "-", "bspline"], [120, 0, 0, "-", "cli"], [124, 0, 0, "-", "helpme"], [242, 0, 0, "-", "io"], [284, 0, 0, "-", "microstructure"], [373, 0, 0, "-", "multipatch"], [403, 0, 0, "-", "nurbs"], [433, 0, 0, "-", "rational_bezier"], [463, 0, 0, "-", "settings"], [468, 0, 0, "-", "spline"], [522, 0, 0, "-", "splinepy_core"], [620, 4, 1, "", "to_derived"], [621, 0, 0, "-", "utils"]], "splinepy.bezier": [[3, 1, 1, "", "Bezier"], [34, 1, 1, "", "BezierBase"]], "splinepy.bezier.Bezier": [[4, 2, 1, "", "basis"], [5, 2, 1, "", "basis_and_support"], [6, 2, 1, "", "basis_derivative"], [7, 2, 1, "", "basis_derivative_and_support"], [8, 3, 1, "", "bezier"], [9, 3, 1, "", "bspline"], [10, 2, 1, "", "clear"], [11, 2, 1, "", "compose"], [12, 2, 1, "", "composition_derivative"], [13, 2, 1, "", "copy"], [14, 2, 1, "", "current_core_properties"], [15, 2, 1, "", "derivative"], [16, 2, 1, "", "derivative_spline"], [17, 2, 1, "", "elevate_degrees"], [18, 2, 1, "", "evaluate"], [19, 2, 1, "", "export"], [20, 2, 1, "", "extract_dim"], [21, 2, 1, "", "greville_abscissae"], [22, 2, 1, "", "jacobian"], [23, 2, 1, "", "mapper"], [24, 3, 1, "", "nurbs"], [25, 2, 1, "", "proximities"], [26, 3, 1, "", "rationalbezier"], [27, 2, 1, "", "reduce_degrees"], [28, 2, 1, "", "sample"], [29, 2, 1, "", "show"], [30, 2, 1, "", "showable"], [31, 2, 1, "", "split"], [32, 2, 1, "", "support"], [33, 2, 1, "", "todict"]], "splinepy.bezier.BezierBase": [[35, 2, 1, "", "basis"], [36, 2, 1, "", "basis_and_support"], [37, 2, 1, "", "basis_derivative"], [38, 2, 1, "", "basis_derivative_and_support"], [39, 2, 1, "", "clear"], [40, 2, 1, "", "compose"], [41, 2, 1, "", "composition_derivative"], [42, 2, 1, "", "copy"], [43, 2, 1, "", "current_core_properties"], [44, 2, 1, "", "derivative"], [45, 2, 1, "", "derivative_spline"], [46, 2, 1, "", "elevate_degrees"], [47, 2, 1, "", "evaluate"], [48, 2, 1, "", "export"], [49, 2, 1, "", "extract_dim"], [50, 2, 1, "", "greville_abscissae"], [51, 2, 1, "", "jacobian"], [52, 2, 1, "", "mapper"], [53, 2, 1, "", "proximities"], [54, 2, 1, "", "reduce_degrees"], [55, 2, 1, "", "sample"], [56, 2, 1, "", "show"], [57, 2, 1, "", "showable"], [58, 2, 1, "", "split"], [59, 2, 1, "", "support"], [60, 2, 1, "", "todict"]], "splinepy.bspline": [[62, 1, 1, "", "BSpline"], [92, 1, 1, "", "BSplineBase"]], "splinepy.bspline.BSpline": [[63, 2, 1, "", "basis"], [64, 2, 1, "", "basis_and_support"], [65, 2, 1, "", "basis_derivative"], [66, 2, 1, "", "basis_derivative_and_support"], [67, 3, 1, "", "bspline"], [68, 2, 1, "", "clear"], [69, 2, 1, "", "copy"], [70, 2, 1, "", "current_core_properties"], [71, 2, 1, "", "derivative"], [72, 2, 1, "", "elevate_degrees"], [73, 2, 1, "", "evaluate"], [74, 2, 1, "", "export"], [75, 2, 1, "", "extract_bezier_patches"], [76, 2, 1, "", "greville_abscissae"], [77, 2, 1, "", "insert_knots"], [78, 2, 1, "", "jacobian"], [79, 2, 1, "", "knot_insertion_matrix"], [80, 2, 1, "", "mapper"], [81, 2, 1, "", "normalize_knot_vectors"], [82, 3, 1, "", "nurbs"], [83, 2, 1, "", "proximities"], [84, 2, 1, "", "reduce_degrees"], [85, 2, 1, "", "remove_knots"], [86, 2, 1, "", "sample"], [87, 2, 1, "", "show"], [88, 2, 1, "", "showable"], [89, 2, 1, "", "support"], [90, 2, 1, "", "todict"], [91, 2, 1, "", "uniform_refine"]], "splinepy.bspline.BSplineBase": [[93, 2, 1, "", "basis"], [94, 2, 1, "", "basis_and_support"], [95, 2, 1, "", "basis_derivative"], [96, 2, 1, "", "basis_derivative_and_support"], [97, 2, 1, "", "clear"], [98, 2, 1, "", "copy"], [99, 2, 1, "", "current_core_properties"], [100, 2, 1, "", "derivative"], [101, 2, 1, "", "elevate_degrees"], [102, 2, 1, "", "evaluate"], [103, 2, 1, "", "export"], [104, 2, 1, "", "extract_bezier_patches"], [105, 2, 1, "", "greville_abscissae"], [106, 2, 1, "", "insert_knots"], [107, 2, 1, "", "jacobian"], [108, 2, 1, "", "knot_insertion_matrix"], [109, 2, 1, "", "mapper"], [110, 2, 1, "", "normalize_knot_vectors"], [111, 2, 1, "", "proximities"], [112, 2, 1, "", "reduce_degrees"], [113, 2, 1, "", "remove_knots"], [114, 2, 1, "", "sample"], [115, 2, 1, "", "show"], [116, 2, 1, "", "showable"], [117, 2, 1, "", "support"], [118, 2, 1, "", "todict"], [119, 2, 1, "", "uniform_refine"]], "splinepy.cli": [[121, 4, 1, "", "convert"], [122, 4, 1, "", "entry"], [123, 4, 1, "", "show"]], "splinepy.helpme": [[125, 0, 0, "-", "check"], [131, 0, 0, "-", "create"], [155, 0, 0, "-", "extract"], [182, 0, 0, "-", "ffd"], [189, 0, 0, "-", "fit"], [195, 0, 0, "-", "integrate"], [203, 0, 0, "-", "mapper"], [214, 0, 0, "-", "multi_index"], [216, 0, 0, "-", "reparametrize"], [219, 0, 0, "-", "visualize"]], "splinepy.helpme.check": [[126, 1, 1, "", "Checker"], [129, 4, 1, "", "clamped_knot_vectors"], [130, 4, 1, "", "valid_queries"]], "splinepy.helpme.check.Checker": [[127, 2, 1, "", "clamped_knot_vectors"], [128, 2, 1, "", "valid_queries"]], "splinepy.helpme.create": [[132, 1, 1, "", "Creator"], [138, 4, 1, "", "arc"], [139, 4, 1, "", "box"], [140, 4, 1, "", "circle"], [141, 4, 1, "", "cone"], [142, 4, 1, "", "determinant_spline"], [143, 4, 1, "", "disk"], [144, 4, 1, "", "embedded"], [145, 4, 1, "", "extruded"], [146, 4, 1, "", "from_bounds"], [147, 4, 1, "", "line"], [148, 4, 1, "", "parametric_view"], [149, 4, 1, "", "plate"], [150, 4, 1, "", "pyramid"], [151, 4, 1, "", "revolved"], [152, 4, 1, "", "sphere"], [153, 4, 1, "", "surface_circle"], [154, 4, 1, "", "torus"]], "splinepy.helpme.create.Creator": [[133, 2, 1, "", "determinant_spline"], [134, 2, 1, "", "embedded"], [135, 2, 1, "", "extruded"], [136, 2, 1, "", "parametric_view"], [137, 2, 1, "", "revolved"]], "splinepy.helpme.extract": [[156, 1, 1, "", "Extractor"], [170, 4, 1, "", "arrow_data"], [171, 4, 1, "", "bases"], [172, 4, 1, "", "boundaries"], [173, 4, 1, "", "control_edges"], [174, 4, 1, "", "control_faces"], [175, 4, 1, "", "control_mesh"], [176, 4, 1, "", "control_points"], [177, 4, 1, "", "control_volumes"], [178, 4, 1, "", "edges"], [179, 4, 1, "", "faces"], [180, 4, 1, "", "spline"], [181, 4, 1, "", "volumes"]], "splinepy.helpme.extract.Extractor": [[157, 2, 1, "", "arrow_data"], [158, 2, 1, "", "bases"], [159, 2, 1, "", "beziers"], [160, 2, 1, "", "boundaries"], [161, 2, 1, "", "control_edges"], [162, 2, 1, "", "control_faces"], [163, 2, 1, "", "control_mesh"], [164, 2, 1, "", "control_points"], [165, 2, 1, "", "control_volumes"], [166, 2, 1, "", "edges"], [167, 2, 1, "", "faces"], [168, 2, 1, "", "spline"], [169, 2, 1, "", "volumes"]], "splinepy.helpme.ffd": [[183, 1, 1, "", "FFD"]], "splinepy.helpme.ffd.FFD": [[184, 3, 1, "", "mesh"], [185, 3, 1, "", "padding"], [186, 2, 1, "", "show"], [187, 2, 1, "", "showable"], [188, 3, 1, "", "spline"]], "splinepy.helpme.fit": [[190, 4, 1, "", "compute_knot_vector"], [191, 4, 1, "", "curve"], [192, 4, 1, "", "parameterize"], [193, 4, 1, "", "solve_for_control_points"], [194, 4, 1, "", "surface"]], "splinepy.helpme.integrate": [[196, 1, 1, "", "Integrator"], [200, 4, 1, "", "parametric_function"], [201, 4, 1, "", "physical_function"], [202, 4, 1, "", "volume"]], "splinepy.helpme.integrate.Integrator": [[197, 2, 1, "", "parametric_function"], [198, 2, 1, "", "physical_function"], [199, 2, 1, "", "volume"]], "splinepy.helpme.mapper": [[204, 1, 1, "", "Mapper"]], "splinepy.helpme.mapper.Mapper": [[205, 2, 1, "", "basis_function_derivatives"], [206, 2, 1, "", "basis_gradient_and_support"], [207, 2, 1, "", "basis_hessian_and_support"], [208, 2, 1, "", "basis_laplacian_and_support"], [209, 2, 1, "", "divergence"], [210, 2, 1, "", "field_derivatives"], [211, 2, 1, "", "gradient"], [212, 2, 1, "", "hessian"], [213, 2, 1, "", "laplacian"]], "splinepy.helpme.multi_index": [[215, 1, 1, "", "MultiIndex"]], "splinepy.helpme.reparametrize": [[217, 4, 1, "", "flip_axes"], [218, 4, 1, "", "permute_parametric_axes"]], "splinepy.helpme.visualize": [[220, 1, 1, "", "MultipatchShowOption"], [230, 1, 1, "", "SplineShowOption"], [240, 4, 1, "", "make_showable"], [241, 4, 1, "", "show"]], "splinepy.helpme.visualize.MultipatchShowOption": [[221, 2, 1, "", "clear"], [222, 2, 1, "", "copy_valid_options"], [223, 2, 1, "", "get"], [224, 2, 1, "", "items"], [225, 2, 1, "", "keys"], [226, 2, 1, "", "pop"], [227, 2, 1, "", "update"], [228, 2, 1, "", "valid_keys"], [229, 2, 1, "", "values"]], "splinepy.helpme.visualize.SplineShowOption": [[231, 2, 1, "", "clear"], [232, 2, 1, "", "copy_valid_options"], [233, 2, 1, "", "get"], [234, 2, 1, "", "items"], [235, 2, 1, "", "keys"], [236, 2, 1, "", "pop"], [237, 2, 1, "", "update"], [238, 2, 1, "", "valid_keys"], [239, 2, 1, "", "values"]], "splinepy.io": [[243, 0, 0, "-", "cats"], [246, 0, 0, "-", "default"], [249, 0, 0, "-", "gismo"], [257, 0, 0, "-", "iges"], [260, 0, 0, "-", "ioutils"], [267, 0, 0, "-", "irit"], [270, 0, 0, "-", "json"], [273, 0, 0, "-", "mfem"], [279, 0, 0, "-", "npz"], [282, 0, 0, "-", "svg"]], "splinepy.io.cats": [[244, 4, 1, "", "export"], [245, 4, 1, "", "load"]], "splinepy.io.default": [[247, 4, 1, "", "export"], [248, 4, 1, "", "load"]], "splinepy.io.gismo": [[250, 1, 1, "", "AdditionalBlocks"], [255, 4, 1, "", "export"], [256, 4, 1, "", "load"]], "splinepy.io.gismo.AdditionalBlocks": [[251, 2, 1, "", "add_assembly_options"], [252, 2, 1, "", "add_boundary_conditions"], [253, 2, 1, "", "add_function"], [254, 2, 1, "", "to_list"]], "splinepy.io.iges": [[258, 4, 1, "", "export"], [259, 4, 1, "", "load"]], "splinepy.io.ioutils": [[261, 4, 1, "", "abs_fname"], [262, 4, 1, "", "dict_to_spline"], [263, 4, 1, "", "expand_tabs"], [264, 4, 1, "", "form_lines"], [265, 4, 1, "", "make_meaningful"], [266, 4, 1, "", "next_line"]], "splinepy.io.irit": [[268, 4, 1, "", "export"], [269, 4, 1, "", "load"]], "splinepy.io.json": [[271, 4, 1, "", "export"], [272, 4, 1, "", "load"]], "splinepy.io.mfem": [[274, 4, 1, "", "dof_mapping"], [275, 4, 1, "", "export"], [276, 4, 1, "", "export_cartesian"], [277, 4, 1, "", "load"], [278, 4, 1, "", "read_solution"]], "splinepy.io.npz": [[280, 4, 1, "", "export"], [281, 4, 1, "", "load"]], "splinepy.io.svg": [[283, 4, 1, "", "export"]], "splinepy.microstructure": [[285, 0, 0, "-", "microstructure"], [294, 0, 0, "-", "tiles"]], "splinepy.microstructure.microstructure": [[286, 1, 1, "", "Microstructure"]], "splinepy.microstructure.microstructure.Microstructure": [[287, 2, 1, "", "create"], [288, 3, 1, "", "deformation_function"], [289, 3, 1, "", "microtile"], [290, 3, 1, "", "parameter_sensitivity_function"], [291, 3, 1, "", "parametrization_function"], [292, 2, 1, "", "show"], [293, 3, 1, "", "tiling"]], "splinepy.microstructure.tiles": [[295, 0, 0, "-", "armadillo"], [300, 4, 1, "", "by_dim"], [301, 0, 0, "-", "chi"], [306, 0, 0, "-", "cross_2d"], [311, 0, 0, "-", "cross_3d"], [316, 0, 0, "-", "cross_3d_linear"], [321, 0, 0, "-", "cube_void"], [326, 0, 0, "-", "double_lattice"], [331, 0, 0, "-", "ellips_v_oid"], [336, 4, 1, "", "everything"], [337, 4, 1, "", "get"], [338, 0, 0, "-", "hollow_cube"], [343, 0, 0, "-", "hollow_octagon"], [348, 0, 0, "-", "hollow_octagon_extrude"], [354, 0, 0, "-", "inverse_cross_3d"], [359, 4, 1, "", "show"], [360, 0, 0, "-", "snappy"], [365, 0, 0, "-", "tile_base"]], "splinepy.microstructure.tiles.armadillo": [[296, 1, 1, "", "Armadillo"]], "splinepy.microstructure.tiles.armadillo.Armadillo": [[297, 2, 1, "", "check_param_derivatives"], [298, 2, 1, "", "check_params"], [299, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.chi": [[302, 1, 1, "", "Chi"]], "splinepy.microstructure.tiles.chi.Chi": [[303, 2, 1, "", "check_param_derivatives"], [304, 2, 1, "", "check_params"], [305, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.cross_2d": [[307, 1, 1, "", "Cross2D"]], "splinepy.microstructure.tiles.cross_2d.Cross2D": [[308, 2, 1, "", "check_param_derivatives"], [309, 2, 1, "", "check_params"], [310, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.cross_3d": [[312, 1, 1, "", "Cross3D"]], "splinepy.microstructure.tiles.cross_3d.Cross3D": [[313, 2, 1, "", "check_param_derivatives"], [314, 2, 1, "", "check_params"], [315, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.cross_3d_linear": [[317, 1, 1, "", "Cross3DLinear"]], "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear": [[318, 2, 1, "", "check_param_derivatives"], [319, 2, 1, "", "check_params"], [320, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.cube_void": [[322, 1, 1, "", "CubeVoid"]], "splinepy.microstructure.tiles.cube_void.CubeVoid": [[323, 2, 1, "", "check_param_derivatives"], [324, 2, 1, "", "check_params"], [325, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.double_lattice": [[327, 1, 1, "", "DoubleLattice"]], "splinepy.microstructure.tiles.double_lattice.DoubleLattice": [[328, 2, 1, "", "check_param_derivatives"], [329, 2, 1, "", "check_params"], [330, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.ellips_v_oid": [[332, 1, 1, "", "EllipsVoid"]], "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid": [[333, 2, 1, "", "check_param_derivatives"], [334, 2, 1, "", "check_params"], [335, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.hollow_cube": [[339, 1, 1, "", "HollowCube"]], "splinepy.microstructure.tiles.hollow_cube.HollowCube": [[340, 2, 1, "", "check_param_derivatives"], [341, 2, 1, "", "check_params"], [342, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.hollow_octagon": [[344, 1, 1, "", "HollowOctagon"]], "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon": [[345, 2, 1, "", "check_param_derivatives"], [346, 2, 1, "", "check_params"], [347, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.hollow_octagon_extrude": [[349, 1, 1, "", "HollowOctagonExtrude"]], "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude": [[350, 2, 1, "", "check_param_derivatives"], [351, 2, 1, "", "check_params"], [352, 2, 1, "", "closing_tile"], [353, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.inverse_cross_3d": [[355, 1, 1, "", "InverseCross3D"]], "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D": [[356, 2, 1, "", "check_param_derivatives"], [357, 2, 1, "", "check_params"], [358, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.snappy": [[361, 1, 1, "", "Snappy"]], "splinepy.microstructure.tiles.snappy.Snappy": [[362, 2, 1, "", "check_param_derivatives"], [363, 2, 1, "", "check_params"], [364, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.tile_base": [[366, 1, 1, "", "TileBase"]], "splinepy.microstructure.tiles.tile_base.TileBase": [[367, 2, 1, "", "check_param_derivatives"], [368, 2, 1, "", "check_params"], [369, 2, 1, "", "create_tile"], [370, 5, 1, "", "dim"], [371, 5, 1, "", "evaluation_points"], [372, 5, 1, "", "para_dim"]], "splinepy.multipatch": [[374, 1, 1, "", "Multipatch"]], "splinepy.multipatch.Multipatch": [[375, 2, 1, "", "add_fields"], [376, 3, 1, "", "boundaries"], [377, 2, 1, "", "boundaries_from_continuity"], [378, 2, 1, "", "boundary_from_function"], [379, 2, 1, "", "boundary_multipatch"], [380, 2, 1, "", "boundary_patch_ids"], [381, 2, 1, "", "clear"], [382, 2, 1, "", "combine_boundaries"], [383, 2, 1, "", "control_point_offsets"], [384, 2, 1, "", "determine_interfaces"], [385, 3, 1, "", "dim"], [386, 2, 1, "", "evaluate"], [387, 3, 1, "", "extract"], [388, 3, 1, "", "fields"], [389, 2, 1, "", "get_interfaces"], [390, 2, 1, "", "interface_orientations"], [391, 3, 1, "", "interfaces"], [392, 3, 1, "", "para_dim"], [393, 3, 1, "", "patches"], [394, 2, 1, "", "sample"], [395, 2, 1, "", "set_boundary"], [396, 2, 1, "", "set_interfaces"], [397, 2, 1, "", "show"], [398, 3, 1, "", "show_options"], [399, 2, 1, "", "showable"], [400, 3, 1, "", "spline_data"], [401, 2, 1, "", "sub_multipatch"], [402, 3, 1, "", "sub_patch_centers"]], "splinepy.nurbs": [[404, 1, 1, "", "NURBS"]], "splinepy.nurbs.NURBS": [[405, 2, 1, "", "basis"], [406, 2, 1, "", "basis_and_support"], [407, 2, 1, "", "basis_derivative"], [408, 2, 1, "", "basis_derivative_and_support"], [409, 2, 1, "", "clear"], [410, 2, 1, "", "copy"], [411, 2, 1, "", "current_core_properties"], [412, 2, 1, "", "derivative"], [413, 2, 1, "", "elevate_degrees"], [414, 2, 1, "", "evaluate"], [415, 2, 1, "", "export"], [416, 2, 1, "", "extract_bezier_patches"], [417, 2, 1, "", "greville_abscissae"], [418, 2, 1, "", "insert_knots"], [419, 2, 1, "", "jacobian"], [420, 2, 1, "", "knot_insertion_matrix"], [421, 2, 1, "", "mapper"], [422, 2, 1, "", "normalize_knot_vectors"], [423, 3, 1, "", "nurbs"], [424, 2, 1, "", "proximities"], [425, 2, 1, "", "reduce_degrees"], [426, 2, 1, "", "remove_knots"], [427, 2, 1, "", "sample"], [428, 2, 1, "", "show"], [429, 2, 1, "", "showable"], [430, 2, 1, "", "support"], [431, 2, 1, "", "todict"], [432, 2, 1, "", "uniform_refine"]], "splinepy.rational_bezier": [[434, 1, 1, "", "RationalBezier"]], "splinepy.rational_bezier.RationalBezier": [[435, 2, 1, "", "basis"], [436, 2, 1, "", "basis_and_support"], [437, 2, 1, "", "basis_derivative"], [438, 2, 1, "", "basis_derivative_and_support"], [439, 2, 1, "", "clear"], [440, 2, 1, "", "compose"], [441, 2, 1, "", "composition_derivative"], [442, 2, 1, "", "copy"], [443, 2, 1, "", "current_core_properties"], [444, 2, 1, "", "derivative"], [445, 2, 1, "", "derivative_spline"], [446, 2, 1, "", "elevate_degrees"], [447, 2, 1, "", "evaluate"], [448, 2, 1, "", "export"], [449, 2, 1, "", "extract_dim"], [450, 2, 1, "", "greville_abscissae"], [451, 2, 1, "", "jacobian"], [452, 2, 1, "", "mapper"], [453, 3, 1, "", "nurbs"], [454, 2, 1, "", "proximities"], [455, 3, 1, "", "rationalbezier"], [456, 2, 1, "", "reduce_degrees"], [457, 2, 1, "", "sample"], [458, 2, 1, "", "show"], [459, 2, 1, "", "showable"], [460, 2, 1, "", "split"], [461, 2, 1, "", "support"], [462, 2, 1, "", "todict"]], "splinepy.settings": [[464, 6, 1, "", "CHECK_BOUNDS"], [465, 6, 1, "", "NAME_TO_TYPE"], [466, 6, 1, "", "NTHREADS"], [467, 6, 1, "", "TOLERANCE"]], "splinepy.spline": [[469, 1, 1, "", "RequiredProperties"], [473, 1, 1, "", "Spline"]], "splinepy.spline.RequiredProperties": [[470, 2, 1, "", "intersection"], [471, 2, 1, "", "of"], [472, 2, 1, "", "union"]], "splinepy.spline.Spline": [[474, 2, 1, "", "basis"], [475, 2, 1, "", "basis_and_support"], [476, 2, 1, "", "basis_derivative"], [477, 2, 1, "", "basis_derivative_and_support"], [478, 3, 1, "", "check"], [479, 2, 1, "", "clear"], [480, 3, 1, "", "control_mesh_resolutions"], [481, 3, 1, "", "control_point_bounds"], [482, 3, 1, "", "control_points"], [483, 2, 1, "", "copy"], [484, 3, 1, "", "cps"], [485, 3, 1, "", "create"], [486, 2, 1, "", "current_core_properties"], [487, 3, 1, "", "degrees"], [488, 2, 1, "", "derivative"], [489, 3, 1, "", "dim"], [490, 3, 1, "", "ds"], [491, 2, 1, "", "elevate_degrees"], [492, 2, 1, "", "evaluate"], [493, 2, 1, "", "export"], [494, 3, 1, "", "extract"], [495, 2, 1, "", "greville_abscissae"], [496, 3, 1, "", "has_knot_vectors"], [497, 3, 1, "", "integrate"], [498, 3, 1, "", "is_rational"], [499, 2, 1, "", "jacobian"], [500, 3, 1, "", "knot_multiplicities"], [501, 3, 1, "", "knot_vectors"], [502, 3, 1, "", "kvs"], [503, 2, 1, "", "mapper"], [504, 3, 1, "", "multi_index"], [505, 3, 1, "", "name"], [506, 3, 1, "", "para_dim"], [507, 3, 1, "", "parametric_bounds"], [508, 2, 1, "", "proximities"], [509, 2, 1, "", "reduce_degrees"], [510, 3, 1, "", "required_properties"], [511, 2, 1, "", "sample"], [512, 2, 1, "", "show"], [513, 3, 1, "", "show_options"], [514, 2, 1, "", "showable"], [515, 3, 1, "", "spline_data"], [516, 2, 1, "", "support"], [517, 2, 1, "", "todict"], [518, 3, 1, "", "unique_knots"], [519, 3, 1, "", "weights"], [520, 3, 1, "", "whatami"], [521, 3, 1, "", "ws"]], "splinepy.splinepy_core": [[523, 1, 1, "", "ControlPointPointers"], [530, 1, 1, "", "KnotVector"], [536, 1, 1, "", "ParameterSpace"], [539, 1, 1, "", "PyMultipatch"], [562, 1, 1, "", "PySpline"], [584, 1, 1, "", "WeightPointers"], [591, 4, 1, "", "add"], [592, 4, 1, "", "annul_core"], [593, 4, 1, "", "bezier_extraction_matrix"], [594, 4, 1, "", "boundaries_from_continuity"], [595, 4, 1, "", "boundary_centers"], [596, 4, 1, "", "build_type"], [597, 4, 1, "", "compose"], [598, 4, 1, "", "compose_sensitivities"], [599, 4, 1, "", "composition_derivative"], [600, 4, 1, "", "core_id"], [601, 4, 1, "", "core_ref_count"], [602, 4, 1, "", "derivative_spline"], [603, 4, 1, "", "export_iges"], [604, 4, 1, "", "extract_all_boundary_splines"], [605, 4, 1, "", "extract_bezier_patches"], [606, 4, 1, "", "extract_boundaries"], [607, 4, 1, "", "extract_dim"], [608, 4, 1, "", "global_knot_insertion_matrix"], [609, 4, 1, "", "has_core"], [610, 4, 1, "", "insert_knots"], [611, 4, 1, "", "interfaces_from_boundary_centers"], [612, 4, 1, "", "is_minimal"], [613, 4, 1, "", "knot_insertion_matrix"], [614, 4, 1, "", "multiply"], [615, 4, 1, "", "null_spline"], [616, 4, 1, "", "read_iges"], [617, 4, 1, "", "remove_knots"], [618, 4, 1, "", "same_spline_with_knot_vectors"], [619, 4, 1, "", "split"]], "splinepy.splinepy_core.ControlPointPointers": [[524, 2, 1, "", "dim"], [525, 2, 1, "", "len"], [526, 2, 1, "", "set_row"], [527, 2, 1, "", "set_rows"], [528, 2, 1, "", "sync"], [529, 2, 1, "", "sync_rows"]], "splinepy.splinepy_core.KnotVector": [[531, 2, 1, "", "find_span"], [532, 2, 1, "", "multiplicities"], [533, 2, 1, "", "numpy"], [534, 2, 1, "", "scale"], [535, 2, 1, "", "unique"]], "splinepy.splinepy_core.ParameterSpace": [[537, 2, 1, "", "copy"], [538, 2, 1, "", "unique_knots"]], "splinepy.splinepy_core.PyMultipatch": [[540, 2, 1, "", "add_fields"], [541, 2, 1, "", "boundary_multipatch"], [542, 2, 1, "", "boundary_patch_ids"], [543, 2, 1, "", "clear"], [544, 2, 1, "", "control_point_offsets"], [545, 3, 1, "", "control_points"], [546, 3, 1, "", "dim"], [547, 2, 1, "", "evaluate"], [548, 2, 1, "", "fields"], [549, 2, 1, "", "get_interfaces"], [550, 2, 1, "", "interface_orientations"], [551, 3, 1, "", "n_default_threads"], [552, 3, 1, "", "name"], [553, 3, 1, "", "para_dim"], [554, 3, 1, "", "patches"], [555, 3, 1, "", "same_parametric_bounds"], [556, 2, 1, "", "sample"], [557, 2, 1, "", "set_interfaces"], [558, 2, 1, "", "sub_multipatch"], [559, 2, 1, "", "sub_patch_centers"], [560, 3, 1, "", "tolerance"], [561, 3, 1, "", "whatami"]], "splinepy.splinepy_core.PySpline": [[563, 2, 1, "", "basis"], [564, 2, 1, "", "basis_and_support"], [565, 2, 1, "", "basis_derivative"], [566, 2, 1, "", "basis_derivative_and_support"], [567, 3, 1, "", "control_mesh_resolutions"], [568, 2, 1, "", "current_core_properties"], [569, 2, 1, "", "derivative"], [570, 3, 1, "", "dim"], [571, 2, 1, "", "elevate_degrees"], [572, 2, 1, "", "evaluate"], [573, 3, 1, "", "has_knot_vectors"], [574, 3, 1, "", "is_rational"], [575, 2, 1, "", "jacobian"], [576, 3, 1, "", "name"], [577, 3, 1, "", "para_dim"], [578, 3, 1, "", "parametric_bounds"], [579, 2, 1, "", "proximities"], [580, 2, 1, "", "reduce_degrees"], [581, 2, 1, "", "sample"], [582, 2, 1, "", "support"], [583, 3, 1, "", "whatami"]], "splinepy.splinepy_core.WeightPointers": [[585, 2, 1, "", "dim"], [586, 2, 1, "", "len"], [587, 2, 1, "", "set_row"], [588, 2, 1, "", "set_rows"], [589, 2, 1, "", "sync"], [590, 2, 1, "", "sync_rows"]], "splinepy.utils": [[622, 0, 0, "-", "data"], [716, 0, 0, "-", "log"]], "splinepy.utils.data": [[623, 1, 1, "", "MultipatchData"], [633, 1, 1, "", "PhysicalSpaceArray"], [690, 1, 1, "", "SplineData"], [700, 1, 1, "", "SplineDataAdaptor"], [711, 4, 1, "", "cartesian_product"], [712, 4, 1, "", "enforce_contiguous"], [713, 4, 1, "", "enforce_contiguous_values"], [714, 4, 1, "", "make_matrix"], [715, 4, 1, "", "uniform_query"]], "splinepy.utils.data.MultipatchData": [[624, 2, 1, "", "as_arrow"], [625, 2, 1, "", "as_scalar"], [626, 2, 1, "", "clear"], [627, 2, 1, "", "get"], [628, 2, 1, "", "items"], [629, 2, 1, "", "keys"], [630, 2, 1, "", "pop"], [631, 2, 1, "", "update"], [632, 2, 1, "", "values"]], "splinepy.utils.data.PhysicalSpaceArray": [[634, 2, 1, "", "all"], [635, 2, 1, "", "any"], [636, 2, 1, "", "argmax"], [637, 2, 1, "", "argmin"], [638, 2, 1, "", "argpartition"], [639, 2, 1, "", "argsort"], [640, 2, 1, "", "astype"], [641, 2, 1, "", "byteswap"], [642, 2, 1, "", "choose"], [643, 2, 1, "", "clip"], [644, 2, 1, "", "compress"], [645, 2, 1, "", "conj"], [646, 2, 1, "", "conjugate"], [647, 2, 1, "", "copy"], [648, 2, 1, "", "cumprod"], [649, 2, 1, "", "cumsum"], [650, 2, 1, "", "diagonal"], [651, 2, 1, "", "dot"], [652, 2, 1, "", "dump"], [653, 2, 1, "", "dumps"], [654, 2, 1, "", "fill"], [655, 2, 1, "", "flatten"], [656, 2, 1, "", "full_row_indices"], [657, 2, 1, "", "getfield"], [658, 2, 1, "", "item"], [659, 2, 1, "", "max"], [660, 2, 1, "", "mean"], [661, 2, 1, "", "min"], [662, 2, 1, "", "nonzero"], [663, 2, 1, "", "partition"], [664, 2, 1, "", "prod"], [665, 2, 1, "", "put"], [666, 2, 1, "", "ravel"], [667, 2, 1, "", "repeat"], [668, 2, 1, "", "reshape"], [669, 2, 1, "", "resize"], [670, 2, 1, "", "round"], [671, 2, 1, "", "row_indices"], [672, 2, 1, "", "searchsorted"], [673, 2, 1, "", "setfield"], [674, 2, 1, "", "setflags"], [675, 2, 1, "", "sort"], [676, 2, 1, "", "squeeze"], [677, 2, 1, "", "std"], [678, 2, 1, "", "sum"], [679, 2, 1, "", "swapaxes"], [680, 2, 1, "", "take"], [681, 2, 1, "", "to_device"], [682, 2, 1, "", "tobytes"], [683, 2, 1, "", "tofile"], [684, 2, 1, "", "tolist"], [685, 2, 1, "", "tostring"], [686, 2, 1, "", "trace"], [687, 2, 1, "", "transpose"], [688, 2, 1, "", "var"], [689, 2, 1, "", "view"]], "splinepy.utils.data.SplineData": [[691, 2, 1, "", "as_arrow"], [692, 2, 1, "", "as_scalar"], [693, 2, 1, "", "clear"], [694, 2, 1, "", "get"], [695, 2, 1, "", "items"], [696, 2, 1, "", "keys"], [697, 2, 1, "", "pop"], [698, 2, 1, "", "update"], [699, 2, 1, "", "values"]], "splinepy.utils.data.SplineDataAdaptor": [[701, 5, 1, "", "arrow_data_only"], [702, 2, 1, "", "as_vertex_data"], [703, 5, 1, "", "data"], [704, 5, 1, "", "function"], [705, 5, 1, "", "has_evaluate"], [706, 5, 1, "", "has_function"], [707, 5, 1, "", "has_locations"], [708, 5, 1, "", "is_spline"], [709, 5, 1, "", "locations"], [710, 5, 1, "", "parametric_bounds"]], "splinepy.utils.log": [[717, 4, 1, "", "configure"], [718, 4, 1, "", "debug"], [719, 4, 1, "", "error"], [720, 4, 1, "", "info"], [721, 4, 1, "", "prepend_log"], [722, 4, 1, "", "warning"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute", "6": "py:data"}, "terms": {"": [0, 3, 11, 12, 25, 40, 41, 53, 62, 83, 91, 111, 119, 135, 145, 183, 185, 204, 243, 252, 253, 322, 332, 404, 424, 432, 434, 440, 441, 454, 508, 658, 673, 682, 683, 685, 687, 714, 724, 726], "0": [3, 31, 34, 58, 62, 79, 81, 92, 108, 110, 133, 138, 140, 141, 142, 143, 149, 152, 154, 166, 178, 183, 194, 251, 252, 283, 299, 310, 315, 320, 330, 347, 352, 353, 358, 364, 379, 391, 404, 420, 422, 434, 460, 641, 650, 654, 656, 657, 658, 663, 669, 670, 673, 674, 675, 677, 678, 682, 684, 685, 686, 687, 688, 724, 726], "000": 673, "01": [299, 310, 315, 320, 352, 353], "05": 283, "0d": 684, "0e": 673, "0x1": 641, "0x100": 641, "0x2233": 641, "0x3322": 641, "1": [3, 4, 5, 6, 7, 15, 21, 25, 31, 32, 34, 35, 36, 37, 38, 44, 50, 53, 58, 59, 62, 63, 64, 65, 66, 71, 76, 79, 81, 82, 83, 89, 91, 92, 93, 94, 95, 96, 100, 105, 108, 110, 111, 117, 119, 132, 136, 138, 140, 143, 147, 148, 149, 152, 154, 160, 161, 172, 173, 190, 191, 193, 194, 204, 206, 207, 208, 212, 251, 275, 279, 283, 310, 315, 320, 325, 335, 347, 352, 353, 358, 364, 379, 380, 391, 404, 405, 406, 407, 408, 412, 417, 420, 422, 424, 430, 432, 434, 435, 436, 437, 438, 444, 450, 454, 460, 461, 466, 474, 475, 476, 477, 485, 488, 495, 508, 516, 519, 521, 541, 542, 550, 563, 564, 565, 566, 569, 572, 575, 579, 581, 582, 594, 604, 638, 639, 640, 641, 650, 654, 655, 657, 658, 663, 664, 669, 673, 674, 675, 682, 684, 685, 686, 687, 726], "10": [0, 275, 473, 668], "100": [166, 178, 251, 724], "101": 251, "102": 283, "103": 251, "11": [251, 467, 668], "11144513": 711, "1156": 724, "12": 657, "123": 658, "126": 724, "128": 724, "13": 724, "13090": 641, "14": 251, "15": [364, 724], "156": 283, "157": 283, "16": 657, "19": 685, "1910": 726, "194": 726, "1996": 726, "1999": 726, "1d": [684, 715, 726], "1e": [467, 724], "2": [0, 3, 25, 53, 62, 79, 83, 92, 108, 111, 140, 143, 146, 149, 152, 154, 162, 167, 174, 179, 194, 204, 212, 251, 263, 283, 325, 335, 347, 352, 353, 364, 391, 404, 420, 424, 434, 454, 481, 507, 508, 640, 641, 654, 655, 657, 658, 663, 669, 674, 675, 682, 684, 687, 726], "20": [25, 53, 83, 111, 424, 454, 508], "200": 726, "2001": 726, "2005": 726, "201": [724, 726], "2017": [133, 142], "2021": [133, 142], "22": 663, "25": 404, "256": [641, 724], "293": 724, "2d": [273, 277, 302, 376, 684, 700, 711, 715, 724, 726], "2j": [160, 172], "2u": 726, "3": [0, 3, 62, 132, 140, 167, 169, 177, 179, 181, 251, 275, 283, 299, 325, 335, 364, 391, 404, 434, 641, 654, 655, 658, 663, 669, 673, 674, 675, 682, 684, 687, 726], "32": 657, "323": 673, "33": 724, "333": 251, "360": [141, 143, 152], "39": 726, "3d": [0, 277, 297, 303, 308, 313, 318, 323, 328, 333, 339, 340, 345, 349, 350, 356, 362, 367, 726], "4": [143, 154, 283, 310, 325, 335, 358, 391, 485, 655, 657, 663, 675, 684, 687, 726], "41": 726, "4135": 726, "414": 724, "4195": 726, "49": [299, 310, 315, 320, 352, 353], "49445693": 711, "5": [275, 283, 330, 347, 404, 434, 640, 674, 726], "50": 724, "513": 266, "587": 724, "5e": 673, "6": [315, 320, 658, 726], "634": 255, "65": 724, "7": [658, 674, 726], "707": 724, "75": 404, "78": 724, "8": [0, 657, 674, 724, 726], "87": 724, "8755": 641, "9": [650, 658, 674, 724], "90": 138, "9091": 724, "911": 724, "955": 724, "A": [3, 62, 79, 92, 108, 133, 142, 266, 339, 404, 420, 434, 640, 641, 652, 655, 657, 658, 663, 674, 675, 682, 685, 700, 714], "As": [92, 683, 726], "At": 726, "BE": [133, 142], "By": [91, 119, 432, 434, 640, 657, 726], "For": [0, 3, 25, 34, 53, 62, 83, 92, 111, 404, 424, 434, 454, 473, 508, 658, 668, 672, 684, 724, 726], "If": [11, 21, 25, 40, 50, 53, 76, 83, 92, 105, 111, 127, 129, 134, 135, 136, 144, 145, 148, 167, 179, 186, 217, 218, 247, 248, 252, 253, 255, 261, 266, 271, 287, 369, 378, 391, 395, 417, 424, 440, 450, 454, 465, 470, 472, 495, 508, 627, 640, 641, 657, 663, 669, 683, 684, 694, 700, 711, 712, 713, 714, 721, 726], "In": [92, 167, 179, 183, 290, 291, 299, 310, 315, 320, 342, 347, 352, 353, 364, 465, 650, 663, 711, 724], "It": [79, 108, 185, 198, 201, 266, 420, 723, 726], "One": [299, 347, 352, 353, 643, 726], "That": 352, "The": [25, 34, 53, 83, 111, 138, 140, 143, 160, 172, 183, 198, 201, 204, 255, 299, 310, 315, 320, 325, 332, 335, 391, 424, 454, 473, 508, 641, 652, 654, 655, 657, 663, 669, 673, 674, 675, 682, 683, 684, 724, 726], "Then": 726, "There": [674, 724, 726], "These": [186, 674, 726], "To": [0, 183, 386, 640, 700, 726], "Will": [136, 148, 292, 315, 320, 473], "With": [25, 53, 62, 83, 111, 204, 424, 454, 508, 714, 726], "_": [62, 204, 404, 434, 726], "__call__": 471, "__getitem__": [215, 471], "__init__": [3, 34, 62, 92, 294, 404, 434, 465], "__qualname__": 505, "__setitem__": [227, 237, 631, 698], "_closing_til": [315, 320], "_imag": 283, "_io": 266, "_n": 726, "_set": 0, "_spline": 188, "_weight": [519, 521], "a_": 204, "a_i": 204, "a_list": 684, "a_tolist": 684, "aabb": [25, 53, 83, 111, 424, 454, 508], "abbrevi": 0, "abcissa": 724, "abl": 724, "about": [133, 142, 674, 724], "abov": [251, 252, 253, 669, 724, 726], "above_text": 726, "abs_fnam": 723, "abscissa": [21, 50, 76, 105, 417, 450, 495], "absolut": [261, 283, 376], "abspath": 261, "abstract": 468, "acceler": 464, "accept": [359, 726], "access": [204, 504, 658, 674, 724], "accord": [184, 674], "accordingli": [3, 62, 404, 434, 700], "achiev": [164, 165, 176, 217, 404], "across": 726, "act": [322, 332], "activ": [0, 255], "actual": [674, 675, 726], "adamm": [322, 332], "adapt": 711, "adata_edg": [157, 170], "adata_nam": [157, 170], "add": [134, 144, 375, 395, 723, 726], "add_assembly_opt": 723, "add_boundary_condit": 723, "add_field": 723, "add_funct": 723, "addit": [34, 191, 194, 250, 256, 404, 724, 726], "addition": [684, 726], "additional_block": 255, "additionalblock": 723, "addon": 726, "adequ": 192, "adjac": [21, 50, 76, 105, 390, 417, 450, 495], "adjust": 241, "admiss": 375, "affect": 674, "after": 726, "again": [34, 726], "aid": 726, "algorithm": [663, 675], "alia": 685, "align": 674, "all": [3, 11, 33, 34, 40, 60, 62, 75, 79, 81, 82, 90, 91, 92, 104, 108, 110, 118, 119, 158, 159, 160, 166, 171, 172, 178, 221, 231, 255, 269, 297, 300, 303, 308, 313, 318, 323, 325, 328, 333, 335, 336, 340, 345, 350, 356, 362, 367, 369, 378, 379, 382, 388, 404, 416, 420, 422, 431, 432, 434, 440, 462, 470, 472, 473, 517, 640, 645, 654, 663, 665, 674, 675, 684, 723, 724, 726], "all_knot": [166, 178], "allclos": [79, 108, 420, 724], "alloc": [251, 640], "allow": [126, 156, 166, 178, 434, 640, 668, 724, 726], "almost": 684, "alon": 700, "along": [28, 31, 55, 58, 79, 86, 92, 108, 114, 135, 143, 145, 154, 325, 335, 394, 420, 427, 457, 460, 511, 636, 637, 644, 648, 649, 659, 660, 661, 663, 675, 677, 686, 688], "alpha": [12, 41, 241, 441, 726], "also": [0, 3, 11, 25, 34, 40, 53, 62, 83, 111, 123, 127, 129, 194, 198, 201, 210, 404, 424, 434, 440, 454, 508, 712, 713, 723, 724, 726], "altern": [687, 724], "although": [3, 62, 404, 434, 684], "alwai": [34, 136, 148, 223, 233, 627, 640, 654, 669, 683, 694, 726], "am": 520, "amax": 659, "ambient": 726, "amin": 661, "an": [11, 12, 40, 41, 133, 135, 137, 140, 142, 145, 151, 183, 283, 322, 332, 335, 358, 382, 391, 404, 434, 440, 441, 473, 641, 642, 643, 653, 657, 658, 663, 667, 668, 669, 675, 680, 683, 684, 687, 712, 713, 724], "analysi": [724, 726], "analyst": 726, "angl": [137, 138, 141, 143, 151, 152, 154, 305, 377, 724], "ani": [25, 53, 83, 111, 186, 359, 375, 424, 454, 465, 467, 508, 640, 682, 700, 723, 724, 726], "annul_cor": 723, "anoth": [0, 121, 473, 669, 674, 724], "answer": [520, 711], "anyth": 400, "api": [674, 724], "appar": 726, "appear": [640, 726], "append": [255, 283], "appli": [183, 184, 252, 299, 310, 315, 320, 325, 335, 342, 347, 352, 353, 364, 630, 684, 697, 726], "applic": [81, 110, 137, 151, 186, 209, 218, 422, 700, 714, 723, 726], "appreci": 0, "appropri": [674, 700, 723], "approxim": [133, 142, 191, 192, 193, 194, 283, 714], "ar": [0, 3, 13, 19, 21, 25, 34, 42, 48, 50, 53, 62, 69, 74, 76, 77, 79, 83, 85, 92, 98, 103, 105, 106, 108, 111, 113, 121, 128, 130, 136, 148, 154, 167, 179, 183, 186, 191, 192, 193, 194, 204, 210, 241, 252, 255, 275, 279, 283, 299, 310, 315, 320, 325, 330, 335, 347, 353, 358, 364, 376, 377, 386, 391, 393, 395, 404, 410, 415, 417, 418, 420, 424, 426, 434, 442, 448, 450, 454, 483, 493, 495, 505, 508, 640, 641, 643, 657, 658, 662, 663, 669, 674, 683, 684, 700, 712, 713, 723, 724], "arang": 671, "arbitrari": [186, 271, 724, 726], "arc": [434, 723], "architectur": 726, "archiv": 683, "area": [669, 674], "arg": [0, 34, 92, 121, 123, 226, 236, 264, 647, 658, 689], "arg0": 531, "argmax": 723, "argmin": 723, "argpars": [121, 123], "argpartit": [663, 723], "argsort": [675, 723], "argument": [0, 3, 11, 34, 40, 62, 79, 92, 108, 134, 135, 137, 144, 145, 151, 160, 161, 162, 163, 164, 165, 166, 167, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 205, 210, 404, 420, 434, 440, 658, 663, 668, 669, 675, 687, 724, 726], "arithmet": 658, "armadillo": 723, "around": [137, 138, 140, 151, 152, 154, 283, 305, 325, 335, 670], "arr": [656, 671], "arr_t": 640, "arrai": [4, 5, 6, 7, 15, 16, 18, 22, 25, 28, 31, 32, 35, 36, 37, 38, 44, 45, 47, 51, 53, 55, 58, 59, 62, 63, 64, 65, 66, 71, 73, 78, 79, 83, 86, 89, 93, 94, 95, 96, 100, 102, 107, 108, 111, 114, 117, 128, 130, 146, 147, 190, 191, 192, 193, 194, 199, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 241, 274, 297, 299, 303, 305, 308, 310, 313, 315, 318, 320, 323, 325, 328, 330, 333, 335, 340, 345, 347, 350, 353, 356, 358, 362, 364, 367, 376, 378, 382, 384, 386, 390, 391, 395, 405, 406, 407, 408, 412, 414, 419, 420, 424, 427, 430, 434, 435, 436, 437, 438, 444, 445, 447, 451, 454, 457, 460, 461, 473, 474, 475, 476, 477, 488, 492, 499, 500, 508, 511, 516, 519, 521, 533, 624, 633, 638, 639, 640, 641, 642, 643, 644, 647, 650, 652, 653, 654, 655, 657, 658, 660, 663, 664, 666, 667, 668, 669, 673, 674, 675, 677, 678, 679, 680, 682, 683, 684, 686, 687, 688, 691, 700, 702, 711, 712, 713, 715, 724, 726], "arrang": 726, "arrow": [283, 624, 691, 700, 726], "arrow_data": [723, 726], "arrow_data_color": 726, "arrow_data_on": 726, "arrow_data_onli": 723, "arrow_data_scal": 726, "arrow_data_to_origin": 726, "arrow_data_toler": 283, "arrow_head_length": 283, "arrow_head_width": 283, "arrow_headaxis_length": 283, "arrow_width": 283, "as_arrai": 714, "as_arrow": 723, "as_base64": 255, "as_method": 721, "as_scalar": 723, "as_vertex_data": 723, "asarrai": 712, "ask": 726, "aspect": 283, "assembl": 255, "assembli": [210, 250, 251], "assert": 724, "assign": [271, 378, 395, 654, 724], "associ": [11, 40, 92, 204, 440, 714], "associated_queri": [191, 194], "assum": [204, 726], "astyp": 723, "attain": [252, 726], "attribut": [3, 34, 62, 92, 183, 255, 286, 290, 291, 296, 302, 307, 312, 317, 322, 327, 332, 339, 344, 349, 355, 361, 366, 374, 404, 434, 463, 473, 539, 562, 633, 700, 724], "autodoc": 726, "aux": 377, "avail": [34, 79, 92, 108, 205, 210, 255, 300, 420, 494, 497, 658, 714, 723, 724, 726], "averag": 660, "avoid": [25, 53, 83, 111, 183, 424, 454, 508, 640], "awai": 726, "awar": [19, 48, 74, 103, 186, 415, 448, 493], "ax": [136, 148, 217, 676, 687, 726], "axi": [77, 106, 137, 138, 150, 151, 152, 154, 160, 172, 325, 335, 418, 485, 634, 635, 636, 637, 638, 639, 644, 648, 649, 659, 660, 661, 663, 664, 667, 675, 676, 677, 678, 680, 687, 688, 724], "axis1": [650, 679, 686], "axis2": [650, 679, 686], "b": [0, 3, 21, 34, 50, 62, 76, 92, 105, 133, 142, 204, 283, 364, 404, 417, 434, 450, 473, 495, 591, 614, 641, 669, 675, 682, 724], "b64": 255, "b_": 204, "b_i": [11, 40, 204, 440], "b_m": 204, "b_mh": 204, "back": [652, 653], "backend": [241, 726], "background": 283, "backward": [640, 675, 726], "badg": 724, "bar": 204, "base": [3, 34, 62, 92, 126, 132, 141, 150, 156, 163, 175, 183, 196, 204, 215, 220, 230, 250, 286, 287, 290, 296, 299, 302, 305, 307, 310, 312, 315, 317, 320, 322, 327, 330, 332, 337, 339, 342, 344, 347, 349, 353, 355, 358, 359, 361, 364, 366, 374, 402, 404, 434, 469, 473, 523, 530, 536, 539, 562, 584, 620, 623, 633, 640, 674, 684, 690, 700, 712, 723, 724, 726], "base64encod": 271, "basi": [3, 5, 6, 7, 11, 32, 34, 36, 37, 38, 40, 59, 62, 64, 65, 66, 89, 92, 94, 95, 96, 117, 136, 148, 158, 171, 203, 204, 205, 206, 207, 208, 210, 404, 406, 407, 408, 430, 434, 436, 437, 438, 440, 461, 475, 476, 477, 516, 714, 723, 724], "basic": 724, "basis_and_support": 723, "basis_deriv": [7, 38, 66, 96, 408, 438, 477, 723, 724], "basis_derivative_and_support": 723, "basis_function_deriv": [206, 207, 208, 723], "basis_function_valu": 210, "basis_gradient_and_support": 723, "basis_hessian_and_support": 723, "basis_laplacian_and_support": [723, 724], "basis_splin": [158, 171], "bazilev": 726, "bc": [251, 252], "bc_list": 252, "bda": 251, "bdb": 251, "bdo": 251, "beam": 364, "becaus": [19, 48, 74, 103, 415, 448, 493, 658], "becom": [687, 723, 726], "been": 726, "befor": [184, 266, 271, 657, 663, 721, 724], "begin": [92, 657, 673, 726], "behav": 654, "behavior": [25, 53, 83, 111, 424, 454, 508, 682, 685], "behaviour": 669, "behind": 663, "being": [204, 404, 654], "below": [283, 674], "below_text": 726, "bernstein": 726, "berstein": 34, "beta": 269, "between": [3, 21, 50, 76, 79, 105, 108, 274, 299, 310, 315, 320, 330, 347, 352, 353, 375, 377, 384, 390, 417, 420, 450, 495, 641, 657, 683, 726], "bezier": [75, 79, 104, 108, 138, 139, 255, 276, 280, 281, 283, 364, 416, 420, 434, 440, 465, 473, 496, 723, 724], "bezier_extraction_matrix": 723, "bezier_list": 276, "bezierbas": [3, 11, 12, 16, 434, 440, 441, 445, 473, 723], "beziers_patch": 724, "bezman": 204, "bid": [379, 380, 541, 542], "big": [11, 40, 440, 641], "bilinear": 307, "binari": 683, "bind": 723, "binder": 724, "binom": 34, "biquadrat": [149, 358], "bit": [657, 726], "black": 241, "block": [250, 251, 252, 253, 254, 330], "block_id": [251, 252, 253], "blue": 724, "book": 726, "bool": [11, 13, 25, 33, 40, 42, 53, 60, 69, 77, 79, 83, 85, 90, 98, 106, 108, 111, 113, 118, 127, 129, 136, 137, 138, 141, 148, 151, 166, 167, 169, 178, 179, 181, 186, 191, 192, 193, 194, 205, 210, 217, 218, 241, 244, 255, 256, 263, 269, 271, 283, 287, 292, 375, 378, 384, 389, 410, 418, 420, 424, 426, 431, 440, 442, 454, 462, 464, 483, 496, 498, 508, 517, 540, 549, 556, 579, 609, 610, 612, 640, 641, 669, 674, 711, 712, 714, 717, 721, 726], "boolean": [297, 298, 303, 304, 308, 309, 313, 314, 318, 319, 323, 324, 328, 329, 333, 334, 340, 341, 345, 346, 350, 351, 356, 357, 362, 363, 367, 368, 663, 674], "boor": [92, 726], "boost": 724, "both": [0, 25, 53, 83, 111, 194, 204, 210, 404, 424, 454, 508, 675, 700, 726], "bound": [25, 53, 83, 111, 128, 130, 146, 158, 171, 217, 283, 386, 424, 454, 464, 481, 507, 508, 700, 715], "boundari": [167, 179, 218, 250, 252, 255, 256, 275, 283, 330, 374, 377, 378, 379, 382, 391, 395, 402, 504, 723, 724], "boundaries_from_continu": 723, "boundary_cent": 723, "boundary_fac": 395, "boundary_from_funct": [723, 724], "boundary_id": [160, 172, 378, 395, 606, 724], "boundary_interfac": 594, "boundary_multipatch": [723, 724], "boundary_patch_id": 723, "boundary_splin": [160, 172, 594], "boundarycondit": 252, "boundaryfunct": 252, "box": [283, 339, 723, 724], "box_margin": 283, "branch": [299, 305, 307, 310, 312, 315, 317, 320, 330, 347, 353, 355, 358, 364], "break": [663, 675, 726], "brief": 726, "bring": 724, "broad": 724, "browser": 0, "bspline": [126, 133, 136, 142, 146, 147, 148, 150, 156, 280, 281, 465, 473, 723, 724], "bspline_volum": 62, "bsplinebas": [62, 404, 473, 723], "buffer": [658, 669, 674], "bug": 669, "build": [132, 192, 193], "build_typ": 723, "built": 283, "builtin": 684, "busi": 726, "by_dim": [723, 724], "bypass": 683, "byte": [640, 641, 657, 673, 682, 685], "bytesio": 683, "byteswap": 723, "c": [3, 21, 50, 62, 76, 79, 105, 108, 241, 283, 364, 404, 417, 420, 434, 450, 495, 640, 655, 668, 669, 674, 675, 682, 683, 685, 714, 724, 726], "c_": [79, 108, 420], "c_contigu": 674, "c_i": [11, 40, 440], "cad": 726, "calcul": [11, 16, 23, 40, 45, 52, 80, 109, 193, 204, 209, 211, 212, 213, 287, 290, 421, 440, 445, 452, 503], "call": [5, 7, 13, 34, 36, 38, 42, 64, 66, 69, 92, 94, 96, 98, 134, 135, 136, 137, 144, 145, 148, 151, 160, 161, 162, 163, 164, 165, 166, 167, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 197, 199, 200, 202, 206, 207, 208, 226, 227, 236, 237, 262, 378, 406, 408, 410, 436, 438, 442, 475, 477, 483, 669, 674, 684, 717, 724, 726], "callabl": [197, 198, 200, 201, 290, 291, 378, 700], "caller": [11, 40, 440], "cam": 726, "can": [0, 3, 23, 34, 52, 62, 79, 80, 92, 108, 109, 123, 133, 142, 146, 164, 165, 166, 176, 178, 198, 201, 204, 205, 210, 215, 217, 218, 222, 232, 241, 283, 355, 404, 420, 421, 434, 452, 464, 473, 478, 485, 494, 497, 503, 640, 652, 657, 658, 663, 669, 674, 675, 683, 714, 717, 724, 726], "cancel": 726, "cannot": [669, 674, 683, 726], "capabl": 724, "cartesian": [25, 53, 83, 111, 424, 454, 508, 711], "cartesian_product": 723, "case": [92, 143, 154, 167, 179, 183, 299, 310, 315, 320, 322, 332, 342, 347, 352, 353, 364, 404, 434, 658, 674, 684, 724, 726], "cast": 640, "cat": 723, "categori": 726, "caution": 386, "cd": [0, 724], "cdot": [3, 12, 41, 441, 714, 726], "ceg": 641, "cell": [322, 327, 332], "center": [137, 151, 296, 305, 307, 310, 312, 315, 317, 320, 325, 327, 330, 335, 342, 347, 352, 353, 355, 358, 378, 402, 724], "center_expans": [310, 315, 320, 358], "centripet": [191, 192, 194], "certain": [504, 624, 657, 691, 724, 726], "chang": [25, 53, 83, 111, 188, 217, 424, 454, 508, 633, 640, 669, 674, 684, 687, 711, 726], "check": [33, 60, 90, 118, 133, 142, 186, 227, 237, 261, 297, 298, 303, 304, 308, 309, 313, 314, 318, 319, 323, 324, 328, 329, 333, 334, 340, 341, 345, 346, 350, 351, 356, 357, 362, 363, 367, 368, 375, 378, 386, 390, 431, 462, 464, 470, 472, 517, 669, 712, 723, 724, 726], "check_bound": [386, 723], "check_compli": 375, "check_conform": 375, "check_control_mesh_resolut": 540, "check_degre": 540, "check_dim": 540, "check_nam": 540, "check_param": 723, "check_param_deriv": 723, "checker": [478, 723], "checkout": 0, "chi": 723, "children": [255, 473], "choic": [642, 683], "choos": [657, 723], "chosen": [378, 395, 726], "circl": [153, 404, 723, 726], "circular": [141, 404], "clamp": [127, 129], "clamped_knot_vector": 723, "clang": 0, "class": [2, 3, 34, 61, 62, 92, 125, 126, 131, 132, 155, 156, 182, 183, 195, 196, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 219, 220, 230, 249, 250, 285, 286, 289, 295, 296, 301, 302, 306, 307, 311, 312, 316, 317, 321, 322, 326, 327, 331, 332, 338, 339, 343, 344, 348, 349, 354, 355, 360, 361, 365, 366, 369, 373, 374, 403, 404, 433, 434, 465, 468, 469, 473, 522, 523, 530, 536, 539, 562, 584, 622, 623, 633, 640, 684, 690, 700, 723, 724, 726], "classic": 434, "classmethod": [470, 471, 472], "clear": [0, 723], "cli": 723, "click": 724, "clip": 723, "clone": [0, 724], "clongdoubl": 658, "close": [0, 16, 45, 186, 283, 287, 299, 310, 315, 320, 347, 352, 358, 364, 445, 640, 726], "closest": 683, "closing_fac": 287, "closing_til": [287, 723], "closur": [299, 310, 315, 320, 347, 352, 358, 364], "cmake": 0, "cmap": [241, 283, 726], "cmap_alpha": 726, "cmap_n_color": 726, "co": [377, 726], "code": 0, "coeffici": 204, "coefficient_matrix": [191, 193, 194], "collaps": [276, 655], "collect": 726, "collid": 361, "colloc": 724, "color": [283, 700, 726], "color_splin": 241, "colorbar": 283, "colormap": 726, "column": [134, 144, 251, 655, 714], "com": [0, 711, 724], "combin": [382, 473], "combine_boundari": 723, "come": [663, 675, 726], "command": [0, 122], "commandlin": [121, 122, 123], "comment": [251, 252, 253, 265, 266, 269], "commit": 0, "common": [3, 62, 240, 404, 434, 723, 724, 726], "commun": 726, "compar": [375, 663, 675], "compat": [640, 675, 684, 685], "comphrehens": 0, "compil": [0, 674], "complet": [143, 152, 154, 183], "complex": [0, 25, 53, 83, 111, 424, 454, 508, 640, 641, 645, 646, 657, 726], "complex128": 657, "complexwarn": 640, "compon": [204, 252], "compos": [12, 41, 391, 441, 723], "compose_sensit": [12, 41, 441, 723], "composit": [11, 12, 40, 41, 75, 104, 416, 440, 441, 724], "composition_d": [12, 41, 441], "composition_deriv": [11, 40, 440, 723], "compress": [683, 723], "comput": [11, 12, 40, 41, 190, 198, 199, 201, 202, 204, 205, 210, 251, 440, 441, 700, 724, 726], "compute_knot_vector": 723, "compute_sensit": [11, 40, 440], "concern": [11, 12, 40, 41, 440, 441, 723], "conda": 0, "condit": [218, 250, 252, 255, 256, 391, 640, 644, 724, 726], "cone": [723, 726], "config": 0, "configu": 712, "configur": [136, 148, 373, 723, 726], "conflict": 726, "conform": [136, 148, 217, 330, 375], "confrom": [136, 148], "conic": 726, "conj": 723, "conjug": [645, 723], "conjunct": 726, "connect": [283, 296, 402, 726], "connectivitii": 391, "consecut": 669, "consequ": [404, 434, 726], "consid": [21, 50, 76, 92, 105, 160, 172, 377, 384, 390, 417, 450, 495, 726], "consist": [153, 292, 327, 361, 364, 724], "constant": [12, 41, 441, 726], "constitut": 726, "constraint": 726, "construct": [3, 34, 62, 92, 286, 404, 434, 642, 682], "contact": [299, 347, 352, 353, 364], "contact_length": [299, 330, 347, 352, 353, 364], "contain": [34, 92, 121, 123, 190, 192, 668, 682, 683, 723, 726], "content": [674, 682, 683, 726], "contigu": [640, 655, 669, 682, 712, 713], "contiguous_arrai": 712, "continu": [377, 726], "contour": [166, 178, 288], "contrast": 726, "control": [3, 11, 12, 40, 41, 62, 79, 92, 108, 134, 144, 147, 161, 162, 164, 165, 173, 174, 176, 177, 190, 191, 193, 194, 204, 214, 283, 287, 358, 375, 404, 420, 434, 440, 441, 480, 481, 482, 484, 504, 640, 682, 714, 724, 726], "control_edg": [163, 175, 723], "control_fac": [163, 175, 723], "control_mesh": [283, 723, 724, 726], "control_mesh_c": [283, 726], "control_mesh_lw": [283, 726], "control_mesh_resolut": [25, 53, 83, 111, 424, 454, 508, 723], "control_point": [3, 62, 79, 108, 165, 191, 193, 194, 241, 279, 283, 404, 420, 434, 471, 473, 633, 723, 724, 726], "control_point_alpha": 726, "control_point_bound": 723, "control_point_c": [283, 726], "control_point_id": [241, 283, 726], "control_point_offset": 723, "control_point_r": [283, 726], "control_points_": [482, 484], "control_volum": [163, 175, 723], "controlpointpoint": 723, "conveni": [463, 683, 687], "converg": [25, 53, 83, 111, 424, 454, 508], "convergence_norm": [25, 53, 83, 111, 424, 454, 508, 724], "convers": [465, 620, 640], "convert": [33, 60, 90, 118, 431, 462, 517, 653, 683, 684, 723], "convex": 726, "coord": [25, 53, 83, 111, 424, 454, 508, 726], "coordin": [12, 25, 41, 53, 83, 92, 111, 204, 255, 287, 352, 402, 424, 441, 454, 508, 531, 724, 726], "copi": [33, 60, 79, 90, 108, 118, 134, 136, 144, 148, 184, 188, 222, 232, 263, 420, 431, 462, 517, 533, 640, 650, 655, 658, 663, 668, 674, 675, 682, 684, 723, 724], "copy_to": [222, 232], "copy_valid_opt": 723, "core": [10, 39, 68, 97, 409, 439, 473, 479], "core_id": 723, "core_ref_count": 723, "coresplin": 620, "corner": 252, "correct": [247, 248, 297, 298, 303, 304, 308, 309, 313, 314, 318, 319, 323, 324, 328, 329, 333, 334, 340, 341, 345, 346, 350, 351, 356, 357, 362, 363, 367, 368], "correl": [305, 330], "correspond": [3, 11, 40, 62, 160, 172, 337, 395, 404, 434, 440, 714, 726], "cottrel": 726, "could": [133, 142, 726], "count": 669, "counterpart": [255, 726], "coupl": [290, 291], "cover": 675, "cox": [92, 726], "cp": [723, 726], "cpp": [0, 25, 53, 83, 111, 424, 454, 505, 508], "cps_as_vertic": [164, 165, 176], "creat": [0, 79, 108, 157, 158, 170, 171, 251, 252, 253, 254, 262, 263, 294, 299, 305, 310, 315, 320, 325, 330, 335, 342, 347, 352, 353, 355, 358, 364, 369, 420, 647, 700, 714, 715, 723], "create_til": [287, 289, 322, 332, 723], "creation": 369, "creator": [0, 485, 723], "criteria": [25, 53, 83, 111, 424, 454, 508], "cross": [154, 305, 355], "cross2d": [723, 724], "cross3d": 723, "cross3dlinear": 723, "cross_2d": 723, "cross_3d": 723, "cross_3d_linear": 723, "crosstil": [307, 312, 317, 355], "csr_arrai": 714, "cub": 275, "cube": [290, 291, 339], "cube_void": 723, "cubevoid": 723, "cubic": [283, 364], "cuboid": [322, 325, 335], "cumprod": 723, "cumsum": 723, "cumul": [648, 649], "current": [25, 33, 53, 60, 82, 83, 90, 111, 118, 122, 163, 175, 183, 184, 186, 187, 226, 236, 273, 275, 352, 364, 424, 431, 454, 462, 508, 510, 517, 657, 724, 726], "current_core_properti": 723, "current_dim": [134, 144], "current_mesh": 184, "curv": [3, 62, 143, 241, 302, 404, 434, 723, 724], "custom": [253, 270, 726], "cutt": 283, "cv_list": 252, "cylind": [310, 315, 320, 726], "d": [138, 139, 147, 149, 332, 655, 684, 702, 723, 724, 726], "data": [10, 13, 39, 42, 68, 69, 97, 98, 136, 148, 247, 271, 290, 291, 400, 409, 410, 439, 442, 479, 483, 515, 723, 724], "datahold": 690, "datatyp": 675, "david": 726, "ddof": [677, 688], "de": [92, 726], "deal": 726, "debug": [0, 717, 721, 723], "decim": 670, "decreas": [92, 726], "deduct": [160, 172], "deep": [520, 684], "deepcopi": [13, 42, 69, 98, 410, 442, 483], "def": 724, "default": [11, 13, 25, 33, 40, 42, 53, 60, 69, 83, 90, 91, 98, 111, 118, 119, 136, 138, 140, 141, 143, 148, 149, 152, 154, 158, 160, 167, 171, 172, 179, 183, 186, 191, 194, 217, 218, 223, 233, 241, 244, 265, 266, 269, 271, 283, 300, 358, 359, 379, 390, 410, 424, 431, 432, 440, 442, 454, 462, 466, 467, 483, 508, 517, 624, 625, 627, 630, 640, 641, 655, 663, 669, 675, 682, 683, 691, 692, 694, 697, 711, 712, 723, 726], "default_backend": 726, "default_valu": [627, 694], "defin": [82, 92, 197, 198, 200, 201, 245, 259, 265, 266, 269, 271, 288, 290, 291, 305, 325, 330, 335, 358, 404, 434, 473, 658, 663, 673, 675, 726], "definit": [133, 142, 204, 218, 250, 325, 335, 726], "deform": [11, 12, 40, 41, 182, 183, 184, 186, 288, 290, 440, 441], "deformation_funct": [286, 292, 723, 724], "deg": 251, "degre": [3, 4, 5, 6, 7, 17, 27, 32, 35, 36, 37, 38, 46, 54, 59, 62, 63, 64, 65, 66, 72, 84, 89, 91, 92, 93, 94, 95, 96, 101, 112, 117, 119, 136, 137, 138, 140, 141, 143, 147, 148, 150, 151, 152, 154, 190, 191, 194, 206, 207, 208, 212, 279, 283, 358, 375, 404, 405, 406, 407, 408, 413, 425, 430, 432, 434, 435, 436, 437, 438, 446, 456, 461, 471, 473, 474, 475, 476, 477, 490, 491, 509, 516, 608, 613, 723, 724, 726], "delta_ij": [299, 310, 315, 320, 342, 347, 352, 353, 364], "denomin": 726, "denot": [92, 726], "dens": 714, "depend": [3, 724], "deprec": [663, 685], "depth": [473, 684], "deriv": [6, 7, 11, 12, 16, 23, 34, 37, 38, 40, 41, 45, 52, 65, 66, 80, 95, 96, 109, 184, 203, 204, 205, 210, 287, 297, 303, 308, 313, 318, 323, 325, 328, 333, 335, 337, 340, 345, 347, 350, 352, 353, 356, 362, 364, 367, 369, 407, 408, 421, 437, 438, 440, 441, 445, 452, 465, 476, 477, 503, 620, 714, 723, 724, 726], "derivative_list": [299, 310, 315, 320], "derivative_splin": 723, "derived_splin": 620, "derivedsplin": 620, "describ": [16, 45, 79, 108, 141, 143, 152, 154, 187, 290, 291, 299, 305, 310, 315, 320, 330, 342, 347, 352, 353, 355, 358, 364, 420, 445, 674, 726], "descript": [390, 404, 434, 640, 726], "design": [12, 41, 290, 291, 299, 310, 315, 320, 325, 335, 342, 347, 352, 353, 364, 441, 726], "desir": [136, 148, 167, 179, 191, 726], "despit": 685, "detail": [79, 108, 205, 206, 207, 208, 209, 210, 211, 420, 637, 726], "determin": [133, 142, 263, 290, 358, 377, 390, 391, 402, 657, 669, 674, 724, 726], "determinant_project": [133, 142], "determinant_splin": 723, "determine_interfac": 723, "develop": 0, "deviat": [283, 677], "diag": 657, "diagon": [327, 330, 686, 723], "dice": 296, "dict": [14, 29, 30, 33, 43, 56, 57, 60, 70, 87, 88, 90, 99, 115, 116, 118, 168, 186, 191, 194, 205, 210, 223, 233, 240, 241, 247, 254, 271, 277, 278, 300, 336, 399, 411, 428, 429, 431, 443, 458, 459, 462, 465, 486, 510, 512, 514, 517, 568, 626, 628, 629, 632, 693, 695, 696, 699, 713, 724, 726], "dict_": 713, "dict_item": [224, 234], "dict_kei": [225, 228, 235, 238, 629, 696], "dict_splin": [33, 60, 90, 118, 431, 462, 517], "dict_to_splin": 723, "dict_valu": [229, 239, 628, 632, 695, 699], "dict_with_contigu": 713, "dictionari": [168, 187, 205, 210, 250, 251, 252, 253, 255, 262], "dictornai": [247, 271], "differ": [3, 11, 12, 25, 40, 41, 53, 83, 111, 404, 424, 440, 441, 454, 465, 473, 508, 641, 663, 675, 683], "differenti": [12, 41, 441, 726], "dim": [3, 15, 18, 20, 22, 25, 28, 44, 47, 49, 51, 53, 55, 62, 71, 73, 78, 83, 86, 100, 102, 107, 111, 114, 134, 140, 144, 191, 192, 193, 194, 199, 202, 211, 252, 253, 275, 279, 300, 386, 394, 404, 412, 414, 419, 424, 427, 434, 444, 447, 449, 451, 454, 457, 473, 481, 482, 484, 488, 492, 499, 508, 511, 615, 723, 724], "dim_2": 724, "dimens": [0, 3, 20, 28, 49, 55, 62, 79, 86, 91, 92, 108, 114, 119, 133, 134, 135, 137, 142, 143, 144, 145, 146, 150, 151, 166, 167, 168, 178, 179, 180, 183, 185, 192, 194, 217, 218, 252, 253, 275, 293, 299, 300, 310, 315, 320, 342, 347, 352, 358, 364, 385, 392, 394, 404, 420, 427, 432, 434, 449, 457, 473, 489, 506, 511, 655, 711, 724, 726], "dimension": [3, 34, 62, 135, 145, 199, 202, 290, 291, 299, 310, 315, 320, 325, 335, 375, 385, 392, 404, 434, 473, 682, 726], "direct": [25, 53, 83, 91, 111, 119, 126, 150, 156, 194, 322, 332, 424, 432, 454, 508, 726], "directli": [187, 299, 310, 315, 320, 342, 347, 352, 353, 364, 478, 494, 497, 683, 724], "dirichlet": [251, 252], "dirichlet_strategi": 251, "dirichlet_valu": 251, "discard": 244, "discret": [186, 241], "discuss": [0, 473, 724, 726], "disk": [154, 723, 724], "distanc": [25, 53, 83, 111, 283, 347, 352, 353, 358, 384, 390, 424, 454, 508, 724], "distinct": 654, "distinguish": 3, "diverg": [204, 210, 723], "divergenec": 210, "dmin": [133, 142], "do": [34, 164, 165, 176, 400, 658, 669, 683, 724, 726], "doc": [0, 724], "document": [3, 34, 62, 92, 205, 206, 207, 208, 209, 210, 211, 359, 404, 434, 473, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 648, 649, 650, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 672, 675, 676, 677, 678, 679, 680, 686, 687, 688, 723], "doe": [33, 60, 90, 118, 400, 431, 462, 500, 517, 518, 658, 669, 726], "doesn": [25, 53, 83, 111, 127, 129, 424, 454, 508, 625, 669, 692], "dof": [251, 274], "dof_map": 723, "domain": [34, 77, 79, 106, 108, 168, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 355, 418, 420, 473, 724], "don": 496, "done": [640, 674], "dot": [723, 726], "doubl": [330, 377, 384, 390], "double_lattic": 723, "doublelattic": 723, "doxygen": 723, "draw_box": 726, "drawback": 404, "drill": 305, "driven": 723, "dsplinepy_mor": 0, "dtype": [640, 641, 648, 649, 654, 657, 658, 660, 663, 664, 673, 675, 677, 678, 682, 686, 688, 712], "due": [3, 62, 726], "dump": 723, "duplic": [21, 50, 76, 105, 417, 450, 495], "duplicate_toler": [21, 50, 76, 105, 417, 450, 495], "dure": [0, 183], "e": [0, 3, 12, 34, 41, 92, 210, 217, 218, 252, 255, 283, 352, 364, 390, 391, 404, 434, 441, 473, 505, 683, 724, 726], "each": [25, 28, 53, 55, 83, 86, 92, 111, 114, 152, 194, 209, 250, 252, 263, 264, 361, 386, 394, 424, 427, 454, 457, 469, 508, 511, 670, 683, 724, 726], "earliest": 726, "easi": 504, "easier": 724, "easili": 726, "edg": [157, 161, 163, 167, 170, 173, 175, 179, 186, 241, 275, 347, 352, 353, 723, 726], "effici": [204, 205, 210, 724], "either": [289, 352, 663, 724, 726], "element": [0, 92, 137, 151, 275, 391, 634, 635, 640, 641, 645, 646, 648, 649, 654, 655, 657, 658, 660, 662, 663, 664, 667, 668, 669, 670, 672, 675, 677, 678, 680, 684, 688, 713, 726], "element_id": [391, 726], "elementtre": [255, 283], "elev": [17, 46, 72, 101, 413, 446, 491, 724], "elevate_degre": [723, 724], "elipsoid": 332, "ellip": 332, "ellips_v_oid": 723, "ellipsoid": [332, 335], "ellipsvoid": 723, "els": [79, 92, 108, 160, 172, 217, 218, 241, 256, 420, 627, 694, 712], "emb": [134, 144], "embed": [3, 62, 379, 404, 434, 473, 723, 724, 726], "embedded_splin": [134, 144], "embl": 726, "empti": [654, 683, 726], "enabl": [724, 726], "encod": [255, 271], "end": [92, 255, 266, 283, 723, 726], "endian": [641, 683], "endpoint": [191, 193, 194], "enforc": [251, 384, 713, 714], "enforce_contigu": 723, "enforce_contiguous_valu": 723, "engin": 726, "enjoi": 726, "enlarg": 669, "enough": [127, 129], "entangl": [133, 142], "entir": 726, "entiti": [166, 178, 726], "entour": 330, "entri": [34, 92, 157, 170, 252, 305, 325, 330, 335, 358, 375, 376, 669, 683, 711, 723, 726], "enumer": 0, "environ": 0, "equal": [21, 50, 76, 105, 133, 142, 146, 158, 171, 375, 384, 390, 417, 450, 495, 663, 726], "equat": [92, 204, 726], "equip": 724, "equiv": [640, 726], "equival": [29, 30, 56, 57, 87, 88, 115, 116, 196, 399, 428, 429, 458, 459, 512, 514, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 648, 649, 650, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 672, 676, 677, 678, 679, 680, 683, 686, 687, 688], "error": [25, 53, 83, 111, 424, 454, 508, 723], "especi": 724, "estim": 251, "eta": [218, 726], "etc": [255, 299, 310, 347, 663, 675, 726], "etre": [255, 283], "evalu": [6, 15, 22, 37, 44, 51, 65, 71, 78, 95, 100, 107, 183, 191, 193, 194, 205, 209, 210, 211, 212, 213, 290, 291, 299, 310, 315, 320, 342, 347, 352, 353, 364, 402, 407, 412, 419, 437, 444, 451, 476, 488, 499, 634, 635, 700, 723], "evaluation_point": [290, 291, 723], "everi": [91, 119, 150, 296, 378, 432], "everyth": [244, 714, 723], "evgrafov": [133, 142], "exact": [724, 726], "exactli": [92, 283, 685, 726], "exampl": [0, 34, 92, 126, 132, 156, 186, 196, 241, 283, 391, 471, 473, 478, 485, 494, 497, 498, 640, 641, 654, 655, 657, 658, 663, 668, 669, 673, 674, 675, 682, 684, 687, 724], "exce": [128, 130], "except": [0, 658, 674, 684, 726], "excess": 241, "exclud": [19, 48, 74, 103, 255, 415, 448, 493, 726], "execut": 724, "exhibit": 682, "exist": [132, 625, 627, 669, 692, 694, 724], "expand": [310, 315, 320, 358], "expand_tab": [269, 723], "expans": [322, 325, 332, 335], "expect": [654, 726], "expens": 683, "experi": 0, "explan": [34, 92], "explicitli": 188, "export": [121, 218, 250, 251, 252, 253, 270, 273, 276, 390, 723, 724], "export_cartesian": 723, "export_field": 255, "export_ig": 723, "expos": 674, "express": [204, 724, 726], "extend": [135, 137, 145, 151, 473, 723], "extens": [247, 248, 404, 434], "extern": [325, 335], "extra": [34, 92], "extra_doc": 0, "extract": [20, 49, 75, 79, 104, 108, 126, 134, 135, 137, 144, 145, 151, 379, 390, 416, 420, 449, 723], "extract_all_boundary_splin": 723, "extract_bezier_patch": 723, "extract_boundari": 723, "extract_dim": 723, "extractor": [387, 494, 723], "extrud": [132, 485, 723, 724], "extruded_splin": [135, 145], "extrus": [135, 145], "extrusion_vector": [135, 145, 724], "ey": 673, "f": [204, 211, 266, 640, 655, 669, 682, 726], "f_contigu": 674, "f_i": 204, "f_k": 212, "fac": 641, "face": [156, 162, 163, 174, 175, 186, 241, 299, 310, 315, 320, 330, 347, 353, 358, 364, 376, 378, 391, 395, 494, 723, 724, 726], "face_center_vertic": 611, "facet": 726, "facilitata": 286, "fact": 726, "factor": [183, 310, 315, 320, 358, 726], "fals": [11, 25, 33, 40, 53, 60, 77, 79, 83, 85, 90, 106, 108, 111, 113, 118, 136, 148, 167, 169, 179, 181, 186, 191, 194, 205, 210, 217, 255, 265, 269, 271, 283, 292, 384, 386, 389, 418, 420, 424, 426, 431, 440, 454, 462, 464, 508, 517, 549, 579, 634, 635, 636, 637, 640, 641, 659, 660, 661, 664, 669, 674, 677, 678, 688, 689, 711, 712, 714, 717, 726], "famili": [21, 34, 50, 76, 92, 105, 417, 450, 473, 495, 723, 724], "famlili": 723, "fashion": [204, 724, 726], "fast": 711, "fastest": 711, "featur": [34, 92, 723], "feature0": 0, "feel": 724, "few": 726, "ffd": [723, 724], "fid": 683, "field": [23, 52, 80, 109, 203, 204, 209, 210, 211, 212, 213, 255, 325, 335, 375, 421, 452, 503, 540, 657, 658, 663, 673, 675, 723], "field_deriv": 723, "field_dim": [375, 540], "field_mask": 255, "figur": 283, "file": [0, 123, 244, 247, 248, 255, 256, 263, 266, 269, 271, 272, 276, 279, 283, 652, 674, 683, 723], "filenam": [247, 248, 255, 256, 263, 271, 683], "fileno": 683, "fill": [669, 723], "filter": [21, 50, 76, 105, 417, 450, 495, 724], "final": 663, "find": [25, 53, 83, 111, 214, 247, 248, 424, 454, 504, 508, 531, 672, 675, 726], "find_span": 723, "finish": 287, "finit": 726, "finiteelementcollect": 275, "finiteelementspac": 275, "first": [0, 34, 92, 134, 144, 204, 252, 283, 305, 330, 358, 364, 663, 675, 683, 724, 726], "first_deriv": [25, 53, 83, 111, 424, 454, 508, 724], "fit": [0, 185, 378, 657, 723, 726], "fitted_splin": [191, 194], "fitting_point": [190, 191, 192, 193, 194], "fitting_queri": [241, 726], "fitting_splin": [191, 193, 194, 724], "fix": 726, "flag": [11, 40, 79, 108, 420, 440, 674, 689, 724], "flat": [655, 658, 665, 666, 724], "flatten": [666, 669, 723], "flexibl": 726, "flip": 217, "flip_ax": 723, "float": [21, 25, 27, 50, 53, 54, 76, 77, 83, 84, 85, 105, 106, 111, 112, 113, 137, 138, 139, 140, 141, 143, 149, 150, 151, 152, 153, 154, 168, 180, 183, 185, 191, 193, 194, 199, 202, 241, 271, 276, 283, 299, 310, 315, 320, 347, 352, 353, 358, 364, 417, 418, 424, 425, 426, 450, 454, 456, 467, 495, 508, 509, 531, 534, 550, 579, 580, 587, 593, 594, 608, 611, 613, 617, 640, 712, 726], "float32": 640, "float64": [279, 526, 527, 528, 529, 533, 535, 547, 556, 559, 563, 564, 565, 566, 569, 572, 575, 579, 581, 582, 588, 589, 590, 595, 608, 610, 611, 613, 617, 619, 640, 657, 673], "fname": [19, 48, 74, 103, 244, 245, 247, 248, 255, 256, 258, 259, 261, 263, 268, 269, 271, 272, 275, 276, 277, 278, 280, 281, 283, 415, 448, 493, 603, 616], "folder": 726, "follow": [0, 3, 62, 167, 179, 204, 243, 255, 404, 434, 654, 721, 724, 726], "font": 283, "font_famili": 283, "font_siz": [283, 726], "foral": [11, 40, 440], "forc": 640, "fork": 0, "forknam": 0, "form": [11, 12, 16, 40, 41, 45, 183, 204, 211, 212, 245, 259, 269, 281, 299, 310, 322, 325, 332, 335, 347, 388, 391, 440, 441, 445, 654, 680, 687, 726], "form_lin": 723, "format": [79, 108, 121, 243, 245, 255, 262, 270, 271, 275, 297, 298, 303, 304, 308, 309, 313, 314, 318, 319, 323, 324, 328, 329, 333, 334, 340, 341, 345, 346, 350, 351, 356, 357, 362, 363, 367, 368, 393, 420, 683, 723, 724], "formul": 264, "formula": [92, 726], "fortran": [640, 655, 682], "found": 724, "founder": 726, "four": [310, 726], "fourth": 252, "frac": [11, 12, 40, 41, 92, 204, 211, 212, 404, 434, 440, 441, 726], "free": [183, 668], "freeform": 182, "freeli": 726, "french": 726, "from": [0, 11, 12, 25, 28, 40, 41, 53, 55, 62, 83, 86, 111, 114, 121, 123, 126, 132, 136, 148, 156, 160, 166, 167, 168, 169, 172, 178, 179, 180, 181, 223, 233, 247, 248, 262, 266, 269, 272, 283, 347, 352, 353, 377, 382, 394, 424, 427, 440, 441, 454, 457, 473, 508, 511, 640, 642, 676, 680, 682, 711, 714, 724, 726], "from_bound": 723, "from_data": 726, "from_mfem": 274, "frombuff": 682, "fromfil": 683, "front": 723, "fulfil": [300, 364, 726], "full": [79, 108, 325, 335, 420, 634, 635, 636, 638, 639, 642, 643, 644, 645, 646, 648, 649, 650, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 672, 674, 675, 676, 677, 678, 679, 680, 686, 687, 688, 723, 724, 726], "full_row_indic": 723, "fullscreen": [296, 302, 307, 312, 317, 322, 327, 332, 339, 344, 349, 355, 361], "function": [0, 1, 3, 4, 5, 6, 7, 11, 12, 34, 35, 36, 37, 38, 40, 41, 62, 63, 64, 65, 66, 92, 93, 94, 95, 96, 120, 121, 123, 125, 131, 155, 157, 158, 170, 171, 183, 186, 187, 189, 195, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 210, 216, 217, 218, 219, 243, 246, 249, 250, 251, 252, 253, 256, 257, 260, 267, 270, 273, 274, 279, 282, 287, 288, 289, 290, 291, 292, 294, 355, 378, 387, 404, 405, 406, 407, 408, 434, 435, 436, 437, 438, 440, 441, 465, 473, 474, 475, 476, 477, 522, 622, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 648, 649, 650, 658, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 672, 674, 676, 677, 678, 679, 680, 683, 684, 686, 687, 688, 700, 714, 716, 721, 723, 724], "function_list": 252, "function_str": 253, "further": [75, 104, 204, 416], "futur": 650, "g": [0, 210, 217, 218, 251, 252, 255, 364, 390, 391, 683, 726], "g1": 377, "gauss": [199, 202], "gausslegendr": 251, "gausslobatto": 251, "gener": [294, 473, 675, 724], "geomet": 726, "geometr": [11, 40, 204, 440, 485, 724, 726], "geometri": [12, 23, 41, 52, 80, 109, 132, 196, 198, 201, 204, 255, 256, 275, 288, 421, 441, 452, 503, 724, 726], "get": [23, 52, 80, 109, 186, 421, 452, 503, 504, 723, 724], "get_interfac": 723, "getfield": [673, 723], "gismo": [390, 723, 724], "git": [0, 724], "github": [0, 724], "give": [154, 274, 687, 724, 726], "given": [4, 5, 6, 7, 11, 12, 25, 31, 32, 34, 35, 36, 37, 38, 40, 41, 53, 58, 59, 63, 64, 65, 66, 79, 83, 89, 91, 93, 94, 95, 96, 108, 111, 117, 119, 123, 133, 134, 135, 136, 138, 142, 144, 145, 146, 148, 149, 158, 159, 166, 171, 178, 180, 183, 191, 192, 194, 196, 199, 202, 252, 253, 278, 283, 299, 310, 315, 320, 337, 347, 379, 391, 405, 406, 407, 408, 420, 424, 430, 432, 435, 436, 437, 438, 440, 441, 454, 460, 461, 470, 472, 474, 475, 476, 477, 508, 516, 531, 534, 624, 625, 627, 631, 636, 637, 640, 643, 644, 648, 649, 657, 659, 660, 661, 664, 670, 677, 678, 680, 688, 691, 692, 694, 698, 714, 715], "global": [34, 391, 463, 724, 726], "global_fac": 391, "global_interfac": 594, "global_knot_insertion_matrix": 723, "glossi": 726, "go": 726, "goe": 240, "good": [0, 683, 726], "googl": 0, "gradient": [23, 52, 80, 109, 204, 205, 206, 209, 210, 212, 421, 452, 503, 723], "graphic": [283, 723], "gravesen": [133, 142], "great": 726, "greater": [146, 663, 726], "greek": 302, "green": [241, 726], "grevil": [21, 50, 76, 105, 417, 450, 495, 724], "greville_abscissa": [723, 724], "grid": [25, 53, 83, 111, 424, 454, 508, 724, 726], "grid_resolut": 215, "gu": [157, 170, 359, 715, 724, 726], "guess": [25, 53, 83, 111, 424, 454, 508], "guid": [0, 726], "guidelin": 724, "gus_dict": 240, "gustaf": [164, 165, 176, 183, 184, 186, 240, 241, 283, 724, 726], "gzipfil": 683, "h": [122, 204, 212], "ha": [140, 160, 172, 204, 325, 335, 496, 657, 724, 726], "hand": 724, "handl": 250, "handle_markdown": 0, "happen": 726, "hardcod": 273, "hardwar": 674, "has_cor": 723, "has_evalu": 723, "has_funct": 723, "has_knot_vector": 723, "has_loc": 723, "hat": 726, "have": [0, 6, 7, 15, 25, 34, 37, 38, 44, 53, 65, 66, 71, 83, 92, 95, 96, 100, 111, 127, 129, 146, 194, 218, 252, 255, 297, 298, 303, 304, 308, 309, 313, 314, 318, 319, 323, 324, 328, 329, 333, 334, 340, 341, 345, 346, 350, 351, 356, 357, 362, 363, 367, 368, 404, 407, 408, 412, 424, 434, 437, 438, 444, 454, 465, 476, 477, 488, 508, 669, 724, 726], "heapsort": 675, "height": [141, 150, 364], "help": [62, 203, 214, 622, 633, 700, 717, 724], "helpe": [220, 230, 622, 623, 690], "helper": [126, 132, 156, 196, 286, 400, 469, 515], "helpm": [0, 29, 30, 56, 57, 87, 88, 115, 116, 399, 428, 429, 458, 459, 478, 494, 497, 512, 514, 723, 724], "henc": 204, "here": [0, 3, 12, 19, 41, 48, 62, 74, 92, 103, 204, 415, 441, 448, 493, 723, 724, 726], "hessian": [23, 52, 80, 109, 204, 205, 207, 210, 421, 452, 503, 723], "hex": [641, 726], "high": [283, 726], "higher": [3, 62, 135, 145, 167, 179, 404, 434, 726], "highest": 711, "highlight": [724, 726], "histor": 726, "hold": [376, 469, 628, 629, 632, 695, 696, 699, 726], "hole": 342, "hollow": [143, 152, 154, 339], "hollow_cub": 723, "hollow_octagon": 723, "hollow_octagon_extrud": 723, "hollowcub": 723, "hollowoctagon": 723, "hollowoctagonextrud": 723, "home": 724, "horizont": [330, 726], "how": [34, 92, 263, 434, 473, 674, 724], "howev": [136, 148, 215, 669, 724, 726], "hpp": 0, "html": [0, 724, 726], "http": [283, 711, 726], "hugh": 726, "hull": 726, "human": 283, "hutchinson": [322, 332], "hyper": 139, "hypercub": [34, 183], "i": [0, 3, 11, 12, 13, 19, 25, 33, 34, 40, 41, 42, 48, 53, 60, 62, 69, 74, 79, 83, 90, 92, 98, 103, 108, 111, 118, 123, 126, 127, 129, 133, 135, 136, 138, 142, 145, 146, 148, 158, 160, 161, 162, 167, 171, 172, 173, 174, 177, 179, 183, 186, 194, 198, 201, 204, 205, 210, 211, 212, 217, 218, 223, 233, 241, 247, 248, 250, 252, 253, 261, 263, 265, 266, 271, 283, 289, 299, 305, 310, 315, 320, 342, 347, 352, 353, 358, 364, 369, 375, 376, 378, 386, 390, 391, 404, 410, 415, 420, 424, 431, 434, 440, 441, 442, 448, 454, 462, 465, 470, 472, 473, 483, 493, 498, 505, 508, 517, 520, 625, 627, 640, 641, 650, 654, 655, 657, 658, 663, 668, 669, 674, 675, 682, 683, 684, 687, 692, 694, 700, 711, 712, 713, 714, 723, 724, 726], "i8": [641, 675], "id": [5, 7, 32, 36, 38, 59, 64, 66, 89, 94, 96, 117, 158, 171, 214, 251, 252, 253, 275, 283, 376, 378, 379, 382, 391, 395, 406, 408, 430, 436, 438, 461, 475, 477, 504, 516, 526, 527, 529, 587, 588, 590, 726], "idea": [0, 726], "ideal": 183, "ident": 204, "identif": 724, "identifi": [269, 378, 402], "iff": [6, 7, 15, 37, 38, 44, 65, 66, 71, 95, 96, 100, 161, 162, 167, 169, 173, 174, 177, 179, 181, 217, 218, 241, 407, 408, 412, 437, 438, 444, 476, 477, 488, 496, 498], "ig": [19, 48, 74, 103, 415, 448, 493, 723, 724], "iga": [714, 724, 726], "ignor": [79, 108, 420], "ij": [204, 212], "imag": 203, "imaginari": 641, "immers": 726, "implement": [204, 205, 210, 369, 675, 723, 724], "import": [0, 121, 248, 640, 641, 654, 655, 657, 658, 663, 669, 673, 674, 675, 682, 684, 687, 724, 726], "importantli": 723, "includ": [250, 404, 723, 724, 726], "inclus": 347, "increas": [669, 724], "indent": [244, 255, 283], "independ": 683, "index": [0, 274, 391, 504, 642, 658, 663, 711, 724], "indexwis": 724, "indic": [391, 504, 636, 637, 638, 639, 656, 662, 665, 672, 680, 726], "indirect": [663, 675], "individu": [159, 375, 386, 388, 402, 641], "influenc": 726, "info": [384, 717, 721, 723], "inform": [3, 25, 53, 62, 83, 111, 121, 122, 127, 129, 187, 191, 194, 283, 322, 332, 374, 377, 384, 404, 424, 434, 454, 508, 658, 674, 683, 724], "init": [0, 277, 724], "initi": [13, 25, 42, 53, 69, 83, 98, 111, 337, 410, 424, 442, 454, 473, 483, 508, 627, 659, 661, 664, 678, 694, 723, 724, 726], "initial_guess_sample_resolut": [25, 53, 83, 111, 424, 454, 508, 579], "inl": 0, "inner": [11, 12, 40, 41, 143, 152, 154, 299, 310, 315, 320, 330, 347, 352, 353, 358, 364, 440, 441, 597, 598, 599, 724], "inner_deriv": [12, 41, 441, 599], "inner_funct": [11, 40, 440], "inner_radiu": [141, 143, 152, 724], "inplac": [25, 53, 83, 111, 217, 218, 263, 424, 454, 508, 633, 641], "input": [265, 300, 640, 655, 712, 726], "insert": [77, 79, 106, 108, 287, 418, 420, 672, 714, 724], "insert_knot": [79, 108, 420, 723, 724], "insid": [185, 339, 726], "inspir": 726, "instal": 0, "instanc": [3, 62, 404, 434, 712], "instead": [137, 151, 186, 241, 640, 650, 658, 721], "int": [4, 5, 6, 7, 15, 18, 20, 22, 25, 28, 31, 32, 35, 36, 37, 38, 44, 47, 49, 51, 53, 55, 58, 59, 63, 64, 65, 66, 71, 73, 77, 78, 79, 83, 85, 86, 89, 91, 93, 94, 95, 96, 100, 102, 106, 107, 108, 111, 113, 114, 117, 119, 137, 138, 140, 143, 151, 152, 166, 167, 168, 169, 178, 179, 180, 181, 190, 191, 194, 205, 206, 207, 208, 209, 210, 211, 212, 213, 241, 251, 252, 253, 263, 283, 293, 300, 352, 375, 377, 378, 379, 380, 385, 386, 390, 392, 394, 395, 405, 406, 407, 408, 412, 414, 418, 419, 420, 424, 426, 427, 430, 432, 435, 436, 437, 438, 444, 447, 449, 451, 454, 457, 460, 461, 474, 475, 476, 477, 488, 489, 492, 499, 506, 508, 511, 516, 524, 525, 526, 531, 540, 541, 542, 547, 550, 556, 563, 564, 565, 566, 569, 572, 575, 579, 581, 582, 585, 586, 587, 594, 600, 601, 604, 607, 608, 610, 611, 613, 615, 617, 619, 640, 657, 663, 669, 673, 675, 684, 687, 714, 726], "int16": 641, "int32": [279, 380, 383, 389, 396, 527, 529, 532, 542, 544, 549, 550, 557, 565, 566, 569, 571, 579, 580, 581, 582, 588, 590, 594, 602, 604, 606, 608, 611, 673], "int64": [390, 641, 658], "int_typ": 658, "intact": [31, 58, 460], "integ": [134, 144, 657], "integr": 723, "intend": [683, 687], "inter": 391, "interchang": [218, 679, 726], "interfac": [121, 122, 123, 217, 251, 294, 342, 369, 374, 376, 377, 378, 384, 396, 557, 604, 674, 723, 724], "interface_info_arrai": 724, "interface_orient": 723, "interface_strategi": 251, "interfaces_from_boundary_cent": 723, "intern": [11, 25, 34, 40, 53, 83, 111, 126, 156, 167, 179, 206, 207, 208, 358, 424, 440, 454, 508], "interpol": [92, 191, 192, 193, 194, 726], "interpolate_endpoint": [191, 193, 194], "interpret": [252, 658, 674], "intersect": 723, "interv": [92, 168, 180, 726], "introduc": [3, 62, 434, 726], "introduct": [62, 404, 724], "introselect": [638, 663], "invers": [25, 53, 83, 111, 204, 355, 358, 424, 454, 508, 682, 724], "inverse_cross_3d": 723, "inversecross3d": 723, "invert": 724, "involv": 467, "io": [121, 723, 724], "ioutil": 723, "ipynb": 726, "irit": 723, "is_clamp": [127, 129], "is_left_bdr": 724, "is_minim": 723, "is_rat": 723, "is_splin": 723, "isogeometr": 726, "issu": [0, 183, 724, 726], "itd": [268, 269], "item": [186, 187, 627, 683, 684, 694, 723, 726], "iter": [222, 227, 232, 237, 655, 666, 684, 711], "its": [12, 41, 137, 151, 183, 322, 332, 391, 441, 663, 669, 674, 685, 687], "itself": [299, 310, 315, 320, 342, 347, 352, 353, 364, 657], "j": [0, 3, 62, 133, 142, 160, 172, 204, 211, 404, 434, 657, 687, 726], "j_": [160, 172, 204], "jacobian": [133, 142, 204, 723], "jet": 283, "ji": 204, "john": 726, "jr": 726, "json": 723, "just": [0, 133, 142, 166, 178, 724, 726], "j\u00fcttler": [133, 142], "k": [0, 3, 11, 12, 40, 41, 62, 211, 404, 434, 440, 441, 640, 655, 663, 726], "k3d": 726, "k_": 212, "k_i": 211, "kaufmann": 726, "kd": [25, 53, 83, 111, 424, 454, 508], "keep": [633, 717, 726], "keepdim": [634, 635, 636, 637, 659, 660, 661, 664, 677, 678, 688], "kei": [222, 223, 228, 229, 232, 233, 238, 239, 255, 279, 337, 624, 625, 627, 630, 675, 691, 692, 694, 697, 723, 726], "keyword": [121, 123, 186, 187, 243, 255, 256, 473, 669, 675, 724, 726], "khoromskij": [133, 142], "kind": [638, 639, 640, 663, 675], "kink": 377, "kj": 204, "kl": 204, "knot": [34, 75, 77, 79, 81, 85, 91, 92, 104, 106, 108, 110, 113, 119, 127, 129, 136, 137, 138, 140, 143, 148, 151, 152, 154, 159, 166, 178, 190, 191, 192, 194, 241, 255, 416, 418, 420, 422, 426, 432, 496, 500, 501, 502, 518, 531, 532, 533, 534, 535, 610, 617, 724, 726], "knot_alpha": 726, "knot_c": [283, 726], "knot_insertion_matrix": 723, "knot_lw": 726, "knot_multipl": 723, "knot_span_wis": 287, "knot_vector": [0, 62, 190, 191, 194, 279, 404, 471, 473, 502, 723, 724, 726], "knotspan": 287, "knotvector": [275, 723], "know": [0, 25, 53, 83, 111, 424, 454, 508, 724], "known": [25, 53, 83, 92, 111, 424, 454, 508, 726], "kth": [638, 663], "kv": [0, 723], "kwarg": [29, 30, 34, 56, 57, 87, 88, 92, 115, 116, 186, 187, 226, 227, 236, 237, 241, 283, 287, 292, 299, 305, 310, 315, 320, 325, 330, 335, 342, 347, 353, 358, 359, 364, 369, 397, 399, 428, 429, 458, 459, 473, 512, 514, 631, 643, 647, 689, 698], "l": [0, 3, 62, 92, 404, 434], "label": 255, "label_font": 726, "label_format": 726, "label_offset": 726, "label_rot": 726, "label_s": 726, "labeled_boundari": 255, "langer": [133, 142], "laplac": 724, "laplacian": [205, 208, 210, 723, 724], "laplacian_matrix": 724, "larg": [25, 53, 83, 111, 424, 454, 508, 726], "larger": 657, "largest": 726, "last": [34, 92, 342, 663, 669, 674, 675, 684, 726], "later": [192, 250], "latest": 183, "latter": 724, "lattic": 327, "layer": 358, "layout": [640, 682], "le": 726, "lead": 0, "least": 726, "left": [204, 663, 672, 724], "leftrightarrow": 726, "len": [671, 711, 723], "length": [139, 150, 299, 330, 347, 352, 353, 364, 676, 724, 726], "leq": 92, "less": [146, 160, 172], "let": 0, "letter": [0, 302, 674], "level": [684, 713], "lexsort": 675, "li": [138, 204], "librari": [723, 726], "light": [241, 726], "like": [3, 4, 5, 6, 7, 15, 16, 18, 22, 25, 28, 31, 32, 34, 35, 36, 37, 38, 44, 45, 47, 51, 53, 55, 58, 59, 62, 63, 64, 65, 66, 71, 73, 78, 79, 83, 86, 89, 92, 93, 94, 95, 96, 100, 102, 107, 108, 111, 114, 117, 146, 190, 192, 194, 199, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 241, 255, 256, 344, 349, 378, 382, 384, 386, 404, 405, 406, 407, 408, 412, 414, 419, 420, 424, 427, 430, 434, 435, 436, 437, 438, 444, 445, 447, 451, 454, 457, 460, 461, 473, 474, 475, 476, 477, 488, 492, 499, 508, 511, 516, 519, 521, 624, 640, 683, 691, 700, 702, 711, 712, 715, 724, 726], "limit": [19, 48, 74, 103, 166, 178, 186, 415, 448, 493, 643, 724, 726], "limkild": [133, 142], "line": [0, 3, 62, 166, 178, 264, 265, 266, 283, 404, 434, 674, 723, 726], "line_separated_str": 264, "linear": [135, 143, 145, 150, 307, 312, 317, 355], "linecap": 283, "link": 724, "linux": 724, "list": [3, 11, 17, 27, 31, 33, 40, 46, 54, 58, 60, 62, 72, 75, 77, 79, 84, 85, 90, 91, 101, 104, 106, 108, 112, 113, 118, 119, 139, 158, 159, 160, 166, 167, 168, 169, 171, 172, 178, 179, 181, 191, 192, 194, 217, 218, 222, 232, 241, 244, 252, 254, 255, 256, 258, 259, 262, 268, 269, 271, 272, 274, 276, 280, 281, 283, 287, 289, 290, 291, 293, 299, 300, 305, 310, 315, 320, 325, 330, 335, 342, 347, 352, 353, 358, 364, 369, 375, 376, 382, 388, 393, 404, 413, 416, 418, 420, 425, 426, 431, 432, 440, 446, 456, 460, 462, 470, 471, 472, 473, 491, 500, 501, 502, 509, 517, 518, 537, 538, 540, 548, 580, 594, 598, 603, 604, 605, 606, 608, 616, 617, 619, 624, 625, 641, 663, 675, 684, 691, 692, 702, 711, 712, 724], "list_nam": 271, "list_of_splin": 280, "list_splin": 281, "lk": 204, "lm": 204, "load": [123, 652, 653, 723, 724], "load_opt": 256, "local": [290, 291, 391, 726], "local_fac": 391, "locat": [31, 58, 460, 619, 663, 700, 723, 724, 726], "log": 723, "log_func": 721, "logfil": 717, "logger": [718, 719, 720, 722], "longdoubl": 658, "longer": 726, "look": [136, 148, 344, 349, 359, 724, 726], "loop": [0, 266], "lose": [658, 684], "lost": 683, "low": 641, "lower": [364, 726], "lower_1": 715, "lower_2": 715, "lowest": [378, 395, 711], "lw": 726, "m": [3, 6, 7, 11, 15, 37, 38, 40, 44, 62, 65, 66, 71, 95, 96, 100, 191, 193, 194, 404, 407, 408, 412, 434, 437, 438, 440, 444, 473, 476, 477, 488, 702, 726], "m_j": 726, "machin": 683, "maco": 724, "macro_sensit": 287, "made": [13, 42, 69, 98, 133, 142, 410, 442, 483, 674, 726], "magnitud": 726, "mai": [465, 640, 663, 669, 684, 724], "maintain": 672, "major": 655, "make": [0, 25, 34, 53, 83, 111, 188, 283, 424, 454, 508, 669, 712], "make_matrix": [723, 724], "make_meaning": 723, "make_r": 244, "make_show": 723, "manag": [250, 398, 513, 622, 623, 690], "mani": [205, 263, 724, 726], "manipul": 724, "mantzaflari": [133, 142], "map": [25, 53, 83, 111, 183, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 274, 283, 424, 454, 473, 508, 641, 714, 724], "mapper": 723, "mar": 283, "mark": [283, 724], "markdown": 0, "mask": [378, 382], "match": [352, 378, 382, 714, 726], "math": [28, 55, 86, 114, 386, 394, 427, 457, 511, 658], "mathbb": [3, 62, 92, 404, 434, 473, 726], "mathbf": [11, 40, 204, 440, 714, 726], "mathcal": [11, 12, 40, 41, 440, 441, 714], "mathemat": 473, "mathrm": 92, "matplotlib": 283, "matrix": [79, 108, 251, 420, 714, 724], "max": [0, 534, 643, 723], "max_iter": [25, 53, 83, 111, 424, 454, 508, 579], "maximum": [283, 352, 358, 636, 659, 726], "mayb": 261, "md": 724, "mean": [352, 376, 640, 655, 663, 675, 682, 687, 723, 726], "meaning": [265, 266], "meant": 633, "meanwhil": 726, "measur": 726, "mechan": 726, "media": 726, "mem": 251, "member": [0, 134, 135, 137, 144, 145, 151, 160, 161, 162, 163, 164, 165, 166, 167, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "memori": [255, 640, 641, 655, 669, 674, 682], "mention": 726, "merg": [167, 179, 255], "mergesort": 675, "mesh": [161, 162, 169, 173, 174, 177, 181, 183, 185, 186, 375, 480, 504, 723, 724, 726], "messag": 721, "metal": 726, "method": [3, 34, 62, 92, 126, 132, 156, 183, 196, 204, 215, 220, 230, 250, 251, 286, 296, 302, 307, 312, 317, 322, 327, 332, 339, 344, 349, 355, 361, 366, 374, 404, 434, 469, 473, 523, 530, 536, 539, 562, 584, 623, 633, 658, 668, 683, 690, 700, 723, 724, 726], "mfem": [218, 723, 724], "micro": 724, "microstructur": 723, "microtil": [286, 287, 290, 291, 292, 293, 299, 305, 310, 315, 320, 330, 342, 347, 353, 355, 358, 364, 723, 724], "microtile_list": [299, 305, 310, 315, 320, 325, 330, 335, 342, 347, 353, 358, 364], "middl": 726, "min": [160, 172, 534, 643, 723], "mind": 726, "minim": [146, 723], "minimum": [138, 283, 352, 358, 637, 661, 726], "mirror": 633, "miss": 669, "mlk": 204, "mn": 204, "mode": [642, 665, 680], "model": [141, 255], "modern": 726, "modif": 263, "modifi": [183, 217, 218, 404, 434, 724], "modified_splin": [217, 218], "modul": [0, 1, 121, 124, 242, 284, 294, 463, 621, 674, 723], "moment": [400, 726], "mono": [62, 92], "more": [3, 62, 79, 108, 121, 122, 187, 204, 205, 206, 207, 208, 209, 210, 211, 283, 322, 332, 404, 420, 434, 473, 724, 726], "moreov": 34, "morgan": 726, "most": [3, 62, 404, 434, 669, 674, 684, 723, 724, 726], "move": [663, 724, 726], "multi": [3, 34, 62, 79, 108, 296, 420, 504, 724], "multi_index": [723, 724], "multi_index_help": 504, "multiindex": [504, 723], "multipatch": [160, 161, 162, 163, 164, 165, 166, 167, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 217, 220, 241, 244, 245, 252, 255, 256, 465, 623, 723], "multipatch_id": 252, "multipatchdata": [400, 723], "multipatchshowopt": 723, "multipl": [75, 104, 136, 148, 387, 416, 500, 535, 675, 723, 724, 726], "multipli": [79, 108, 420, 723], "multithread": 724, "must": [194, 255, 287, 299, 310, 315, 320, 347, 352, 353, 358, 364, 643, 669, 726], "my_splin": [132, 156], "mysplin": 471, "n": [0, 3, 4, 5, 6, 7, 15, 18, 22, 25, 28, 32, 35, 36, 37, 38, 44, 47, 51, 53, 55, 59, 62, 63, 64, 65, 66, 71, 73, 78, 83, 86, 89, 92, 93, 94, 95, 96, 100, 102, 107, 111, 114, 117, 133, 134, 139, 142, 144, 146, 147, 190, 191, 192, 193, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 375, 386, 404, 405, 406, 407, 408, 412, 414, 419, 424, 427, 430, 434, 435, 436, 437, 438, 444, 447, 451, 454, 457, 461, 473, 474, 475, 476, 477, 482, 484, 488, 492, 499, 508, 511, 516, 519, 521, 665, 669, 687, 702, 711, 726], "n_": [3, 34, 62, 92, 404, 434, 473, 726], "n_boundari": 384, "n_col": [714, 724], "n_control_point": [190, 191, 194], "n_ctp": 714, "n_default_thread": 723, "n_fitting_point": [190, 191, 194], "n_i": 726, "n_knot": [91, 119, 432, 724], "n_knot_span": [137, 138, 140, 143, 151, 152], "n_knots_span": 140, "n_patch": [384, 391], "n_sides_per_patch": 391, "n_thread": [4, 5, 18, 22, 32, 35, 36, 47, 51, 59, 63, 64, 73, 78, 89, 93, 94, 102, 107, 117, 405, 406, 414, 419, 430, 435, 436, 447, 451, 461, 474, 475, 492, 499, 516], "n_tick": 283, "naive_splin": [136, 148], "name": [0, 3, 62, 205, 210, 244, 252, 255, 271, 275, 276, 283, 300, 337, 359, 404, 434, 652, 674, 685, 723, 726], "name_to_typ": [245, 256, 259, 262, 269, 620, 723], "namespac": [121, 123, 724], "nan_text": 726, "natur": [3, 62], "ncpt": 279, "nd": 658, "nd_box": 139, "ndarrai": [4, 5, 6, 7, 15, 18, 21, 22, 25, 28, 32, 33, 35, 36, 37, 38, 44, 47, 50, 51, 53, 55, 59, 60, 63, 64, 65, 66, 71, 73, 76, 78, 83, 86, 89, 90, 93, 94, 95, 96, 100, 102, 105, 107, 111, 114, 117, 118, 135, 137, 145, 147, 151, 190, 191, 192, 197, 198, 200, 201, 206, 207, 208, 209, 211, 212, 213, 279, 297, 298, 299, 303, 304, 305, 308, 309, 310, 313, 314, 315, 318, 319, 320, 323, 324, 328, 329, 330, 333, 334, 340, 341, 342, 345, 346, 347, 350, 351, 352, 353, 356, 357, 362, 363, 364, 367, 368, 376, 380, 383, 386, 389, 391, 394, 395, 396, 402, 405, 406, 407, 408, 412, 414, 417, 419, 424, 427, 430, 431, 435, 436, 437, 438, 444, 447, 450, 451, 454, 457, 461, 462, 474, 475, 476, 477, 480, 481, 482, 484, 487, 488, 490, 492, 495, 499, 507, 508, 511, 516, 517, 526, 527, 528, 529, 532, 533, 535, 542, 544, 547, 549, 550, 556, 557, 559, 563, 564, 565, 566, 569, 571, 572, 575, 579, 580, 581, 582, 588, 589, 590, 594, 595, 602, 604, 606, 608, 610, 611, 613, 617, 619, 625, 633, 640, 641, 655, 666, 668, 684, 685, 687, 692, 711, 712, 714, 724, 726], "ndarrrai": [25, 53, 83, 111, 424, 454, 508], "ndim": [147, 684], "nearest": [25, 53, 83, 111, 424, 454, 508, 684], "necessari": [0, 325, 335, 355, 669], "necessarili": 726, "need": [290, 291, 299, 310, 315, 320, 347, 352, 358, 657, 663, 675, 726], "neg": [21, 25, 50, 53, 76, 83, 105, 111, 376, 391, 417, 424, 450, 454, 495, 508, 726], "neighbor": [25, 53, 83, 111, 276, 296, 364, 384, 390, 424, 454, 508], "neq": 726, "nest": 684, "never": [266, 674, 726], "new": [0, 11, 40, 77, 79, 91, 106, 108, 119, 132, 134, 135, 144, 145, 218, 263, 378, 382, 384, 395, 418, 420, 432, 440, 485, 626, 640, 642, 668, 669, 687, 693, 713, 726], "new_dimens": [134, 144], "new_knot": 608, "new_knot_vector": 613, "new_shap": 669, "new_splin": [13, 42, 69, 98, 410, 442, 483], "newbyteord": 641, "newli": [13, 42, 69, 98, 410, 442, 483, 640], "newton": [25, 53, 83, 111, 424, 454, 508], "next": 266, "next_lin": 723, "next_meaningful_str": 266, "ni": 204, "nlabel": 726, "nm": 204, "noindent": 726, "non": [92, 133, 137, 142, 151, 159, 255, 347, 404, 662], "none": [3, 4, 5, 6, 7, 10, 15, 17, 18, 19, 21, 22, 25, 27, 28, 32, 35, 36, 37, 38, 39, 44, 46, 47, 48, 50, 51, 53, 54, 55, 59, 62, 63, 64, 65, 66, 68, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 89, 91, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 117, 119, 127, 129, 135, 137, 141, 143, 145, 151, 152, 154, 158, 159, 160, 168, 171, 172, 183, 185, 188, 191, 194, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 251, 252, 253, 255, 258, 263, 266, 268, 271, 275, 276, 280, 283, 286, 287, 288, 290, 291, 293, 299, 300, 305, 310, 315, 320, 325, 330, 335, 336, 342, 347, 352, 353, 358, 364, 369, 370, 371, 372, 374, 375, 377, 378, 379, 381, 382, 384, 386, 387, 388, 390, 394, 395, 396, 398, 400, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 419, 420, 422, 424, 425, 426, 427, 430, 432, 434, 435, 436, 437, 438, 439, 444, 446, 447, 448, 450, 451, 454, 456, 457, 461, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 513, 515, 516, 518, 519, 520, 521, 526, 527, 528, 529, 534, 540, 543, 557, 571, 587, 588, 589, 590, 592, 603, 624, 625, 627, 630, 631, 634, 635, 636, 637, 638, 639, 642, 643, 644, 648, 649, 653, 654, 658, 659, 660, 661, 663, 664, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 678, 680, 684, 686, 687, 688, 691, 692, 694, 697, 698, 700, 702, 712, 713, 717, 718, 719, 720, 722, 726], "nonumb": 726, "nonzero": [251, 723, 726], "norm": [25, 53, 83, 111, 384, 390, 424, 454, 508, 726], "normal": [160, 172, 377, 726], "normalize_knot_vector": 723, "notabl": 724, "note": [167, 179, 404, 658, 663, 668, 669, 674, 675, 683, 684, 724], "noth": [470, 472], "notic": 726, "now": [0, 62, 404], "np": [4, 5, 6, 7, 15, 18, 21, 22, 25, 28, 32, 33, 35, 36, 37, 38, 44, 47, 50, 51, 53, 55, 59, 60, 63, 64, 65, 66, 71, 73, 76, 78, 79, 83, 86, 89, 90, 93, 94, 95, 96, 100, 102, 105, 107, 108, 111, 114, 117, 118, 128, 130, 135, 137, 145, 151, 190, 191, 192, 197, 198, 200, 201, 206, 207, 208, 209, 211, 212, 213, 215, 279, 297, 298, 299, 303, 304, 305, 308, 309, 310, 313, 314, 315, 318, 319, 320, 323, 324, 325, 328, 329, 330, 333, 334, 335, 340, 341, 342, 345, 346, 347, 350, 351, 352, 353, 356, 357, 358, 362, 363, 364, 367, 368, 376, 386, 390, 391, 394, 395, 402, 405, 406, 407, 408, 412, 414, 417, 419, 420, 424, 427, 430, 431, 435, 436, 437, 438, 444, 447, 450, 451, 454, 457, 461, 462, 474, 475, 476, 477, 480, 481, 482, 484, 487, 488, 490, 492, 495, 499, 500, 507, 508, 511, 516, 517, 625, 640, 641, 654, 655, 656, 657, 658, 663, 669, 671, 673, 674, 675, 682, 684, 687, 692, 711, 712, 714, 724], "npoint": 147, "npz": 723, "nr": [724, 726], "nthread": [4, 5, 6, 7, 15, 18, 22, 25, 28, 32, 35, 36, 37, 38, 44, 47, 51, 53, 55, 59, 63, 64, 65, 66, 71, 73, 78, 83, 86, 89, 93, 94, 95, 96, 100, 102, 107, 111, 114, 117, 205, 206, 207, 208, 209, 210, 211, 212, 213, 375, 377, 379, 386, 390, 394, 405, 406, 407, 408, 412, 414, 419, 424, 427, 430, 435, 436, 437, 438, 444, 447, 451, 454, 457, 461, 474, 475, 476, 477, 488, 492, 499, 508, 511, 516, 540, 547, 550, 556, 563, 564, 565, 566, 569, 572, 575, 579, 581, 582, 594, 604, 723, 724], "null_splin": 723, "number": [91, 92, 119, 137, 138, 140, 143, 146, 151, 152, 154, 168, 185, 190, 191, 192, 194, 205, 210, 251, 252, 283, 287, 290, 291, 293, 325, 335, 375, 377, 379, 390, 391, 432, 466, 641, 657, 658, 670, 673, 714, 724, 726], "number_of_faces_per_el": 391, "numer": [198, 201, 726], "numpi": [79, 108, 147, 380, 383, 389, 396, 420, 526, 527, 528, 529, 532, 535, 542, 544, 547, 549, 550, 556, 557, 559, 563, 564, 565, 566, 569, 571, 572, 575, 579, 580, 581, 582, 588, 589, 590, 594, 595, 602, 604, 606, 608, 610, 611, 613, 617, 619, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 684, 686, 687, 688, 714, 723, 724, 726], "nurb": [92, 126, 136, 138, 140, 141, 143, 148, 152, 154, 156, 244, 273, 275, 277, 278, 280, 281, 434, 465, 471, 473, 498, 723, 724], "nurbs_curv": 404, "nut": [344, 349], "o": 391, "obj": [126, 156], "object": [25, 53, 83, 111, 126, 132, 133, 142, 156, 166, 178, 183, 186, 196, 199, 202, 215, 223, 226, 233, 236, 240, 241, 245, 247, 248, 250, 256, 276, 287, 337, 366, 387, 390, 401, 424, 454, 508, 541, 558, 625, 627, 630, 633, 654, 658, 669, 673, 682, 683, 684, 692, 694, 697, 712, 724, 726], "objects_to_plot": 283, "obtain": [183, 726], "occur": [640, 655], "off": [0, 283, 726], "offset": [283, 364, 650, 657, 673, 686], "often": [3, 62], "oid": 332, "old": [79, 108, 420], "old_knot_vector": [608, 613], "omega_": [34, 473, 726], "omega_i": 726, "onc": [0, 34, 255, 663, 724, 726], "one": [0, 3, 62, 121, 135, 140, 145, 149, 160, 167, 172, 179, 205, 210, 299, 310, 315, 320, 347, 352, 353, 358, 404, 434, 640, 655, 658, 676, 713, 717, 721, 726], "ones": 726, "onli": [25, 34, 53, 83, 92, 111, 122, 126, 133, 141, 142, 156, 160, 166, 167, 172, 178, 179, 194, 241, 255, 256, 292, 305, 358, 378, 404, 424, 454, 473, 508, 640, 650, 658, 669, 674, 717, 723, 724, 726], "onto": 186, "open": [0, 34, 92, 127, 129, 140, 186, 241, 266, 683, 726], "oper": [34, 75, 79, 92, 104, 108, 416, 420, 467, 682], "optim": [658, 726], "option": [11, 40, 79, 108, 121, 123, 138, 140, 141, 143, 149, 152, 154, 197, 198, 199, 200, 201, 202, 220, 221, 222, 224, 225, 226, 229, 230, 231, 232, 234, 235, 236, 239, 241, 244, 250, 251, 255, 256, 283, 359, 398, 420, 440, 513, 640, 641, 655, 663, 669, 673, 674, 675, 682, 700, 711, 724, 726], "optionlist": 251, "order": [6, 7, 15, 16, 37, 38, 44, 45, 65, 66, 71, 92, 95, 96, 100, 197, 198, 199, 200, 201, 202, 204, 218, 274, 275, 283, 290, 291, 407, 408, 412, 437, 438, 444, 445, 476, 477, 488, 565, 566, 569, 602, 638, 639, 640, 655, 663, 666, 668, 669, 672, 675, 682, 683, 685, 687, 711, 724, 726], "org": 283, "orient": [218, 322, 332, 390], "origin": [136, 140, 148, 183, 724, 726], "other": [79, 92, 108, 222, 232, 299, 347, 352, 353, 361, 420, 640, 654, 669, 674, 723, 726], "otherwis": [21, 50, 76, 77, 85, 105, 106, 113, 133, 142, 263, 417, 418, 426, 450, 495, 640, 655, 682, 700, 726], "our": [183, 657], "ourselv": [3, 62, 404, 434, 726], "out": [21, 50, 76, 105, 122, 247, 248, 417, 450, 495, 634, 635, 636, 637, 641, 642, 643, 644, 648, 649, 659, 660, 661, 664, 670, 677, 678, 680, 686, 688, 724, 726], "outer": [11, 12, 40, 41, 143, 152, 287, 288, 440, 441, 597, 598, 599, 724], "outer_radiu": [141, 143, 152, 153, 724], "outer_rariu": 153, "output": [255, 283, 663, 683], "output_dict": [247, 271], "outward": [299, 310, 315, 320, 330, 347, 353, 358, 364], "over": [198, 201, 655, 664, 678, 684, 726], "overcom": [404, 683], "overhead": 251, "overlap": [167, 179], "overview": [473, 724], "overwrit": [183, 263], "own": [465, 669, 674, 726], "owndata": 674, "owner": 674, "p": [3, 34, 62, 92, 404, 434, 687, 726], "p_": 726, "p_0": [325, 335], "p_1": [325, 335], "p_2": [325, 335], "p_3": [325, 335], "p_basis0": 724, "p_basis1": 724, "pad": [183, 723], "panzer": 711, "para_2_dim_2": 724, "para_coord": [25, 53, 83, 111, 424, 454, 508], "para_coordin": 724, "para_dim": [3, 4, 5, 6, 7, 15, 16, 18, 21, 22, 25, 31, 32, 35, 36, 37, 38, 44, 45, 47, 50, 51, 53, 58, 59, 62, 63, 64, 65, 66, 71, 73, 76, 78, 83, 89, 91, 93, 94, 95, 96, 100, 102, 105, 107, 111, 117, 119, 160, 161, 162, 166, 167, 169, 172, 173, 174, 177, 178, 179, 180, 181, 205, 206, 207, 208, 209, 210, 211, 212, 213, 241, 279, 290, 291, 300, 315, 320, 386, 404, 405, 406, 407, 408, 412, 414, 417, 419, 424, 430, 432, 434, 435, 436, 437, 438, 444, 445, 447, 450, 451, 454, 460, 461, 473, 474, 475, 476, 477, 480, 487, 488, 490, 492, 495, 499, 507, 508, 516, 571, 580, 608, 610, 611, 615, 617, 619, 723, 724, 726], "para_splin": [136, 148], "paradim": [212, 287], "parallel": 724, "param": [3, 34, 62, 92, 298, 304, 309, 314, 319, 324, 329, 334, 341, 346, 351, 357, 363, 368, 404, 434, 473], "paramet": [0, 3, 4, 5, 6, 7, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 247, 248, 251, 252, 253, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 271, 272, 274, 275, 276, 277, 278, 280, 281, 283, 287, 288, 290, 291, 292, 293, 297, 298, 299, 300, 303, 304, 305, 308, 309, 310, 313, 314, 315, 318, 319, 320, 323, 324, 325, 328, 329, 330, 333, 334, 335, 336, 337, 340, 341, 342, 345, 346, 347, 350, 351, 352, 353, 356, 357, 358, 359, 362, 363, 364, 367, 368, 369, 375, 377, 378, 379, 382, 384, 386, 387, 388, 390, 394, 395, 398, 399, 400, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 456, 457, 458, 459, 460, 461, 462, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 620, 624, 625, 627, 630, 631, 640, 641, 652, 653, 654, 655, 657, 658, 663, 668, 669, 673, 674, 675, 682, 683, 684, 687, 691, 692, 694, 697, 698, 700, 702, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 726], "parameter": [190, 191, 194, 723, 726], "parameter_sensit": [299, 305, 310, 315, 320, 325, 330, 335, 342, 347, 352, 353, 358, 364], "parameter_sensitivity_funct": 723, "parameterspac": 723, "parametr": [0, 3, 11, 12, 25, 28, 34, 40, 41, 53, 55, 77, 79, 83, 86, 91, 92, 106, 108, 111, 114, 119, 128, 130, 135, 136, 137, 140, 145, 146, 148, 151, 158, 160, 166, 167, 168, 171, 172, 178, 179, 180, 183, 185, 192, 193, 194, 197, 198, 200, 201, 205, 210, 217, 218, 290, 291, 293, 299, 310, 315, 320, 322, 332, 347, 352, 358, 375, 386, 392, 394, 418, 420, 424, 427, 432, 440, 441, 454, 457, 473, 506, 508, 511, 531, 700, 724, 726], "parametric_bound": [146, 700, 723, 726], "parametric_coordin": [192, 724], "parametric_dimens": [17, 27, 46, 54, 72, 77, 79, 84, 85, 101, 106, 108, 112, 113, 413, 418, 420, 425, 426, 446, 456, 491, 509], "parametric_funct": 723, "parametric_spac": [241, 507], "parametric_view": [158, 171, 723], "parametrization_funct": [286, 290, 723], "parent": [126, 196], "part": [0, 143, 183, 255, 641, 657, 724], "partial": [11, 12, 40, 41, 204, 211, 212, 440, 441, 663, 675, 721, 724], "partial_parti": 724, "partialmethod": 721, "particular": 726, "partit": [638, 675, 723, 726], "pass": [3, 34, 62, 92, 168, 186, 287, 292, 315, 320, 404, 434, 640, 663, 668, 724], "patch": [75, 104, 153, 159, 251, 252, 255, 273, 277, 374, 375, 376, 379, 388, 391, 402, 416, 723, 724], "path": [0, 269, 652, 683], "paul": 711, "pep": 0, "per": [91, 119, 166, 167, 178, 179, 192, 251, 287, 293, 300, 432, 724, 726], "perform": [75, 104, 186, 215, 416, 478, 494, 497, 724], "period": 726, "permut": [218, 687], "permutation_list": 218, "permute_parametric_ax": 723, "perspect": 726, "philosoph": 520, "phy": [3, 62, 404, 434, 473], "phys_coord": [25, 53, 83, 111, 424, 454, 508], "phys_diff": [25, 53, 83, 111, 424, 454, 508], "phys_dim": 607, "physic": [0, 3, 20, 23, 25, 49, 52, 53, 62, 80, 83, 109, 111, 133, 134, 142, 144, 146, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 252, 253, 385, 404, 421, 424, 434, 449, 452, 454, 473, 489, 503, 508, 724], "physical_bound": 146, "physical_coordin": 724, "physical_coordind": 724, "physical_deriv": 724, "physical_differ": 724, "physical_funct": 723, "physicalspacearrai": 723, "pickl": [652, 653], "pictur": 283, "piegl": 726, "pierr": 726, "pink": 726, "pip": [0, 724], "pixel": 726, "place": [624, 641, 669, 673, 675, 687, 691, 724, 726], "plai": 726, "plane": [138, 140, 168], "plant": [25, 53, 83, 111, 424, 454, 508], "plastic": 726, "plate": [154, 723], "pleas": [19, 48, 74, 103, 186, 188, 415, 448, 493, 724, 726], "plot": [283, 700], "plotter": [29, 56, 87, 115, 186, 292, 428, 458, 512], "plt": 292, "pmb": [714, 726], "po": 726, "point": [0, 3, 11, 12, 25, 34, 40, 41, 53, 62, 79, 83, 92, 108, 111, 122, 134, 138, 144, 147, 164, 165, 176, 183, 190, 191, 192, 193, 194, 204, 205, 209, 210, 211, 212, 213, 214, 251, 276, 283, 287, 290, 291, 299, 310, 315, 320, 347, 352, 353, 358, 378, 384, 390, 404, 420, 424, 434, 440, 441, 454, 481, 482, 484, 504, 508, 700, 711, 714, 724, 726], "polygon": 726, "polynomi": [3, 34, 92, 726], "polynomial_bezi": 3, "pop": [723, 726], "portion": 726, "posit": [11, 12, 25, 40, 41, 53, 83, 111, 160, 172, 185, 283, 290, 352, 377, 386, 391, 402, 424, 440, 441, 454, 508, 663], "possibl": [0, 21, 50, 76, 105, 154, 255, 265, 283, 417, 450, 495, 640, 726], "possibli": [243, 684], "potenti": [143, 152], "power": 726, "practic": 724, "pragma": 0, "pre": 0, "precalcul": 205, "precis": [275, 683, 684], "precommit": 0, "predefin": [336, 624, 691], "prefer": 255, "prefix": 263, "prepar": [0, 240, 700], "prepend": 721, "prepend_log": 723, "present": 700, "preserv": [136, 148, 640, 724], "pretti": 244, "prevent": [266, 669], "previou": 650, "previous": [136, 148, 724, 726], "primit": 724, "princip": 726, "print": [244, 283], "prism": 485, "problem": [253, 683, 724], "proce": 434, "procedur": 240, "process": [464, 726], "prod": [4, 5, 6, 7, 32, 35, 36, 37, 38, 59, 63, 64, 65, 66, 89, 93, 94, 95, 96, 117, 206, 207, 208, 212, 405, 406, 407, 408, 430, 435, 436, 437, 438, 461, 474, 475, 476, 477, 516, 723], "produc": [641, 682, 683], "product": [3, 28, 55, 62, 86, 114, 386, 394, 427, 457, 511, 648, 664, 711, 726], "project": [133, 142, 404, 726], "propag": [377, 726], "proper": 723, "properli": [0, 674], "properti": [8, 9, 24, 26, 67, 82, 92, 184, 185, 188, 271, 288, 289, 290, 291, 293, 376, 385, 387, 388, 391, 392, 393, 398, 400, 402, 423, 453, 455, 469, 470, 472, 478, 480, 481, 482, 484, 485, 487, 489, 490, 494, 496, 497, 498, 500, 501, 502, 504, 505, 506, 507, 510, 513, 515, 518, 519, 520, 521, 545, 546, 551, 552, 553, 554, 555, 560, 561, 567, 570, 573, 574, 576, 577, 578, 583, 687, 724], "propos": 726, "prototyp": 724, "provid": [147, 183, 287, 289, 290, 291, 355, 387, 505, 663, 674, 723, 724, 726], "proxim": [723, 724], "public": 724, "pull": 0, "pure": [0, 243], "purpos": 669, "put": [673, 723], "py": [0, 182, 294, 463, 478, 494, 497, 622, 716], "pyarray_resolvewritebackifcopi": 674, "pybind11_object": [523, 530, 536, 539, 562, 584], "pymultipatch": [374, 380, 381, 383, 389, 396, 401, 723], "pypi": 669, "pyramid": 723, "pysplin": [14, 43, 70, 99, 411, 443, 473, 486, 591, 592, 593, 595, 597, 598, 599, 600, 601, 602, 605, 606, 607, 609, 610, 614, 615, 617, 618, 619, 723], "python": [243, 250, 251, 252, 253, 658, 669, 682, 683, 684], "python3": [0, 724], "q": [3, 62, 404, 434], "qquad": 726, "qua": 251, "quad": [11, 40, 440, 726], "quadrat": [143, 307, 312, 355], "quadratur": [198, 199, 201, 202, 251], "quarter": 434, "quarter_circl": 724, "qub": 251, "queri": [4, 5, 6, 7, 15, 18, 22, 25, 32, 35, 36, 37, 38, 44, 47, 51, 53, 59, 63, 64, 65, 66, 71, 73, 78, 79, 83, 89, 93, 94, 95, 96, 100, 102, 107, 108, 111, 117, 126, 128, 130, 193, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 386, 405, 406, 407, 408, 412, 414, 419, 420, 424, 430, 435, 436, 437, 438, 444, 447, 451, 454, 461, 464, 474, 475, 476, 477, 478, 488, 492, 499, 508, 516, 547, 563, 564, 565, 566, 569, 572, 575, 579, 582, 700, 714, 715, 724, 726], "question": [520, 711], "quick": 683, "quicksort": 675, "quiver_s": 283, "quotat": 724, "qurul": 251, "r": [0, 3, 62, 92, 140, 152, 364, 404, 434, 473, 702, 724, 726], "r_": 726, "radian": 305, "radiant": [137, 151], "radii": [322, 332, 358], "radiu": [138, 140, 141, 143, 149, 152, 153, 154, 299, 310, 315, 320, 330, 335, 347, 353, 358, 364, 726], "rais": [25, 53, 83, 111, 247, 248, 424, 454, 508, 640, 642, 665, 669, 680, 726], "randint": 658, "random": 658, "rang": [31, 58, 81, 110, 168, 422, 460, 726], "rare": 654, "raster": 715, "ratio": [185, 283, 726], "ration": [133, 138, 142, 159, 280, 281, 283, 404, 434, 498, 724], "rational_bezi": [465, 723], "rationalbezi": [34, 138, 149, 465, 473, 723, 724], "ravel": [655, 723, 724], "ravel_multi_index": 215, "raw": [279, 682, 724], "re": [25, 53, 83, 111, 424, 454, 508], "reach": [377, 726], "read": [245, 256, 259, 269, 277, 281, 434, 650, 652], "read_ig": 723, "read_solut": 723, "readabl": [255, 266, 283], "reader": 726, "readi": [277, 724], "real": [640, 641, 726], "realloc": 669, "reason": 726, "reassign": [382, 626, 693], "recent": [669, 674, 684], "recommend": [25, 53, 83, 111, 424, 454, 508, 723], "recomput": [384, 389, 549], "recov": 683, "recreat": 684, "rectangl": [139, 327], "recurr": 726, "recurs": [0, 92, 684, 713, 724], "red": 283, "redirect": 187, "reduc": [0, 27, 54, 84, 112, 425, 456, 509, 724, 726], "reduce_degre": 723, "refcheck": 669, "refer": [12, 23, 34, 41, 52, 80, 92, 109, 127, 129, 133, 142, 204, 391, 421, 441, 452, 473, 503, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 648, 649, 650, 659, 660, 661, 662, 664, 665, 666, 667, 668, 669, 670, 675, 676, 677, 678, 679, 680, 686, 687, 688, 724, 726], "referenc": [669, 674], "reference_nurb": 278, "refin": [91, 119, 432, 724, 726], "regard": 726, "regist": [224, 225, 229, 234, 235, 239], "regular": 647, "rel": 283, "relat": [79, 92, 108, 167, 179, 255, 420, 485, 504, 724, 726], "relev": 241, "reli": 283, "reliabl": 669, "remov": [85, 113, 426, 650, 676, 713, 724], "remove_knot": 723, "renault": 726, "render": 726, "reorder": [217, 218], "reparametr": 723, "repeat": [34, 92, 723, 726], "replac": [263, 269, 465], "repo": 0, "repres": [11, 21, 23, 40, 50, 52, 76, 79, 80, 105, 108, 109, 133, 142, 157, 158, 159, 170, 171, 204, 283, 287, 325, 335, 369, 375, 376, 379, 404, 417, 420, 421, 440, 450, 452, 495, 503, 726], "represent": [11, 16, 40, 45, 168, 180, 204, 388, 440, 445, 624, 641, 691, 700, 726], "request": [0, 16, 45, 128, 130, 352, 445, 464], "requied_properti": 510, "requir": [0, 205, 210, 275, 283, 287, 290, 291, 330, 390, 469, 470, 471, 472, 510, 640, 700, 724, 726], "required_properti": 723, "required_spline_properti": 471, "requiredproperti": 723, "requiredsplineproperti": 471, "resembl": [283, 302], "reserv": 283, "reshap": [669, 687, 723], "residu": [25, 53, 83, 111, 191, 193, 194, 424, 454, 508], "residual_curv": 724, "residual_surfac": 724, "resiz": 723, "resolut": [28, 55, 86, 114, 166, 167, 169, 178, 179, 181, 241, 375, 386, 394, 427, 457, 480, 511, 556, 581, 624, 625, 691, 692, 700, 702, 715, 724, 726], "resolution_1": 715, "resolution_2": 715, "respect": [11, 12, 25, 40, 41, 53, 83, 111, 157, 170, 204, 255, 287, 299, 310, 315, 320, 325, 335, 342, 347, 352, 353, 364, 424, 440, 441, 454, 508, 674, 700, 726], "restrict": [3, 62, 404, 434, 650, 726], "result": [15, 18, 22, 28, 44, 47, 51, 55, 71, 73, 78, 86, 100, 102, 107, 114, 133, 137, 142, 151, 205, 210, 283, 305, 386, 394, 412, 414, 419, 427, 444, 447, 451, 457, 488, 492, 499, 500, 511, 518, 640, 656, 671, 683, 724, 726], "retain": 675, "retriev": [23, 52, 80, 109, 183, 205, 210, 256, 384, 421, 452, 503, 726], "return": [3, 4, 5, 6, 7, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 247, 248, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 271, 272, 274, 275, 276, 277, 278, 280, 281, 283, 287, 288, 290, 291, 292, 293, 297, 298, 299, 300, 303, 304, 305, 308, 309, 310, 313, 314, 315, 318, 319, 320, 323, 324, 325, 328, 329, 330, 333, 334, 335, 336, 337, 340, 341, 342, 345, 346, 347, 350, 351, 352, 353, 356, 357, 358, 359, 362, 363, 364, 367, 368, 369, 375, 376, 377, 378, 379, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 456, 457, 458, 459, 460, 461, 462, 465, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 532, 533, 535, 620, 624, 625, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 643, 644, 646, 648, 649, 650, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 668, 669, 670, 671, 673, 675, 677, 678, 679, 680, 682, 684, 685, 686, 687, 688, 691, 692, 694, 695, 696, 697, 698, 699, 702, 711, 712, 713, 714, 717, 718, 719, 720, 721, 722, 724], "return_discret": 241, "return_gustaf": [186, 241], "return_show": [30, 57, 88, 116, 186, 187, 241, 399, 429, 459, 514], "return_verbos": [25, 53, 83, 111, 424, 454, 508, 724], "revers": [687, 711], "revolut": [137, 143, 151, 152, 154], "revolv": [154, 723, 724], "rewritten": [3, 62], "rgb": [283, 726], "right": [204, 218, 663], "roger": 726, "role": 726, "rotat": [138, 141, 143, 152, 154, 325, 335], "roti": [325, 335], "rotx": [325, 335], "round": 723, "row": [283, 655], "row_indic": 723, "rp_intersect": 470, "rp_union": 472, "rtype": 385, "rule": [251, 726], "run": [0, 726], "runtim": [25, 53, 83, 111, 424, 454, 508], "rwth": [243, 245], "s1": 675, "s3": 641, "safe": [223, 233, 261, 640, 669], "sai": 266, "said": [290, 291], "same": [5, 7, 16, 36, 38, 45, 64, 66, 94, 96, 136, 148, 164, 165, 176, 205, 210, 215, 255, 261, 404, 406, 408, 436, 438, 445, 475, 477, 505, 640, 641, 654, 656, 668, 671, 684, 685, 687, 712, 715, 726], "same_kind": 640, "same_nurb": 82, "same_parametric_bound": [556, 723], "same_spline_with_knot_vector": 723, "sampl": [25, 53, 83, 111, 166, 167, 169, 178, 179, 181, 240, 424, 454, 508, 700, 723, 724, 726], "satisfi": [300, 640, 726], "save": [10, 13, 25, 39, 42, 53, 68, 69, 83, 97, 98, 111, 244, 255, 258, 268, 271, 280, 388, 409, 410, 424, 439, 442, 454, 479, 483, 508, 626, 630, 693, 697, 726], "saved_data": [13, 42, 69, 98, 410, 442, 483], "scalar": [11, 40, 209, 404, 434, 440, 625, 654, 658, 684, 692, 700, 726], "scalarbar": [283, 726], "scalarbar3d": 726, "scalarbar_aspect_ratio": 283, "scalarbar_font_s": 283, "scalarbar_offset": 283, "scalarbar_stroke_width": 283, "scalarbar_tick_dist": 283, "scalarbar_width": 283, "scale": [183, 723, 726], "scenario": [79, 108, 420], "scheme": 0, "scienc": 726, "scientif": 726, "scipi": [79, 108, 420, 714], "script": 726, "seamless": 724, "search": [25, 53, 83, 111, 424, 454, 508, 724], "searchsort": [675, 723], "second": [204, 252, 283, 330, 663, 675, 724, 726], "second_deriv": [25, 53, 83, 111, 424, 454, 508, 724], "section": [138, 154, 265, 266, 275, 726], "section_angl": 154, "section_inner_radiu": 154, "section_n_knot_span": 154, "section_outer_radiu": [154, 724], "see": [0, 3, 29, 30, 34, 56, 57, 62, 79, 87, 88, 92, 108, 115, 116, 121, 187, 205, 206, 207, 208, 209, 210, 211, 283, 322, 332, 399, 404, 420, 428, 429, 434, 458, 459, 512, 514, 640, 663, 672, 674, 675, 724, 726], "seed": [377, 658], "seen": [34, 473], "segment": [275, 726], "select": [255, 644, 657, 663, 726], "self": [13, 14, 20, 31, 42, 43, 49, 58, 69, 70, 98, 99, 134, 135, 137, 144, 145, 151, 160, 161, 162, 163, 164, 165, 166, 167, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 188, 197, 199, 200, 202, 206, 207, 208, 380, 381, 383, 389, 396, 401, 410, 411, 442, 443, 449, 460, 483, 486, 519, 521, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 538, 540, 541, 542, 543, 544, 547, 548, 549, 550, 556, 557, 558, 559, 563, 564, 565, 566, 568, 569, 571, 572, 575, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 641, 726], "sensit": [11, 40, 290, 299, 310, 315, 320, 325, 335, 342, 347, 352, 353, 364, 369, 440], "sep": 683, "separ": [255, 358, 668, 683], "seperator_dist": 358, "sequenc": [663, 726], "seri": 726, "serv": [723, 724], "set": [0, 11, 25, 40, 53, 79, 81, 83, 92, 108, 110, 111, 123, 128, 130, 134, 136, 144, 148, 183, 187, 255, 263, 290, 291, 322, 330, 332, 378, 379, 386, 390, 395, 420, 422, 424, 440, 454, 508, 640, 642, 665, 669, 674, 689, 700, 717, 723, 724], "set_boundari": 723, "set_interfac": 723, "set_row": 723, "setfield": 723, "setflag": 723, "setter": 188, "sever": 724, "shallow": [13, 42, 69, 98, 136, 148, 410, 442, 483], "shape": [6, 7, 15, 25, 37, 38, 44, 53, 65, 66, 71, 83, 95, 96, 100, 111, 149, 150, 154, 204, 296, 297, 298, 303, 304, 308, 309, 313, 314, 318, 319, 323, 324, 328, 329, 333, 334, 340, 341, 345, 346, 350, 351, 356, 357, 362, 363, 367, 368, 404, 407, 408, 412, 424, 437, 438, 444, 454, 476, 477, 488, 508, 640, 656, 668, 669, 687, 724, 726], "share": [473, 669, 726], "shell": 724, "shift": 726, "shini": 726, "short": 682, "should": [31, 58, 136, 148, 183, 185, 252, 369, 460, 465, 505, 640, 672, 724, 726], "show": [30, 57, 88, 116, 122, 187, 220, 230, 398, 399, 429, 459, 513, 514, 682, 723, 724, 726], "show_opt": [136, 148, 157, 170, 222, 232, 283, 723, 724], "showabl": [167, 179, 186, 240, 241, 723], "showable_or_plott": [29, 56, 87, 115, 428, 458, 512], "shown": 123, "showopt": [220, 222, 230, 232], "shrink": 669, "side": [296, 505, 663, 672, 723, 724], "similar": [204, 223, 233, 404, 434, 658, 726], "simpl": [294, 307, 312, 317, 344, 349, 355, 684], "simpli": [222, 232, 687, 726], "simplic": [3, 62, 404, 434], "sin": 726, "sinc": [627, 663, 669, 684, 685, 694], "singl": [20, 49, 153, 273, 277, 382, 449, 654, 658, 663, 674, 675, 711, 726], "six": [315, 320], "size": [192, 194, 283, 375, 391, 657, 658, 669, 683, 724, 726], "skip": 657, "slice": [504, 644], "small": 283, "smaller": 663, "smo": 251, "smooth": [724, 726], "snap": [361, 364], "snappi": 723, "so": [34, 92, 128, 130, 241, 669, 674, 683, 712, 726], "solid": 141, "solut": [204, 278, 724, 726], "solution_field": 724, "solution_nurb": 278, "solv": 193, "solve_for_control_point": 723, "solver": 724, "some": [12, 41, 123, 196, 210, 299, 310, 315, 320, 325, 335, 342, 347, 352, 353, 364, 441, 622, 674, 683, 724], "someth": 726, "sometim": [204, 684], "sort": [639, 663, 723], "sorter": 672, "sourc": [0, 3, 34, 40, 41, 45, 49, 58, 62, 92, 104, 106, 108, 110, 113, 119, 121, 122, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 186, 187, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 220, 230, 240, 241, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 271, 272, 274, 275, 276, 277, 278, 280, 281, 283, 286, 287, 292, 296, 299, 300, 302, 305, 307, 310, 312, 315, 317, 320, 322, 325, 327, 330, 332, 335, 336, 337, 339, 342, 344, 347, 349, 352, 353, 355, 358, 359, 361, 364, 366, 367, 368, 369, 374, 375, 377, 378, 379, 382, 384, 386, 390, 394, 395, 397, 399, 404, 434, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 483, 488, 491, 492, 493, 495, 499, 503, 508, 509, 511, 512, 514, 516, 517, 620, 623, 624, 625, 633, 647, 656, 671, 689, 690, 691, 692, 700, 702, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 724], "space": [3, 23, 52, 62, 79, 80, 108, 109, 168, 180, 183, 204, 252, 255, 263, 275, 283, 290, 404, 420, 421, 434, 452, 503, 669, 726], "span": [75, 91, 92, 104, 119, 138, 140, 143, 152, 154, 159, 416, 432, 531, 726], "spars": [79, 108, 251, 420, 714], "special": [34, 92, 274], "specif": [79, 108, 128, 130, 255, 386, 395, 420, 700, 724, 726], "specifi": [222, 232, 255, 256, 283, 342, 347, 352, 353, 364, 505, 640, 650, 652, 658, 663, 669, 673, 675, 700, 724, 726], "speed": [255, 658, 683], "sphere": [723, 726], "sphinx": 0, "spl": [126, 132, 156, 196], "spline": [0, 3, 10, 11, 15, 16, 18, 19, 20, 21, 22, 23, 25, 28, 29, 30, 31, 33, 34, 39, 40, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 60, 62, 68, 71, 73, 74, 76, 78, 79, 80, 83, 86, 87, 88, 90, 92, 97, 100, 102, 103, 105, 107, 108, 109, 111, 114, 115, 116, 118, 121, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 183, 184, 185, 186, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 204, 217, 218, 230, 240, 241, 243, 244, 245, 255, 256, 258, 259, 262, 268, 269, 270, 271, 272, 273, 274, 276, 277, 280, 281, 283, 287, 288, 289, 299, 305, 307, 310, 312, 315, 317, 320, 325, 330, 335, 342, 347, 352, 353, 355, 358, 364, 369, 373, 374, 375, 377, 379, 386, 387, 388, 390, 393, 394, 395, 399, 400, 404, 409, 412, 414, 415, 417, 419, 420, 421, 424, 427, 428, 429, 431, 434, 439, 440, 444, 445, 447, 448, 449, 450, 451, 452, 454, 457, 458, 459, 460, 462, 592, 593, 595, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 617, 618, 619, 620, 690, 700, 714, 723], "spline_cent": 402, "spline_copi": [79, 108, 420], "spline_data": [13, 42, 69, 98, 136, 148, 410, 442, 483, 723, 726], "spline_dic_list": 256, "spline_dictionari": 262, "spline_fac": [132, 156, 494, 497], "spline_id": 395, "spline_list": [244, 255, 271, 272, 276, 352], "spline_lit": 262, "spline_show": [30, 57, 88, 116, 399, 429, 459, 514], "splinedata": [515, 623, 723], "splinedataadaptor": 723, "splinegroup": 271, "splinelib": 204, "splinepi": [0, 723, 724, 726], "splinepy_cor": [14, 43, 70, 99, 380, 381, 383, 389, 396, 401, 411, 443, 486, 723], "splinepy_obj": [247, 248], "splinepybas": [183, 204, 286, 366, 374, 469, 473, 700], "splinepyenv": 0, "splineset": [385, 392], "splineshowopt": [398, 513, 723], "splinpi": 122, "split": [168, 723], "split_plan": 180, "splitting_plan": 168, "springer": 726, "squar": 275, "squeez": 723, "stabl": [283, 675], "stackoverflow": 711, "stai": [31, 58, 460], "stand": 700, "standard": [658, 677], "start": [138, 377, 726], "start_angl": 138, "state": [187, 726], "statement": [133, 142], "statu": [33, 60, 90, 118, 431, 462, 517], "std": 723, "stdin": 674, "still": [663, 675, 726], "stir": [223, 233], "storag": 683, "store": [13, 42, 69, 98, 205, 210, 250, 274, 325, 335, 374, 376, 384, 391, 393, 410, 442, 483, 500, 518, 627, 669, 694], "stori": 726, "str": [19, 48, 74, 103, 157, 170, 186, 241, 244, 245, 247, 248, 251, 252, 253, 256, 258, 259, 261, 264, 265, 266, 268, 269, 271, 272, 275, 277, 278, 279, 280, 281, 299, 300, 310, 315, 320, 336, 337, 347, 358, 364, 415, 448, 470, 471, 472, 493, 505, 520, 596, 603, 616, 624, 625, 627, 630, 640, 652, 657, 663, 675, 683, 685, 691, 692, 694, 697, 717, 718, 719, 720, 721, 722, 726], "streamhandl": 717, "stride": 674, "string": [252, 253, 255, 263, 264, 276, 283, 287, 364, 465, 641, 652, 653, 663, 674, 675, 683], "strip": [266, 269], "strip_com": 269, "structur": [287, 622, 675, 724, 726], "strut": 342, "style": 655, "stype": 0, "sub": [180, 640], "sub_multipatch": 723, "sub_patch_cent": 723, "subclass": [183, 712], "submodul": [0, 724], "subok": 640, "subpatch": 724, "subsect": 168, "subsequ": 726, "subset": 473, "success": 726, "suffici": 726, "suggest": [0, 726], "suitabl": [658, 687], "sum": [204, 649, 686, 723], "sum_": [3, 62, 404, 434, 726], "sum_a": 204, "sum_b": 204, "super": [3, 34, 62, 92, 404, 434], "support": [3, 4, 5, 6, 7, 34, 35, 36, 37, 38, 62, 63, 64, 65, 66, 93, 94, 95, 96, 121, 122, 136, 146, 148, 158, 171, 183, 206, 207, 208, 247, 248, 273, 277, 292, 404, 405, 406, 407, 408, 434, 435, 436, 437, 438, 470, 472, 473, 474, 475, 476, 477, 683, 700, 714, 723, 724, 726], "sure": [0, 669], "surfac": [3, 62, 141, 143, 153, 167, 179, 287, 296, 352, 404, 434, 723, 724, 726], "surface_circl": 723, "surround": 355, "svg": [723, 724], "svg2": 283, "swap": 641, "swapax": 723, "switch": [166, 178], "symbol": 266, "sync": 723, "sync_row": 723, "system": [193, 374, 379, 385, 391, 392, 393, 726], "systemat": 724, "systemerror": 669, "t": [11, 12, 25, 40, 41, 53, 83, 111, 127, 129, 167, 179, 325, 335, 424, 440, 441, 454, 496, 508, 625, 640, 669, 687, 692], "tab": [263, 269], "tab_expand": 263, "tag": 255, "take": [134, 136, 144, 148, 264, 378, 657, 700, 723, 724, 726], "tangl": [133, 142], "task": 215, "tataratat": 724, "technic": 726, "templat": 0, "tend": 726, "tensor": [3, 62, 726], "term": [3, 62, 726], "terminologi": 726, "test": [322, 332, 364], "text": [255, 263, 683, 726], "text_anchor": 283, "text_color": 283, "textiowrapp": 266, "th": [92, 663, 687, 726], "than": [135, 145, 167, 179, 205, 210, 657, 663, 726], "thei": [0, 21, 50, 76, 92, 105, 241, 299, 310, 315, 320, 342, 347, 352, 353, 364, 377, 378, 417, 450, 495, 663, 675, 712, 724, 726], "them": [218, 269, 663, 724, 726], "theori": 473, "therefor": [133, 142], "theta_u": 92, "thi": [3, 11, 12, 25, 40, 41, 53, 62, 83, 92, 111, 127, 129, 135, 145, 157, 170, 183, 186, 187, 217, 218, 223, 233, 252, 266, 274, 299, 310, 315, 320, 347, 352, 353, 369, 377, 404, 424, 434, 440, 441, 454, 465, 508, 638, 639, 640, 641, 644, 654, 658, 663, 668, 669, 674, 675, 682, 683, 684, 687, 700, 712, 713, 714, 717, 724, 726], "thick": [143, 299, 310, 315, 320, 330, 342, 347, 353, 358, 361, 364], "thicker": 364, "thin": [361, 716], "things_to_show": 241, "thinner": 364, "third": [252, 283, 724], "thoma": 726, "those": 726, "thread": [205, 209, 210, 211, 212, 213, 377, 379, 390, 466], "three": [3, 62, 404, 434, 674, 726], "through": [191, 194, 240, 361, 364, 640, 724, 726], "throughout": [723, 726], "thu": [711, 726], "ti": [663, 675], "tick": 283, "tight_search_bound": [25, 53, 83, 111, 424, 454, 508, 579], "tild": [3, 62, 204, 261, 404, 434], "tile": [286, 290, 291, 723, 724], "tile_bas": 723, "tilebas": [296, 302, 307, 312, 317, 322, 327, 332, 337, 339, 344, 349, 355, 361, 723], "tiller": 726, "time": [0, 5, 7, 34, 36, 38, 64, 66, 92, 94, 96, 266, 406, 408, 436, 438, 475, 477, 726], "timsort": 675, "titl": [186, 726], "title_font": 726, "title_rot": 726, "title_s": 726, "title_xoffset": 726, "title_yoffset": 726, "to_deriv": 723, "to_devic": 723, "to_edg": 724, "to_list": 723, "to_mfem": 274, "tobyt": [683, 685, 723], "todict": 723, "todo": 400, "tofil": 723, "togeth": 724, "toggl": 641, "toler": [21, 25, 27, 50, 53, 54, 76, 83, 84, 85, 105, 111, 112, 113, 183, 276, 283, 377, 384, 390, 417, 424, 425, 426, 450, 454, 456, 495, 508, 509, 550, 579, 580, 593, 594, 608, 611, 613, 617, 723, 724], "tolist": [33, 60, 90, 118, 431, 462, 517, 723], "too": [283, 726], "tool": [294, 723], "top": 726, "toru": [723, 724], "torus_angl": 154, "torus_n_knot_span": 154, "torus_radiu": [154, 724], "tostr": 723, "total": [0, 287], "tr": 283, "trace": 723, "traceback": [669, 674, 684], "transform": [712, 726], "transit": 724, "transpar": 726, "transport": 683, "transpos": 723, "treatment": 251, "tree": [25, 53, 83, 111, 424, 454, 508], "tri": [27, 54, 84, 85, 112, 113, 222, 232, 247, 248, 265, 266, 269, 317, 425, 426, 456, 509], "trilinear": [312, 355], "true": [11, 13, 19, 30, 40, 42, 48, 57, 69, 74, 77, 85, 88, 98, 103, 106, 113, 116, 127, 128, 129, 130, 136, 137, 138, 141, 143, 148, 151, 152, 154, 158, 166, 167, 171, 178, 179, 186, 187, 191, 192, 193, 194, 217, 218, 241, 244, 255, 256, 263, 269, 271, 283, 297, 298, 303, 304, 308, 309, 313, 314, 318, 319, 323, 324, 328, 329, 333, 334, 340, 341, 345, 346, 350, 351, 356, 357, 362, 363, 367, 368, 375, 399, 410, 415, 418, 426, 429, 440, 442, 448, 459, 464, 483, 493, 496, 498, 514, 634, 635, 640, 641, 659, 660, 661, 664, 669, 674, 677, 678, 682, 688, 711, 714, 721, 724, 726], "truss": 361, "try": [122, 726], "tube": 154, "tupl": [168, 180, 222, 232, 252, 253, 564, 566, 579, 593, 608, 624, 625, 658, 669, 687, 691, 692, 702, 711, 712, 726], "turn": [243, 265, 712, 726], "two": [3, 21, 50, 62, 76, 105, 204, 276, 299, 310, 315, 320, 327, 377, 384, 390, 404, 417, 434, 450, 495, 663, 726], "txt": 0, "type": [0, 3, 4, 6, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 188, 190, 192, 193, 197, 198, 199, 200, 201, 202, 205, 209, 210, 211, 212, 213, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 247, 248, 252, 254, 255, 256, 258, 259, 261, 262, 263, 264, 266, 268, 269, 271, 272, 275, 276, 277, 278, 280, 281, 283, 287, 288, 290, 291, 292, 293, 297, 298, 300, 303, 304, 305, 308, 309, 313, 314, 318, 319, 323, 324, 328, 329, 330, 333, 334, 336, 337, 340, 341, 342, 345, 346, 350, 351, 356, 357, 358, 359, 362, 363, 367, 368, 369, 375, 376, 377, 378, 379, 382, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 404, 405, 407, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 437, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 456, 457, 458, 459, 460, 461, 462, 465, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 620, 625, 627, 628, 629, 630, 631, 632, 640, 641, 655, 657, 658, 669, 673, 674, 682, 683, 684, 687, 692, 694, 695, 696, 697, 698, 699, 702, 711, 712, 713, 714, 717, 718, 719, 720, 721, 722, 723, 724], "typecod": 640, "typeerror": 684, "tz": [325, 335], "u": [0, 3, 11, 12, 34, 40, 41, 62, 92, 133, 142, 204, 404, 434, 440, 441, 724, 726], "u2": 682, "u_": [92, 726], "u_1": 92, "u_2": 92, "u_i": [92, 204], "u_j": 204, "u_k": [190, 204], "u_l": 92, "u_n": 204, "uic": 674, "uint32": 684, "uint8": 641, "ultim": 674, "unabl": 404, "undefin": 663, "under": [675, 724], "underbrac": 726, "underli": [136, 148, 204], "underscor": 0, "uniform": [255, 404, 715], "uniform_queri": [723, 726], "uniform_refin": [723, 724], "uniformli": [28, 55, 86, 91, 114, 119, 394, 427, 432, 457, 511], "union": 723, "uniqu": [518, 532, 723, 726], "unique_knot": 723, "unit": [183, 283, 290, 291, 322, 332, 726], "uniti": 726, "univari": 726, "unknown": 252, "unknown_id": 252, "unless": [640, 658, 669, 726], "unlik": 668, "unpack": 654, "unpickl": 674, "unravel": 504, "unsaf": 640, "unspecifi": [663, 675], "until": [377, 726], "unus": 364, "up": [0, 204, 255, 473, 658, 663, 675], "updat": [0, 674, 723, 724, 726], "upper": [364, 674], "upper_1": 715, "upper_2": 715, "us": [0, 11, 21, 23, 34, 40, 50, 52, 76, 79, 80, 92, 105, 108, 109, 126, 137, 138, 141, 151, 156, 167, 168, 179, 183, 188, 191, 192, 193, 194, 204, 209, 211, 212, 213, 215, 217, 218, 251, 252, 253, 255, 271, 277, 283, 290, 291, 299, 305, 310, 315, 320, 322, 330, 332, 342, 347, 352, 353, 355, 358, 364, 375, 377, 378, 379, 386, 390, 402, 404, 417, 420, 421, 440, 450, 452, 465, 473, 485, 495, 503, 504, 505, 622, 631, 640, 642, 658, 663, 669, 674, 675, 683, 698, 700, 711, 714, 721, 723, 724, 726], "usag": [3, 34, 62, 79, 92, 108, 404, 420, 434, 473], "use_alpha": 726, "use_sav": 292, "user": [198, 201, 674], "usual": 726, "util": [260, 723, 724, 726], "v": [0, 3, 62, 287, 332, 404, 434, 672], "val": 673, "valid": [128, 130, 161, 162, 167, 169, 173, 174, 177, 179, 181, 222, 227, 228, 232, 237, 238], "valid_kei": 723, "valid_queri": [126, 478, 723], "valu": [4, 5, 11, 21, 25, 33, 35, 36, 40, 50, 53, 60, 63, 64, 76, 83, 90, 92, 93, 94, 105, 111, 118, 168, 180, 190, 191, 192, 193, 194, 196, 198, 201, 204, 205, 209, 210, 223, 226, 233, 236, 251, 252, 253, 283, 299, 310, 315, 320, 325, 335, 347, 352, 353, 359, 376, 377, 378, 395, 405, 406, 417, 424, 431, 435, 436, 440, 450, 454, 462, 474, 475, 478, 495, 508, 517, 526, 527, 528, 529, 587, 588, 589, 590, 625, 627, 628, 630, 636, 637, 640, 641, 643, 654, 657, 659, 661, 663, 665, 673, 674, 692, 694, 695, 697, 700, 713, 714, 723, 726], "valueerror": [247, 248, 669, 674], "var": 723, "vari": [663, 675], "variabl": [12, 41, 252, 287, 290, 291, 299, 310, 315, 320, 325, 335, 342, 347, 352, 353, 364, 441, 463, 658], "varianc": 688, "variat": [3, 62, 92], "variou": [241, 724], "vdim": 275, "ve": 0, "vector": [34, 81, 92, 110, 127, 129, 132, 135, 140, 145, 191, 192, 194, 198, 201, 204, 210, 252, 253, 255, 377, 422, 496, 501, 502, 533, 534, 700, 723, 726], "vedo": [29, 56, 87, 115, 186, 241, 283, 292, 428, 458, 512, 726], "verbose_output": [191, 194], "veri": [658, 726], "version": [82, 122, 650, 663, 685], "vertex_data": [702, 726], "vertex_id": 726, "vertic": [164, 165, 167, 176, 179, 183, 184, 186, 241, 274, 275, 330, 715, 724, 726], "via": [92, 134, 135, 137, 144, 145, 151, 160, 161, 162, 163, 164, 165, 166, 167, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 197, 199, 200, 202, 684, 726], "view": [136, 148, 641, 650, 657, 669, 679, 687, 723], "visual": [29, 30, 56, 57, 87, 88, 115, 116, 186, 399, 428, 429, 458, 459, 512, 514, 723, 724], "vizus": [724, 726], "vmax": [283, 726], "vmin": [283, 726], "void": [322, 325, 332, 335, 658], "volum": [3, 62, 141, 163, 167, 175, 177, 179, 196, 404, 434, 497, 723, 726], "volumetr": [141, 150, 152, 154], "vtk": [19, 48, 74, 103, 415, 448, 493], "w": [3, 62, 404, 434, 674, 723, 726], "w3": 283, "wai": [0, 473, 627, 663, 669, 694, 726], "wall": [299, 330, 347, 352, 353, 364], "want": [504, 700, 724, 726], "warn": [127, 129, 721, 723], "watertight": [167, 169, 179, 181], "wayn": 726, "we": [0, 3, 25, 34, 53, 62, 83, 92, 111, 183, 204, 404, 424, 434, 454, 473, 508, 657, 711, 723, 724, 726], "weight": [82, 133, 142, 244, 255, 275, 404, 434, 471, 473, 504, 521, 723, 724, 726], "weightpoint": 723, "welcom": [0, 724], "well": [183, 204, 322, 332, 473, 674, 726], "were": [378, 726], "what": [121, 123, 520, 640, 724, 726], "whatami": [279, 723], "wheel": 724, "when": [12, 41, 441, 640, 658, 663, 674, 675, 683, 726], "where": [11, 34, 40, 77, 106, 191, 193, 194, 209, 252, 296, 299, 305, 310, 315, 320, 347, 352, 353, 418, 440, 634, 635, 654, 659, 660, 661, 664, 672, 677, 678, 688, 711, 713, 723, 724, 726], "whether": [141, 674], "which": [11, 12, 40, 41, 79, 108, 133, 134, 142, 144, 160, 172, 198, 201, 204, 250, 252, 358, 390, 391, 420, 440, 441, 640, 658, 663, 673, 674, 675, 700, 723, 724], "while": [266, 726], "white": [255, 283], "whole": 183, "whose": 643, "width": [150, 283, 726], "window": [186, 241, 724], "wise": [252, 646], "within": [159, 197, 198, 200, 201, 290, 376, 386, 640, 715, 724, 726], "without": [166, 178, 217, 674, 687], "won": [167, 179], "word": 726, "work": [133, 142, 658, 724, 726], "would": [0, 25, 53, 83, 111, 391, 424, 454, 508, 638, 639, 658, 663], "wrapper": [0, 471, 716], "write": [204, 255, 674, 683, 724, 726], "writeabl": [674, 689], "writebackifcopi": 674, "written": [204, 247, 271, 674, 683], "www": 283, "x": [138, 140, 147, 150, 152, 154, 193, 194, 204, 287, 322, 325, 332, 335, 384, 391, 640, 657, 658, 673, 674, 675, 682, 711, 724, 726], "x00": 682, "x01": 682, "x02": 682, "x03": 682, "x_": [160, 172], "x_i": [204, 211, 212], "x_j": [160, 172, 204, 212], "x_max": [299, 310, 347], "x_min": [299, 310, 347, 364], "xi": [218, 714], "xml": [243, 244, 245, 250, 254, 255, 256, 283, 724], "y": [138, 140, 150, 287, 322, 325, 332, 335, 655, 674, 675, 684, 711, 726], "yield": [154, 726], "you": [0, 25, 53, 83, 111, 166, 178, 203, 214, 215, 424, 454, 465, 504, 505, 508, 669, 700, 717, 724, 726], "your": [0, 465, 724, 726], "yuri": 726, "z": [138, 150, 287, 322, 325, 332, 335, 352, 658], "z_max": [315, 320, 358], "z_min": [315, 320, 358], "zero": [134, 137, 144, 151, 159, 255, 305, 662, 669, 726], "zoom": 724}, "titles": ["Contributing", "splinepy", "splinepy.bezier", "splinepy.bezier.Bezier", "splinepy.bezier.Bezier.basis", "splinepy.bezier.Bezier.basis_and_support", "splinepy.bezier.Bezier.basis_derivative", "splinepy.bezier.Bezier.basis_derivative_and_support", "splinepy.bezier.Bezier.bezier", "splinepy.bezier.Bezier.bspline", "splinepy.bezier.Bezier.clear", "splinepy.bezier.Bezier.compose", "splinepy.bezier.Bezier.composition_derivative", "splinepy.bezier.Bezier.copy", "splinepy.bezier.Bezier.current_core_properties", "splinepy.bezier.Bezier.derivative", "splinepy.bezier.Bezier.derivative_spline", "splinepy.bezier.Bezier.elevate_degrees", "splinepy.bezier.Bezier.evaluate", "splinepy.bezier.Bezier.export", "splinepy.bezier.Bezier.extract_dim", "splinepy.bezier.Bezier.greville_abscissae", "splinepy.bezier.Bezier.jacobian", "splinepy.bezier.Bezier.mapper", "splinepy.bezier.Bezier.nurbs", "splinepy.bezier.Bezier.proximities", "splinepy.bezier.Bezier.rationalbezier", "splinepy.bezier.Bezier.reduce_degrees", "splinepy.bezier.Bezier.sample", "splinepy.bezier.Bezier.show", "splinepy.bezier.Bezier.showable", "splinepy.bezier.Bezier.split", "splinepy.bezier.Bezier.support", "splinepy.bezier.Bezier.todict", "splinepy.bezier.BezierBase", "splinepy.bezier.BezierBase.basis", "splinepy.bezier.BezierBase.basis_and_support", "splinepy.bezier.BezierBase.basis_derivative", "splinepy.bezier.BezierBase.basis_derivative_and_support", "splinepy.bezier.BezierBase.clear", "splinepy.bezier.BezierBase.compose", "splinepy.bezier.BezierBase.composition_derivative", "splinepy.bezier.BezierBase.copy", "splinepy.bezier.BezierBase.current_core_properties", "splinepy.bezier.BezierBase.derivative", "splinepy.bezier.BezierBase.derivative_spline", "splinepy.bezier.BezierBase.elevate_degrees", "splinepy.bezier.BezierBase.evaluate", "splinepy.bezier.BezierBase.export", "splinepy.bezier.BezierBase.extract_dim", "splinepy.bezier.BezierBase.greville_abscissae", "splinepy.bezier.BezierBase.jacobian", "splinepy.bezier.BezierBase.mapper", "splinepy.bezier.BezierBase.proximities", "splinepy.bezier.BezierBase.reduce_degrees", "splinepy.bezier.BezierBase.sample", "splinepy.bezier.BezierBase.show", "splinepy.bezier.BezierBase.showable", "splinepy.bezier.BezierBase.split", "splinepy.bezier.BezierBase.support", "splinepy.bezier.BezierBase.todict", "splinepy.bspline", "splinepy.bspline.BSpline", "splinepy.bspline.BSpline.basis", "splinepy.bspline.BSpline.basis_and_support", "splinepy.bspline.BSpline.basis_derivative", "splinepy.bspline.BSpline.basis_derivative_and_support", "splinepy.bspline.BSpline.bspline", "splinepy.bspline.BSpline.clear", "splinepy.bspline.BSpline.copy", "splinepy.bspline.BSpline.current_core_properties", "splinepy.bspline.BSpline.derivative", "splinepy.bspline.BSpline.elevate_degrees", "splinepy.bspline.BSpline.evaluate", "splinepy.bspline.BSpline.export", "splinepy.bspline.BSpline.extract_bezier_patches", "splinepy.bspline.BSpline.greville_abscissae", "splinepy.bspline.BSpline.insert_knots", "splinepy.bspline.BSpline.jacobian", "splinepy.bspline.BSpline.knot_insertion_matrix", "splinepy.bspline.BSpline.mapper", "splinepy.bspline.BSpline.normalize_knot_vectors", "splinepy.bspline.BSpline.nurbs", "splinepy.bspline.BSpline.proximities", "splinepy.bspline.BSpline.reduce_degrees", "splinepy.bspline.BSpline.remove_knots", "splinepy.bspline.BSpline.sample", "splinepy.bspline.BSpline.show", "splinepy.bspline.BSpline.showable", "splinepy.bspline.BSpline.support", "splinepy.bspline.BSpline.todict", "splinepy.bspline.BSpline.uniform_refine", "splinepy.bspline.BSplineBase", "splinepy.bspline.BSplineBase.basis", "splinepy.bspline.BSplineBase.basis_and_support", "splinepy.bspline.BSplineBase.basis_derivative", "splinepy.bspline.BSplineBase.basis_derivative_and_support", "splinepy.bspline.BSplineBase.clear", "splinepy.bspline.BSplineBase.copy", "splinepy.bspline.BSplineBase.current_core_properties", "splinepy.bspline.BSplineBase.derivative", "splinepy.bspline.BSplineBase.elevate_degrees", "splinepy.bspline.BSplineBase.evaluate", "splinepy.bspline.BSplineBase.export", "splinepy.bspline.BSplineBase.extract_bezier_patches", "splinepy.bspline.BSplineBase.greville_abscissae", "splinepy.bspline.BSplineBase.insert_knots", "splinepy.bspline.BSplineBase.jacobian", "splinepy.bspline.BSplineBase.knot_insertion_matrix", "splinepy.bspline.BSplineBase.mapper", "splinepy.bspline.BSplineBase.normalize_knot_vectors", "splinepy.bspline.BSplineBase.proximities", "splinepy.bspline.BSplineBase.reduce_degrees", "splinepy.bspline.BSplineBase.remove_knots", "splinepy.bspline.BSplineBase.sample", "splinepy.bspline.BSplineBase.show", "splinepy.bspline.BSplineBase.showable", "splinepy.bspline.BSplineBase.support", "splinepy.bspline.BSplineBase.todict", "splinepy.bspline.BSplineBase.uniform_refine", "splinepy.cli", "splinepy.cli.convert", "splinepy.cli.entry", "splinepy.cli.show", "splinepy.helpme", "splinepy.helpme.check", "splinepy.helpme.check.Checker", "splinepy.helpme.check.Checker.clamped_knot_vectors", "splinepy.helpme.check.Checker.valid_queries", "splinepy.helpme.check.clamped_knot_vectors", "splinepy.helpme.check.valid_queries", "splinepy.helpme.create", "splinepy.helpme.create.Creator", "splinepy.helpme.create.Creator.determinant_spline", "splinepy.helpme.create.Creator.embedded", "splinepy.helpme.create.Creator.extruded", "splinepy.helpme.create.Creator.parametric_view", "splinepy.helpme.create.Creator.revolved", "splinepy.helpme.create.arc", "splinepy.helpme.create.box", "splinepy.helpme.create.circle", "splinepy.helpme.create.cone", "splinepy.helpme.create.determinant_spline", "splinepy.helpme.create.disk", "splinepy.helpme.create.embedded", "splinepy.helpme.create.extruded", "splinepy.helpme.create.from_bounds", "splinepy.helpme.create.line", "splinepy.helpme.create.parametric_view", "splinepy.helpme.create.plate", "splinepy.helpme.create.pyramid", "splinepy.helpme.create.revolved", "splinepy.helpme.create.sphere", "splinepy.helpme.create.surface_circle", "splinepy.helpme.create.torus", "splinepy.helpme.extract", "splinepy.helpme.extract.Extractor", "splinepy.helpme.extract.Extractor.arrow_data", "splinepy.helpme.extract.Extractor.bases", "splinepy.helpme.extract.Extractor.beziers", "splinepy.helpme.extract.Extractor.boundaries", "splinepy.helpme.extract.Extractor.control_edges", "splinepy.helpme.extract.Extractor.control_faces", "splinepy.helpme.extract.Extractor.control_mesh", "splinepy.helpme.extract.Extractor.control_points", "splinepy.helpme.extract.Extractor.control_volumes", "splinepy.helpme.extract.Extractor.edges", "splinepy.helpme.extract.Extractor.faces", "splinepy.helpme.extract.Extractor.spline", "splinepy.helpme.extract.Extractor.volumes", "splinepy.helpme.extract.arrow_data", "splinepy.helpme.extract.bases", "splinepy.helpme.extract.boundaries", "splinepy.helpme.extract.control_edges", "splinepy.helpme.extract.control_faces", "splinepy.helpme.extract.control_mesh", "splinepy.helpme.extract.control_points", "splinepy.helpme.extract.control_volumes", "splinepy.helpme.extract.edges", "splinepy.helpme.extract.faces", "splinepy.helpme.extract.spline", "splinepy.helpme.extract.volumes", "splinepy.helpme.ffd", "splinepy.helpme.ffd.FFD", "splinepy.helpme.ffd.FFD.mesh", "splinepy.helpme.ffd.FFD.padding", "splinepy.helpme.ffd.FFD.show", "splinepy.helpme.ffd.FFD.showable", "splinepy.helpme.ffd.FFD.spline", "splinepy.helpme.fit", "splinepy.helpme.fit.compute_knot_vector", "splinepy.helpme.fit.curve", "splinepy.helpme.fit.parameterize", "splinepy.helpme.fit.solve_for_control_points", "splinepy.helpme.fit.surface", "splinepy.helpme.integrate", "splinepy.helpme.integrate.Integrator", "splinepy.helpme.integrate.Integrator.parametric_function", "splinepy.helpme.integrate.Integrator.physical_function", "splinepy.helpme.integrate.Integrator.volume", "splinepy.helpme.integrate.parametric_function", "splinepy.helpme.integrate.physical_function", "splinepy.helpme.integrate.volume", "splinepy.helpme.mapper", "splinepy.helpme.mapper.Mapper", "splinepy.helpme.mapper.Mapper.basis_function_derivatives", "splinepy.helpme.mapper.Mapper.basis_gradient_and_support", "splinepy.helpme.mapper.Mapper.basis_hessian_and_support", "splinepy.helpme.mapper.Mapper.basis_laplacian_and_support", "splinepy.helpme.mapper.Mapper.divergence", "splinepy.helpme.mapper.Mapper.field_derivatives", "splinepy.helpme.mapper.Mapper.gradient", "splinepy.helpme.mapper.Mapper.hessian", "splinepy.helpme.mapper.Mapper.laplacian", "splinepy.helpme.multi_index", "splinepy.helpme.multi_index.MultiIndex", "splinepy.helpme.reparametrize", "splinepy.helpme.reparametrize.flip_axes", "splinepy.helpme.reparametrize.permute_parametric_axes", "splinepy.helpme.visualize", "splinepy.helpme.visualize.MultipatchShowOption", "splinepy.helpme.visualize.MultipatchShowOption.clear", "splinepy.helpme.visualize.MultipatchShowOption.copy_valid_options", "splinepy.helpme.visualize.MultipatchShowOption.get", "splinepy.helpme.visualize.MultipatchShowOption.items", "splinepy.helpme.visualize.MultipatchShowOption.keys", "splinepy.helpme.visualize.MultipatchShowOption.pop", "splinepy.helpme.visualize.MultipatchShowOption.update", "splinepy.helpme.visualize.MultipatchShowOption.valid_keys", "splinepy.helpme.visualize.MultipatchShowOption.values", "splinepy.helpme.visualize.SplineShowOption", "splinepy.helpme.visualize.SplineShowOption.clear", "splinepy.helpme.visualize.SplineShowOption.copy_valid_options", "splinepy.helpme.visualize.SplineShowOption.get", "splinepy.helpme.visualize.SplineShowOption.items", "splinepy.helpme.visualize.SplineShowOption.keys", "splinepy.helpme.visualize.SplineShowOption.pop", "splinepy.helpme.visualize.SplineShowOption.update", "splinepy.helpme.visualize.SplineShowOption.valid_keys", "splinepy.helpme.visualize.SplineShowOption.values", "splinepy.helpme.visualize.make_showable", "splinepy.helpme.visualize.show", "splinepy.io", "splinepy.io.cats", "splinepy.io.cats.export", "splinepy.io.cats.load", "splinepy.io.default", "splinepy.io.default.export", "splinepy.io.default.load", "splinepy.io.gismo", "splinepy.io.gismo.AdditionalBlocks", "splinepy.io.gismo.AdditionalBlocks.add_assembly_options", "splinepy.io.gismo.AdditionalBlocks.add_boundary_conditions", "splinepy.io.gismo.AdditionalBlocks.add_function", "splinepy.io.gismo.AdditionalBlocks.to_list", "splinepy.io.gismo.export", "splinepy.io.gismo.load", "splinepy.io.iges", "splinepy.io.iges.export", "splinepy.io.iges.load", "splinepy.io.ioutils", "splinepy.io.ioutils.abs_fname", "splinepy.io.ioutils.dict_to_spline", "splinepy.io.ioutils.expand_tabs", "splinepy.io.ioutils.form_lines", "splinepy.io.ioutils.make_meaningful", "splinepy.io.ioutils.next_line", "splinepy.io.irit", "splinepy.io.irit.export", "splinepy.io.irit.load", "splinepy.io.json", "splinepy.io.json.export", "splinepy.io.json.load", "splinepy.io.mfem", "splinepy.io.mfem.dof_mapping", "splinepy.io.mfem.export", "splinepy.io.mfem.export_cartesian", "splinepy.io.mfem.load", "splinepy.io.mfem.read_solution", "splinepy.io.npz", "splinepy.io.npz.export", "splinepy.io.npz.load", "splinepy.io.svg", "splinepy.io.svg.export", "splinepy.microstructure", "splinepy.microstructure.microstructure", "splinepy.microstructure.microstructure.Microstructure", "splinepy.microstructure.microstructure.Microstructure.create", "splinepy.microstructure.microstructure.Microstructure.deformation_function", "splinepy.microstructure.microstructure.Microstructure.microtile", "splinepy.microstructure.microstructure.Microstructure.parameter_sensitivity_function", "splinepy.microstructure.microstructure.Microstructure.parametrization_function", "splinepy.microstructure.microstructure.Microstructure.show", "splinepy.microstructure.microstructure.Microstructure.tiling", "splinepy.microstructure.tiles", "splinepy.microstructure.tiles.armadillo", "splinepy.microstructure.tiles.armadillo.Armadillo", "splinepy.microstructure.tiles.armadillo.Armadillo.check_param_derivatives", "splinepy.microstructure.tiles.armadillo.Armadillo.check_params", "splinepy.microstructure.tiles.armadillo.Armadillo.create_tile", "splinepy.microstructure.tiles.by_dim", "splinepy.microstructure.tiles.chi", "splinepy.microstructure.tiles.chi.Chi", "splinepy.microstructure.tiles.chi.Chi.check_param_derivatives", "splinepy.microstructure.tiles.chi.Chi.check_params", "splinepy.microstructure.tiles.chi.Chi.create_tile", "splinepy.microstructure.tiles.cross_2d", "splinepy.microstructure.tiles.cross_2d.Cross2D", "splinepy.microstructure.tiles.cross_2d.Cross2D.check_param_derivatives", "splinepy.microstructure.tiles.cross_2d.Cross2D.check_params", "splinepy.microstructure.tiles.cross_2d.Cross2D.create_tile", "splinepy.microstructure.tiles.cross_3d", "splinepy.microstructure.tiles.cross_3d.Cross3D", "splinepy.microstructure.tiles.cross_3d.Cross3D.check_param_derivatives", "splinepy.microstructure.tiles.cross_3d.Cross3D.check_params", "splinepy.microstructure.tiles.cross_3d.Cross3D.create_tile", "splinepy.microstructure.tiles.cross_3d_linear", "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear", "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_param_derivatives", "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_params", "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.create_tile", "splinepy.microstructure.tiles.cube_void", "splinepy.microstructure.tiles.cube_void.CubeVoid", "splinepy.microstructure.tiles.cube_void.CubeVoid.check_param_derivatives", "splinepy.microstructure.tiles.cube_void.CubeVoid.check_params", "splinepy.microstructure.tiles.cube_void.CubeVoid.create_tile", "splinepy.microstructure.tiles.double_lattice", "splinepy.microstructure.tiles.double_lattice.DoubleLattice", "splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_param_derivatives", "splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_params", "splinepy.microstructure.tiles.double_lattice.DoubleLattice.create_tile", "splinepy.microstructure.tiles.ellips_v_oid", "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid", "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_param_derivatives", "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_params", "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.create_tile", "splinepy.microstructure.tiles.everything", "splinepy.microstructure.tiles.get", "splinepy.microstructure.tiles.hollow_cube", "splinepy.microstructure.tiles.hollow_cube.HollowCube", "splinepy.microstructure.tiles.hollow_cube.HollowCube.check_param_derivatives", "splinepy.microstructure.tiles.hollow_cube.HollowCube.check_params", "splinepy.microstructure.tiles.hollow_cube.HollowCube.create_tile", "splinepy.microstructure.tiles.hollow_octagon", "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon", "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_param_derivatives", "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_params", "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.create_tile", "splinepy.microstructure.tiles.hollow_octagon_extrude", "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude", "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_param_derivatives", "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_params", "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.closing_tile", "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.create_tile", "splinepy.microstructure.tiles.inverse_cross_3d", "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D", "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_param_derivatives", "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_params", "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.create_tile", "splinepy.microstructure.tiles.show", "splinepy.microstructure.tiles.snappy", "splinepy.microstructure.tiles.snappy.Snappy", "splinepy.microstructure.tiles.snappy.Snappy.check_param_derivatives", "splinepy.microstructure.tiles.snappy.Snappy.check_params", "splinepy.microstructure.tiles.snappy.Snappy.create_tile", "splinepy.microstructure.tiles.tile_base", "splinepy.microstructure.tiles.tile_base.TileBase", "splinepy.microstructure.tiles.tile_base.TileBase.check_param_derivatives", "splinepy.microstructure.tiles.tile_base.TileBase.check_params", "splinepy.microstructure.tiles.tile_base.TileBase.create_tile", "splinepy.microstructure.tiles.tile_base.TileBase.dim", "splinepy.microstructure.tiles.tile_base.TileBase.evaluation_points", "splinepy.microstructure.tiles.tile_base.TileBase.para_dim", "splinepy.multipatch", "splinepy.multipatch.Multipatch", "splinepy.multipatch.Multipatch.add_fields", "splinepy.multipatch.Multipatch.boundaries", "splinepy.multipatch.Multipatch.boundaries_from_continuity", "splinepy.multipatch.Multipatch.boundary_from_function", "splinepy.multipatch.Multipatch.boundary_multipatch", "splinepy.multipatch.Multipatch.boundary_patch_ids", "splinepy.multipatch.Multipatch.clear", "splinepy.multipatch.Multipatch.combine_boundaries", "splinepy.multipatch.Multipatch.control_point_offsets", "splinepy.multipatch.Multipatch.determine_interfaces", "splinepy.multipatch.Multipatch.dim", "splinepy.multipatch.Multipatch.evaluate", "splinepy.multipatch.Multipatch.extract", "splinepy.multipatch.Multipatch.fields", "splinepy.multipatch.Multipatch.get_interfaces", "splinepy.multipatch.Multipatch.interface_orientations", "splinepy.multipatch.Multipatch.interfaces", "splinepy.multipatch.Multipatch.para_dim", "splinepy.multipatch.Multipatch.patches", "splinepy.multipatch.Multipatch.sample", "splinepy.multipatch.Multipatch.set_boundary", "splinepy.multipatch.Multipatch.set_interfaces", "splinepy.multipatch.Multipatch.show", "splinepy.multipatch.Multipatch.show_options", "splinepy.multipatch.Multipatch.showable", "splinepy.multipatch.Multipatch.spline_data", "splinepy.multipatch.Multipatch.sub_multipatch", "splinepy.multipatch.Multipatch.sub_patch_centers", "splinepy.nurbs", "splinepy.nurbs.NURBS", "splinepy.nurbs.NURBS.basis", "splinepy.nurbs.NURBS.basis_and_support", "splinepy.nurbs.NURBS.basis_derivative", "splinepy.nurbs.NURBS.basis_derivative_and_support", "splinepy.nurbs.NURBS.clear", "splinepy.nurbs.NURBS.copy", "splinepy.nurbs.NURBS.current_core_properties", "splinepy.nurbs.NURBS.derivative", "splinepy.nurbs.NURBS.elevate_degrees", "splinepy.nurbs.NURBS.evaluate", "splinepy.nurbs.NURBS.export", "splinepy.nurbs.NURBS.extract_bezier_patches", "splinepy.nurbs.NURBS.greville_abscissae", "splinepy.nurbs.NURBS.insert_knots", "splinepy.nurbs.NURBS.jacobian", "splinepy.nurbs.NURBS.knot_insertion_matrix", "splinepy.nurbs.NURBS.mapper", "splinepy.nurbs.NURBS.normalize_knot_vectors", "splinepy.nurbs.NURBS.nurbs", "splinepy.nurbs.NURBS.proximities", "splinepy.nurbs.NURBS.reduce_degrees", "splinepy.nurbs.NURBS.remove_knots", "splinepy.nurbs.NURBS.sample", "splinepy.nurbs.NURBS.show", "splinepy.nurbs.NURBS.showable", "splinepy.nurbs.NURBS.support", "splinepy.nurbs.NURBS.todict", "splinepy.nurbs.NURBS.uniform_refine", "splinepy.rational_bezier", "splinepy.rational_bezier.RationalBezier", "splinepy.rational_bezier.RationalBezier.basis", "splinepy.rational_bezier.RationalBezier.basis_and_support", "splinepy.rational_bezier.RationalBezier.basis_derivative", "splinepy.rational_bezier.RationalBezier.basis_derivative_and_support", "splinepy.rational_bezier.RationalBezier.clear", "splinepy.rational_bezier.RationalBezier.compose", "splinepy.rational_bezier.RationalBezier.composition_derivative", "splinepy.rational_bezier.RationalBezier.copy", "splinepy.rational_bezier.RationalBezier.current_core_properties", "splinepy.rational_bezier.RationalBezier.derivative", "splinepy.rational_bezier.RationalBezier.derivative_spline", "splinepy.rational_bezier.RationalBezier.elevate_degrees", "splinepy.rational_bezier.RationalBezier.evaluate", "splinepy.rational_bezier.RationalBezier.export", "splinepy.rational_bezier.RationalBezier.extract_dim", "splinepy.rational_bezier.RationalBezier.greville_abscissae", "splinepy.rational_bezier.RationalBezier.jacobian", "splinepy.rational_bezier.RationalBezier.mapper", "splinepy.rational_bezier.RationalBezier.nurbs", "splinepy.rational_bezier.RationalBezier.proximities", "splinepy.rational_bezier.RationalBezier.rationalbezier", "splinepy.rational_bezier.RationalBezier.reduce_degrees", "splinepy.rational_bezier.RationalBezier.sample", "splinepy.rational_bezier.RationalBezier.show", "splinepy.rational_bezier.RationalBezier.showable", "splinepy.rational_bezier.RationalBezier.split", "splinepy.rational_bezier.RationalBezier.support", "splinepy.rational_bezier.RationalBezier.todict", "splinepy.settings", "splinepy.settings.CHECK_BOUNDS", "splinepy.settings.NAME_TO_TYPE", "splinepy.settings.NTHREADS", "splinepy.settings.TOLERANCE", "splinepy.spline", "splinepy.spline.RequiredProperties", "splinepy.spline.RequiredProperties.intersection", "splinepy.spline.RequiredProperties.of", "splinepy.spline.RequiredProperties.union", "splinepy.spline.Spline", "splinepy.spline.Spline.basis", "splinepy.spline.Spline.basis_and_support", "splinepy.spline.Spline.basis_derivative", "splinepy.spline.Spline.basis_derivative_and_support", "splinepy.spline.Spline.check", "splinepy.spline.Spline.clear", "splinepy.spline.Spline.control_mesh_resolutions", "splinepy.spline.Spline.control_point_bounds", "splinepy.spline.Spline.control_points", "splinepy.spline.Spline.copy", "splinepy.spline.Spline.cps", "splinepy.spline.Spline.create", "splinepy.spline.Spline.current_core_properties", "splinepy.spline.Spline.degrees", "splinepy.spline.Spline.derivative", "splinepy.spline.Spline.dim", "splinepy.spline.Spline.ds", "splinepy.spline.Spline.elevate_degrees", "splinepy.spline.Spline.evaluate", "splinepy.spline.Spline.export", "splinepy.spline.Spline.extract", "splinepy.spline.Spline.greville_abscissae", "splinepy.spline.Spline.has_knot_vectors", "splinepy.spline.Spline.integrate", "splinepy.spline.Spline.is_rational", "splinepy.spline.Spline.jacobian", "splinepy.spline.Spline.knot_multiplicities", "splinepy.spline.Spline.knot_vectors", "splinepy.spline.Spline.kvs", "splinepy.spline.Spline.mapper", "splinepy.spline.Spline.multi_index", "splinepy.spline.Spline.name", "splinepy.spline.Spline.para_dim", "splinepy.spline.Spline.parametric_bounds", "splinepy.spline.Spline.proximities", "splinepy.spline.Spline.reduce_degrees", "splinepy.spline.Spline.required_properties", "splinepy.spline.Spline.sample", "splinepy.spline.Spline.show", "splinepy.spline.Spline.show_options", "splinepy.spline.Spline.showable", "splinepy.spline.Spline.spline_data", "splinepy.spline.Spline.support", "splinepy.spline.Spline.todict", "splinepy.spline.Spline.unique_knots", "splinepy.spline.Spline.weights", "splinepy.spline.Spline.whatami", "splinepy.spline.Spline.ws", "splinepy.splinepy_core", "splinepy.splinepy_core.ControlPointPointers", "splinepy.splinepy_core.ControlPointPointers.dim", "splinepy.splinepy_core.ControlPointPointers.len", "splinepy.splinepy_core.ControlPointPointers.set_row", "splinepy.splinepy_core.ControlPointPointers.set_rows", "splinepy.splinepy_core.ControlPointPointers.sync", "splinepy.splinepy_core.ControlPointPointers.sync_rows", "splinepy.splinepy_core.KnotVector", "splinepy.splinepy_core.KnotVector.find_span", "splinepy.splinepy_core.KnotVector.multiplicities", "splinepy.splinepy_core.KnotVector.numpy", "splinepy.splinepy_core.KnotVector.scale", "splinepy.splinepy_core.KnotVector.unique", "splinepy.splinepy_core.ParameterSpace", "splinepy.splinepy_core.ParameterSpace.copy", "splinepy.splinepy_core.ParameterSpace.unique_knots", "splinepy.splinepy_core.PyMultipatch", "splinepy.splinepy_core.PyMultipatch.add_fields", "splinepy.splinepy_core.PyMultipatch.boundary_multipatch", "splinepy.splinepy_core.PyMultipatch.boundary_patch_ids", "splinepy.splinepy_core.PyMultipatch.clear", "splinepy.splinepy_core.PyMultipatch.control_point_offsets", "splinepy.splinepy_core.PyMultipatch.control_points", "splinepy.splinepy_core.PyMultipatch.dim", "splinepy.splinepy_core.PyMultipatch.evaluate", "splinepy.splinepy_core.PyMultipatch.fields", "splinepy.splinepy_core.PyMultipatch.get_interfaces", "splinepy.splinepy_core.PyMultipatch.interface_orientations", "splinepy.splinepy_core.PyMultipatch.n_default_threads", "splinepy.splinepy_core.PyMultipatch.name", "splinepy.splinepy_core.PyMultipatch.para_dim", "splinepy.splinepy_core.PyMultipatch.patches", "splinepy.splinepy_core.PyMultipatch.same_parametric_bounds", "splinepy.splinepy_core.PyMultipatch.sample", "splinepy.splinepy_core.PyMultipatch.set_interfaces", "splinepy.splinepy_core.PyMultipatch.sub_multipatch", "splinepy.splinepy_core.PyMultipatch.sub_patch_centers", "splinepy.splinepy_core.PyMultipatch.tolerance", "splinepy.splinepy_core.PyMultipatch.whatami", "splinepy.splinepy_core.PySpline", "splinepy.splinepy_core.PySpline.basis", "splinepy.splinepy_core.PySpline.basis_and_support", "splinepy.splinepy_core.PySpline.basis_derivative", "splinepy.splinepy_core.PySpline.basis_derivative_and_support", "splinepy.splinepy_core.PySpline.control_mesh_resolutions", "splinepy.splinepy_core.PySpline.current_core_properties", "splinepy.splinepy_core.PySpline.derivative", "splinepy.splinepy_core.PySpline.dim", "splinepy.splinepy_core.PySpline.elevate_degrees", "splinepy.splinepy_core.PySpline.evaluate", "splinepy.splinepy_core.PySpline.has_knot_vectors", "splinepy.splinepy_core.PySpline.is_rational", "splinepy.splinepy_core.PySpline.jacobian", "splinepy.splinepy_core.PySpline.name", "splinepy.splinepy_core.PySpline.para_dim", "splinepy.splinepy_core.PySpline.parametric_bounds", "splinepy.splinepy_core.PySpline.proximities", "splinepy.splinepy_core.PySpline.reduce_degrees", "splinepy.splinepy_core.PySpline.sample", "splinepy.splinepy_core.PySpline.support", "splinepy.splinepy_core.PySpline.whatami", "splinepy.splinepy_core.WeightPointers", "splinepy.splinepy_core.WeightPointers.dim", "splinepy.splinepy_core.WeightPointers.len", "splinepy.splinepy_core.WeightPointers.set_row", "splinepy.splinepy_core.WeightPointers.set_rows", "splinepy.splinepy_core.WeightPointers.sync", "splinepy.splinepy_core.WeightPointers.sync_rows", "splinepy.splinepy_core.add", "splinepy.splinepy_core.annul_core", "splinepy.splinepy_core.bezier_extraction_matrix", "splinepy.splinepy_core.boundaries_from_continuity", "splinepy.splinepy_core.boundary_centers", "splinepy.splinepy_core.build_type", "splinepy.splinepy_core.compose", "splinepy.splinepy_core.compose_sensitivities", "splinepy.splinepy_core.composition_derivative", "splinepy.splinepy_core.core_id", "splinepy.splinepy_core.core_ref_count", "splinepy.splinepy_core.derivative_spline", "splinepy.splinepy_core.export_iges", "splinepy.splinepy_core.extract_all_boundary_splines", "splinepy.splinepy_core.extract_bezier_patches", "splinepy.splinepy_core.extract_boundaries", "splinepy.splinepy_core.extract_dim", "splinepy.splinepy_core.global_knot_insertion_matrix", "splinepy.splinepy_core.has_core", "splinepy.splinepy_core.insert_knots", "splinepy.splinepy_core.interfaces_from_boundary_centers", "splinepy.splinepy_core.is_minimal", "splinepy.splinepy_core.knot_insertion_matrix", "splinepy.splinepy_core.multiply", "splinepy.splinepy_core.null_spline", "splinepy.splinepy_core.read_iges", "splinepy.splinepy_core.remove_knots", "splinepy.splinepy_core.same_spline_with_knot_vectors", "splinepy.splinepy_core.split", "splinepy.to_derived", "splinepy.utils", "splinepy.utils.data", "splinepy.utils.data.MultipatchData", "splinepy.utils.data.MultipatchData.as_arrow", "splinepy.utils.data.MultipatchData.as_scalar", "splinepy.utils.data.MultipatchData.clear", "splinepy.utils.data.MultipatchData.get", "splinepy.utils.data.MultipatchData.items", "splinepy.utils.data.MultipatchData.keys", "splinepy.utils.data.MultipatchData.pop", "splinepy.utils.data.MultipatchData.update", "splinepy.utils.data.MultipatchData.values", "splinepy.utils.data.PhysicalSpaceArray", "splinepy.utils.data.PhysicalSpaceArray.all", "splinepy.utils.data.PhysicalSpaceArray.any", "splinepy.utils.data.PhysicalSpaceArray.argmax", "splinepy.utils.data.PhysicalSpaceArray.argmin", "splinepy.utils.data.PhysicalSpaceArray.argpartition", "splinepy.utils.data.PhysicalSpaceArray.argsort", "splinepy.utils.data.PhysicalSpaceArray.astype", "splinepy.utils.data.PhysicalSpaceArray.byteswap", "splinepy.utils.data.PhysicalSpaceArray.choose", "splinepy.utils.data.PhysicalSpaceArray.clip", "splinepy.utils.data.PhysicalSpaceArray.compress", "splinepy.utils.data.PhysicalSpaceArray.conj", "splinepy.utils.data.PhysicalSpaceArray.conjugate", "splinepy.utils.data.PhysicalSpaceArray.copy", "splinepy.utils.data.PhysicalSpaceArray.cumprod", "splinepy.utils.data.PhysicalSpaceArray.cumsum", "splinepy.utils.data.PhysicalSpaceArray.diagonal", "splinepy.utils.data.PhysicalSpaceArray.dot", "splinepy.utils.data.PhysicalSpaceArray.dump", "splinepy.utils.data.PhysicalSpaceArray.dumps", "splinepy.utils.data.PhysicalSpaceArray.fill", "splinepy.utils.data.PhysicalSpaceArray.flatten", "splinepy.utils.data.PhysicalSpaceArray.full_row_indices", "splinepy.utils.data.PhysicalSpaceArray.getfield", "splinepy.utils.data.PhysicalSpaceArray.item", "splinepy.utils.data.PhysicalSpaceArray.max", "splinepy.utils.data.PhysicalSpaceArray.mean", "splinepy.utils.data.PhysicalSpaceArray.min", "splinepy.utils.data.PhysicalSpaceArray.nonzero", "splinepy.utils.data.PhysicalSpaceArray.partition", "splinepy.utils.data.PhysicalSpaceArray.prod", "splinepy.utils.data.PhysicalSpaceArray.put", "splinepy.utils.data.PhysicalSpaceArray.ravel", "splinepy.utils.data.PhysicalSpaceArray.repeat", "splinepy.utils.data.PhysicalSpaceArray.reshape", "splinepy.utils.data.PhysicalSpaceArray.resize", "splinepy.utils.data.PhysicalSpaceArray.round", "splinepy.utils.data.PhysicalSpaceArray.row_indices", "splinepy.utils.data.PhysicalSpaceArray.searchsorted", "splinepy.utils.data.PhysicalSpaceArray.setfield", "splinepy.utils.data.PhysicalSpaceArray.setflags", "splinepy.utils.data.PhysicalSpaceArray.sort", "splinepy.utils.data.PhysicalSpaceArray.squeeze", "splinepy.utils.data.PhysicalSpaceArray.std", "splinepy.utils.data.PhysicalSpaceArray.sum", "splinepy.utils.data.PhysicalSpaceArray.swapaxes", "splinepy.utils.data.PhysicalSpaceArray.take", "splinepy.utils.data.PhysicalSpaceArray.to_device", "splinepy.utils.data.PhysicalSpaceArray.tobytes", "splinepy.utils.data.PhysicalSpaceArray.tofile", "splinepy.utils.data.PhysicalSpaceArray.tolist", "splinepy.utils.data.PhysicalSpaceArray.tostring", "splinepy.utils.data.PhysicalSpaceArray.trace", "splinepy.utils.data.PhysicalSpaceArray.transpose", "splinepy.utils.data.PhysicalSpaceArray.var", "splinepy.utils.data.PhysicalSpaceArray.view", "splinepy.utils.data.SplineData", "splinepy.utils.data.SplineData.as_arrow", "splinepy.utils.data.SplineData.as_scalar", "splinepy.utils.data.SplineData.clear", "splinepy.utils.data.SplineData.get", "splinepy.utils.data.SplineData.items", "splinepy.utils.data.SplineData.keys", "splinepy.utils.data.SplineData.pop", "splinepy.utils.data.SplineData.update", "splinepy.utils.data.SplineData.values", "splinepy.utils.data.SplineDataAdaptor", "splinepy.utils.data.SplineDataAdaptor.arrow_data_only", "splinepy.utils.data.SplineDataAdaptor.as_vertex_data", "splinepy.utils.data.SplineDataAdaptor.data", "splinepy.utils.data.SplineDataAdaptor.function", "splinepy.utils.data.SplineDataAdaptor.has_evaluate", "splinepy.utils.data.SplineDataAdaptor.has_function", "splinepy.utils.data.SplineDataAdaptor.has_locations", "splinepy.utils.data.SplineDataAdaptor.is_spline", "splinepy.utils.data.SplineDataAdaptor.locations", "splinepy.utils.data.SplineDataAdaptor.parametric_bounds", "splinepy.utils.data.cartesian_product", "splinepy.utils.data.enforce_contiguous", "splinepy.utils.data.enforce_contiguous_values", "splinepy.utils.data.make_matrix", "splinepy.utils.data.uniform_query", "splinepy.utils.log", "splinepy.utils.log.configure", "splinepy.utils.log.debug", "splinepy.utils.log.error", "splinepy.utils.log.info", "splinepy.utils.log.prepend_log", "splinepy.utils.log.warning", "API References", "Install guide", "&lt;no title&gt;", "Introduction to Splines"], "titleterms": {"1": 724, "2": 724, "3": 724, "4": 724, "5": 724, "6": 724, "7": 724, "A": 726, "In": 726, "abs_fnam": 261, "add": 591, "add_assembly_opt": 251, "add_boundary_condit": 252, "add_field": [375, 540], "add_funct": 253, "additionalblock": [250, 251, 252, 253, 254], "all": 634, "an": 726, "ani": 635, "annul_cor": 592, "api": 723, "ar": 726, "arc": 138, "argmax": 636, "argmin": 637, "argpartit": 638, "argsort": 639, "armadillo": [295, 296, 297, 298, 299], "arrow_data": [157, 170], "arrow_data_onli": 701, "as_arrow": [624, 691], "as_scalar": [625, 692], "as_vertex_data": 702, "astyp": 640, "automat": 0, "b": 726, "base": [158, 171], "basi": [4, 35, 63, 93, 405, 435, 474, 563, 726], "basic": 726, "basis_and_support": [5, 36, 64, 94, 406, 436, 475, 564], "basis_deriv": [6, 37, 65, 95, 407, 437, 476, 565], "basis_derivative_and_support": [7, 38, 66, 96, 408, 438, 477, 566], "basis_function_deriv": 205, "basis_gradient_and_support": 206, "basis_hessian_and_support": 207, "basis_laplacian_and_support": 208, "bezier": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 159], "bezier_extraction_matrix": 593, "bezierbas": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "boundari": [160, 172, 376], "boundaries_from_continu": [377, 594], "boundary_cent": 595, "boundary_from_funct": 378, "boundary_multipatch": [379, 541], "boundary_patch_id": [380, 542], "box": 139, "bspline": [9, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "bsplinebas": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "build": 0, "build_typ": 596, "by_dim": 300, "byteswap": 641, "b\u00e9zier": 726, "c": [0, 723], "cartesian_product": 711, "cat": [243, 244, 245], "check": [0, 125, 126, 127, 128, 129, 130, 478], "check_bound": 464, "check_param": [298, 304, 309, 314, 319, 324, 329, 334, 341, 346, 351, 357, 363, 368], "check_param_deriv": [297, 303, 308, 313, 318, 323, 328, 333, 340, 345, 350, 356, 362, 367], "checker": [126, 127, 128], "chi": [301, 302, 303, 304, 305], "choos": 642, "circl": 140, "clamped_knot_vector": [127, 129], "clear": [10, 39, 68, 97, 221, 231, 381, 409, 439, 479, 543, 626, 693], "cli": [120, 121, 122, 123], "clip": 643, "closing_til": 352, "combine_boundari": 382, "compos": [11, 40, 440, 597], "compose_sensit": 598, "composition_deriv": [12, 41, 441, 599], "compress": 644, "compute_knot_vector": 190, "cone": 141, "configur": 717, "conj": 645, "conjug": 646, "content": 724, "contribut": [0, 724], "control_edg": [161, 173], "control_fac": [162, 174], "control_mesh": [163, 175], "control_mesh_resolut": [480, 567], "control_point": [164, 176, 482, 545], "control_point_bound": 481, "control_point_offset": [383, 544], "control_volum": [165, 177], "controlpointpoint": [523, 524, 525, 526, 527, 528, 529], "convert": 121, "copi": [13, 42, 69, 98, 410, 442, 483, 537, 647], "copy_valid_opt": [222, 232], "core_id": 600, "core_ref_count": 601, "cp": 484, "creat": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 287, 485, 724, 726], "create_til": [299, 305, 310, 315, 320, 325, 330, 335, 342, 347, 353, 358, 364, 369], "creator": [132, 133, 134, 135, 136, 137], "cross2d": [307, 308, 309, 310], "cross3d": [312, 313, 314, 315], "cross3dlinear": [317, 318, 319, 320], "cross_2d": [306, 307, 308, 309, 310], "cross_3d": [311, 312, 313, 314, 315], "cross_3d_linear": [316, 317, 318, 319, 320], "cube_void": [321, 322, 323, 324, 325], "cubevoid": [322, 323, 324, 325], "cumprod": 648, "cumsum": 649, "current_core_properti": [14, 43, 70, 99, 411, 443, 486, 568], "curv": [191, 726], "d": 490, "data": [622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 726], "debug": 718, "default": [246, 247, 248], "deform": 724, "deformation_funct": 288, "degre": 487, "deriv": [15, 44, 71, 100, 412, 444, 488, 569], "derivative_splin": [16, 45, 445, 602], "determinant_splin": [133, 142], "determine_interfac": 384, "diagon": 650, "dict_to_splin": 262, "differ": 726, "dim": [370, 385, 489, 524, 546, 570, 585], "disk": 143, "diverg": 209, "document": [0, 724], "dof_map": 274, "dot": 651, "double_lattic": [326, 327, 328, 329, 330], "doublelattic": [327, 328, 329, 330], "drawback": 726, "dump": [652, 653], "edg": [166, 178], "elevate_degre": [17, 46, 72, 101, 413, 446, 491, 571], "ellips_v_oid": [331, 332, 333, 334, 335], "ellipsvoid": [332, 333, 334, 335], "embed": [134, 144], "enforce_contigu": 712, "enforce_contiguous_valu": 713, "entri": 122, "error": 719, "evalu": [18, 47, 73, 102, 386, 414, 447, 492, 547, 572, 724], "evaluation_point": 371, "everyth": 336, "exampl": 726, "expand_tab": 263, "export": [19, 48, 74, 103, 244, 247, 255, 258, 268, 271, 275, 280, 283, 415, 448, 493], "export_cartesian": 276, "export_ig": 603, "extract": [155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 387, 494, 724], "extract_all_boundary_splin": 604, "extract_bezier_patch": [75, 104, 416, 605], "extract_boundari": 606, "extract_dim": [20, 49, 449, 607], "extractor": [156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "extrud": [135, 145], "face": [167, 179], "ffd": [182, 183, 184, 185, 186, 187, 188], "field": [388, 548], "field_deriv": 210, "fill": 654, "find_span": 531, "fit": [189, 190, 191, 192, 193, 194, 724], "flatten": 655, "flip_ax": 217, "form": 724, "form_lin": 264, "format": 0, "free": 724, "from_bound": 146, "full_row_indic": 656, "function": [704, 726], "further": 726, "gener": 726, "get": [223, 233, 337, 627, 694], "get_interfac": [389, 549], "getfield": 657, "gismo": [249, 250, 251, 252, 253, 254, 255, 256], "global_knot_insertion_matrix": 608, "gradient": 211, "graphic": 724, "greville_abscissa": [21, 50, 76, 105, 417, 450, 495], "guid": 724, "has_cor": 609, "has_evalu": 705, "has_funct": 706, "has_knot_vector": [496, 573], "has_loc": 707, "help": 726, "helper": 724, "helpm": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241], "hessian": 212, "hollow_cub": [338, 339, 340, 341, 342], "hollow_octagon": [343, 344, 345, 346, 347], "hollow_octagon_extrud": [348, 349, 350, 351, 352, 353], "hollowcub": [339, 340, 341, 342], "hollowoctagon": [344, 345, 346, 347], "hollowoctagonextrud": [349, 350, 351, 352, 353], "ig": [257, 258, 259], "implement": 0, "info": 720, "input": 724, "insert_knot": [77, 106, 418, 610], "instal": 724, "integr": [195, 196, 197, 198, 199, 200, 201, 202, 497], "interfac": 391, "interface_orient": [390, 550], "interfaces_from_boundary_cent": 611, "intersect": 470, "introduct": 726, "inverse_cross_3d": [354, 355, 356, 357, 358], "inversecross3d": [355, 356, 357, 358], "io": [242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283], "ioutil": [260, 261, 262, 263, 264, 265, 266], "irit": [267, 268, 269], "is_minim": 612, "is_rat": [498, 574], "is_splin": 708, "item": [224, 234, 628, 658, 695], "jacobian": [22, 51, 78, 107, 419, 451, 499, 575], "json": [270, 271, 272], "kei": [225, 235, 629, 696], "knot_insertion_matrix": [79, 108, 420, 613], "knot_multipl": 500, "knot_vector": 501, "knotvector": [530, 531, 532, 533, 534, 535], "kv": 502, "laplacian": 213, "len": [525, 586], "librari": 724, "line": 147, "list": 726, "load": [245, 248, 256, 259, 269, 272, 277, 281], "local": 0, "locat": 709, "log": [716, 717, 718, 719, 720, 721, 722], "make_matrix": 714, "make_meaning": 265, "make_show": 240, "mapper": [23, 52, 80, 109, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 421, 452, 503, 724], "max": 659, "mean": 660, "mesh": 184, "mfem": [273, 274, 275, 276, 277, 278], "microstructur": [284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 724], "microtil": 289, "min": 661, "modif": 724, "modul": 724, "multi_index": [214, 215, 504], "multiindex": 215, "multipatch": [373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 724], "multipatchdata": [623, 624, 625, 626, 627, 628, 629, 630, 631, 632], "multipatchshowopt": [220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 726], "multipl": 532, "multipli": 614, "n_default_thread": 551, "name": [505, 552, 576], "name_to_typ": 465, "next_lin": 266, "non": 726, "nonzero": 662, "normalize_knot_vector": [81, 110, 422], "notebook": 726, "npz": [279, 280, 281], "nthread": 466, "null_splin": 615, "numpi": 533, "nurb": [24, 82, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 453, 726], "onlin": 724, "output": 724, "overview": 723, "pad": 185, "para_dim": [372, 392, 506, 553, 577], "parameter": 192, "parameter_sensitivity_funct": 290, "parameterspac": [536, 537, 538], "parametric_bound": [507, 578, 710], "parametric_funct": [197, 200], "parametric_view": [136, 148], "parametrization_funct": 291, "partit": 663, "patch": [393, 554], "permute_parametric_ax": 218, "physical_funct": [198, 201], "physicalspacearrai": [633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689], "plate": 149, "plot": 726, "pop": [226, 236, 630, 697], "prefer": 0, "prepend_log": 721, "prod": 664, "properti": 726, "proxim": [25, 53, 83, 111, 424, 454, 508, 579], "put": 665, "pymultipatch": [539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561], "pyramid": 150, "pysplin": [562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583], "python": [0, 723], "quick": [0, 724], "ration": 726, "rational_bezi": [433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462], "rationalbezi": [26, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462], "ravel": 666, "read": 726, "read_ig": 616, "read_solut": 278, "reduce_degre": [27, 54, 84, 112, 425, 456, 509, 580], "refer": 723, "remove_knot": [85, 113, 426, 617], "reparametr": [216, 217, 218], "repeat": 667, "required_properti": 510, "requiredproperti": [469, 470, 471, 472], "reshap": 668, "resiz": 669, "revolv": [137, 151], "round": 670, "row_indic": 671, "same_parametric_bound": 555, "same_spline_with_knot_vector": 618, "sampl": [28, 55, 86, 114, 394, 427, 457, 511, 556, 581], "scale": 534, "searchsort": 672, "set": [463, 464, 465, 466, 467, 726], "set_boundari": 395, "set_interfac": [396, 557], "set_row": [526, 527, 587, 588], "setfield": 673, "setflag": 674, "show": [29, 56, 87, 115, 123, 186, 241, 292, 359, 397, 428, 458, 512], "show_opt": [398, 513, 726], "showabl": [30, 57, 88, 116, 187, 399, 429, 459, 514], "situat": 726, "snappi": [360, 361, 362, 363, 364], "solve_for_control_point": 193, "sort": 675, "sphere": 152, "spline": [168, 180, 188, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 724, 726], "spline_data": [400, 515], "splinedata": [690, 691, 692, 693, 694, 695, 696, 697, 698, 699], "splinedataadaptor": [700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710], "splinepi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722], "splinepy_cor": [522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619], "splineshowopt": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 726], "split": [31, 58, 460, 619], "squeez": 676, "start": [0, 724], "std": 677, "style": 0, "sub_multipatch": [401, 558], "sub_patch_cent": [402, 559], "sum": 678, "support": [32, 59, 89, 117, 430, 461, 516, 582], "surfac": 194, "surface_circl": 153, "svg": [282, 283], "swapax": 679, "sync": [528, 589], "sync_row": [529, 590], "tabl": 724, "take": 680, "tile": [293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372], "tile_bas": [365, 366, 367, 368, 369, 370, 371, 372], "tilebas": [366, 367, 368, 369, 370, 371, 372], "to_deriv": 620, "to_devic": 681, "to_list": 254, "tobyt": 682, "todict": [33, 60, 90, 118, 431, 462, 517], "tofil": 683, "toler": [467, 560], "tolist": 684, "toru": 154, "tostr": 685, "trace": 686, "transpos": 687, "try": 724, "type": 726, "uniform": 726, "uniform_queri": 715, "uniform_refin": [91, 119, 432], "union": 472, "uniqu": 535, "unique_knot": [518, 538], "updat": [227, 237, 631, 698], "util": [621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722], "valid_kei": [228, 238], "valid_queri": [128, 130], "valu": [229, 239, 632, 699], "var": 688, "vector": 724, "view": 689, "visual": [219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 726], "volum": [169, 181, 199, 202], "w": 521, "warn": 722, "weight": 519, "weightpoint": [584, 585, 586, 587, 588, 589, 590], "whatami": [520, 561, 583], "which": 726}})