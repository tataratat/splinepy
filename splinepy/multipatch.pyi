from _typeshed import Incomplete
from splinepy._base import SplinepyBase as _SplinepyBase
from splinepy.helpme import visualize as _visualize
from splinepy.splinepy_core import PyMultipatch as _PyMultipatch

class Multipatch(_SplinepyBase, _PyMultipatch):
    __show_option__ = _visualize.SplineShowOption
    def __init__(self, splines: Incomplete | None = None, interfaces: Incomplete | None = None, *, spline: Incomplete | None = None) -> None: ...
    @property
    def patches(self): ...
    @patches.setter
    def patches(self, list_of_splines) -> None: ...
    @property
    def interfaces(self): ...
    @interfaces.setter
    def interfaces(self, con) -> None: ...
    @property
    def boundaries(self): ...
    n_default_threads: Incomplete
    def boundary_multipatch(self, nthreads: Incomplete | None = None): ...
    def set_boundary(self, spline_ids, boundary_faces, boundary_id: Incomplete | None = None) -> None: ...
    @property
    def para_dim(self): ...
    @property
    def dim(self): ...
    @property
    def sub_patch_centers(self): ...
    tolerance: Incomplete
    def determine_interfaces(self, tolerance: Incomplete | None = None): ...
    def boundary_from_function(self, function, mask: Incomplete | None = None, boundary_id: Incomplete | None = None) -> None: ...
    @property
    def spline_data(self): ...
    @property
    def show_options(self): ...
    def showable(self, **kwargs): ...
    def show(self, **kwargs): ...
    def boundaries_from_continuity(self, nthreads: Incomplete | None = None, tolerance: Incomplete | None = None) -> None: ...
    def combine_boundaries(self, mask: Incomplete | None = None) -> None: ...
    def add_fields(self, fields, field_dim, check_compliance: bool = True, check_conformity: bool = True, nthreads: Incomplete | None = None) -> None: ...
    @property
    def fields(self): ...
    def sample(self, resolutions, nthreads: Incomplete | None = None): ...
    def evaluate(self, queries, nthreads: Incomplete | None = None): ...
    @property
    def extract(self): ...
