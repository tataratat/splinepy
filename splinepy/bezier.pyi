from _typeshed import Incomplete
from splinepy import spline as _spline

class BezierBase(_spline.Spline):
    def __init__(self, *args, **kwargs) -> None: ...
    def __mul__(self, factor): ...
    def __add__(self, summand): ...
    def derivative_spline(self, orders): ...
    def compose(self, inner_function, compute_sensitivities: bool = False): ...
    def composition_derivative(self, inner, inner_derivative): ...
    def split(self, para_dim, locations): ...
    def extract_dim(self, dim): ...

class Bezier(BezierBase):
    def __init__(self, degrees: Incomplete | None = None, control_points: Incomplete | None = None, spline: Incomplete | None = None) -> None: ...
    @property
    def bezier(self): ...
    @property
    def rationalbezier(self): ...
    @property
    def bspline(self): ...
    @property
    def nurbs(self): ...
